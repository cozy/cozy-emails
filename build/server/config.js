// Generated by CoffeeScript 1.10.0
var americano, config, cozydb, errorHandler, fs, log, path, useBuildView, viewsDir;

fs = require('fs');

path = require('path');

americano = require('americano');

cozydb = require('cozydb');

log = require('./utils/logging')({
  prefix: 'config'
});

errorHandler = require('./utils/errors').errorHandler;

viewsDir = path.resolve(__dirname, 'views');

useBuildView = fs.existsSync(path.resolve(viewsDir, 'index.js'));

config = {
  common: {
    set: {
      'view engine': useBuildView ? 'js' : 'jade',
      'views': viewsDir
    },
    engine: {
      js: function(path, locals, callback) {
        return callback(null, require(path)(locals));
      }
    },
    use: [
      americano.bodyParser(), americano.methodOverride(), americano["static"](__dirname + '/../client/public', {
        maxAge: 86400000
      })
    ],
    useAfter: [errorHandler],
    afterStart: function(app, server) {
      var ApplicationStartup, Scheduler, SocketHandler, assets, error, proc;
      Scheduler = require('./processes/_scheduler');
      SocketHandler = require('./utils/socket_handler');
      ApplicationStartup = require('./processes/application_startup');
      SocketHandler.setup(app, server);
      try {
        assets = require('../webpack-assets.json').main;
      } catch (error) {
        assets = {
          js: 'app.js',
          css: 'app.css'
        };
      }
      app.locals.assets = assets;
      proc = new ApplicationStartup();
      return Scheduler.schedule(proc, function(err) {
        return log.info("Initialization complete");
      });
    }
  },
  development: [americano.logger('dev')],
  production: [americano.logger('short')],
  plugins: ['cozydb']
};

module.exports = config;
