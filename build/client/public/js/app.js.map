{"version":3,"sources":["app/actions/account_action_creator.coffee","app/actions/contact_action_creator.coffee","app/actions/layout_action_creator.coffee","app/actions/message_action_creator.coffee","app/actions/search_action_creator.coffee","app/actions/settings_action_creator.coffee","app/app_dispatcher.coffee","app/components/account_config.coffee","app/components/account_config_delete.coffee","app/components/account_config_input.coffee","app/components/account_config_item.coffee","app/components/account_config_mailboxes.coffee","app/components/account_config_main.coffee","app/components/account_config_signature.coffee","app/components/account_picker.coffee","app/components/alert.coffee","app/components/application.coffee","app/components/attachement_preview.coffee","app/components/basic_components.coffee","app/components/compose.coffee","app/components/compose_editor.coffee","app/components/compose_toolbox.coffee","app/components/contact_label.coffee","app/components/conversation.coffee","app/components/date_range_picker.coffee","app/components/file_picker.coffee","app/components/mailbox_list.coffee","app/components/mails_input.coffee","app/components/menu.coffee","app/components/message-list-body.coffee","app/components/message-list-item.coffee","app/components/message-list.coffee","app/components/message.coffee","app/components/message_footer.coffee","app/components/message_header.coffee","app/components/modal.coffee","app/components/panel.coffee","app/components/participant.coffee","app/components/popup_message_attachments.coffee","app/components/popup_message_details.coffee","app/components/search-form.coffee","app/components/settings.coffee","app/components/toast.coffee","app/components/toast_container.coffee","app/components/toolbar_conversation.coffee","app/components/toolbar_message.coffee","app/components/toolbar_messageslist.coffee","app/components/toolbar_messageslist_actions.coffee","app/components/toolbar_messageslist_filters.coffee","app/components/toolbar_messageslist_search.coffee","app/components/toolbox_actions.coffee","app/components/toolbox_move.coffee","app/components/tooltips-manager.coffee","app/constants/app_constants.coffee","app/initialize.coffee","app/libs/flux/dispatcher/dispatcher.coffee","app/libs/flux/invariant.js","app/libs/flux/store/store.coffee","app/libs/panel_router.coffee","app/locales/de.coffee","app/locales/en.coffee","app/locales/fr.coffee","app/mixins/participant_mixin.coffee","app/mixins/router_mixin.coffee","app/mixins/store_watch_mixin.coffee","app/mixins/tooltip_refresher_mixin.coffee","app/router.coffee","app/stores/account_store.coffee","app/stores/contact_store.coffee","app/stores/layout_store.coffee","app/stores/message_store.coffee","app/stores/refreshes_store.coffee","app/stores/search_store.coffee","app/stores/settings_store.coffee","app/utils/activity_utils.coffee","app/utils/api_utils.coffee","app/utils/colorhash.coffee","app/utils/dom_utils.coffee","app/utils/file_utils.coffee","app/utils/intent_manager.coffee","app/utils/message_utils.coffee","app/utils/plugin_utils.coffee","app/utils/socketio_utils.coffee","app/utils/translators/account_translator.coffee","app/utils/xhr_utils.coffee"],"names":[],"mappings":"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","file":"/home/frankrousseau/projets/apps/cozy-emails/build/client/public/js/app.js","sourcesContent":["XHRUtils = require '../utils/xhr_utils'\nAppDispatcher = require '../app_dispatcher'\n{ActionTypes} = require '../constants/app_constants'\n\nAccountStore = require '../stores/account_store'\nLayoutActionCreator = null\nMessageActionCreator = require './message_action_creator'\n\nalertError = (error) ->\n    LayoutActionCreator = require '../actions/layout_action_creator'\n    if error.name is 'AccountConfigError'\n        message = t \"config error #{error.field}\"\n        LayoutActionCreator.alertError message\n    else\n        # try to handle every possible case\n        message = error.message or error.name or error\n        LayoutActionCreator.alertError message\n\nmodule.exports = AccountActionCreator =\n\n    create: (inputValues, afterCreation) ->\n        AccountActionCreator._setNewAccountWaitingStatus true\n\n        XHRUtils.createAccount inputValues, (error, account) ->\n            if error? or not account?\n                AccountActionCreator._setNewAccountError error\n                if error?\n                    alertError error\n            else\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.ADD_ACCOUNT\n                    value: account\n\n                afterCreation(AccountStore.getByID account.id)\n\n\n    edit: (inputValues, accountID, callback) ->\n        AccountActionCreator._setNewAccountWaitingStatus true\n\n        account = AccountStore.getByID accountID\n        newAccount = account.mergeDeep inputValues\n\n        XHRUtils.editAccount newAccount, (error, rawAccount) ->\n            if error?\n                AccountActionCreator._setNewAccountError error\n                alertError error\n            else\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.EDIT_ACCOUNT\n                    value: rawAccount\n                LayoutActionCreator = require '../actions/layout_action_creator'\n                LayoutActionCreator.notify t('account updated'), autoclose: true\n                callback?()\n\n    check: (inputValues, accountID, cb) ->\n        if accountID?\n            account = AccountStore.getByID accountID\n            newAccount = account.mergeDeep(inputValues).toJS()\n        else\n            newAccount = inputValues\n\n        XHRUtils.checkAccount newAccount, (error, rawAccount) ->\n            if error?\n                AccountActionCreator._setNewAccountError error\n                alertError error\n            else\n                LayoutActionCreator = require '../actions/layout_action_creator'\n                LayoutActionCreator.notify t('account checked'), autoclose: true\n            if cb?\n                cb error, rawAccount\n\n    remove: (accountID) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.REMOVE_ACCOUNT\n            value: accountID\n        XHRUtils.removeAccount accountID\n        LayoutActionCreator = require '../actions/layout_action_creator'\n        LayoutActionCreator.notify t('account removed'), autoclose: true\n        window.router.navigate '', trigger: true\n\n    _setNewAccountWaitingStatus: (status) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.NEW_ACCOUNT_WAITING\n            value: status\n\n    _setNewAccountError: (errorMessage) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.NEW_ACCOUNT_ERROR\n            value: errorMessage\n\n    selectAccount: (accountID, mailboxID) ->\n        changed = AccountStore.selectedIsDifferentThan accountID, mailboxID\n\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SELECT_ACCOUNT\n            value:\n                accountID: accountID\n                mailboxID: mailboxID\n\n        selected = AccountStore.getSelected()\n        supportRFC4551 = selected?.get('supportRFC4551')\n\n        if mailboxID? and changed and supportRFC4551\n            MessageActionCreator.refreshMailbox(mailboxID)\n\n    discover: (domain, callback) ->\n        XHRUtils.accountDiscover domain, (err, infos) ->\n            if not infos?\n                infos = []\n            callback err, infos\n\n    mailboxCreate: (inputValues, callback) ->\n        XHRUtils.mailboxCreate inputValues, (error, account) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MAILBOX_CREATE\n                    value: account\n            if callback?\n                callback error\n\n    mailboxUpdate: (inputValues, callback) ->\n        XHRUtils.mailboxUpdate inputValues, (error, account) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MAILBOX_UPDATE\n                    value: account\n            if callback?\n                callback error\n\n\n    mailboxDelete: (inputValues, callback) ->\n        XHRUtils.mailboxDelete inputValues, (error, account) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MAILBOX_DELETE\n                    value: account\n            if callback?\n                callback error\n\n    mailboxExpunge: (inputValues, callback) ->\n        # delete message from local store to refresh display, we'll fetch them\n        # again on error\n        AppDispatcher.handleViewAction\n            type: ActionTypes.MAILBOX_EXPUNGE\n            value: inputValues.mailboxID\n\n        XHRUtils.mailboxExpunge inputValues, (error, account) ->\n            if callback?\n                callback error\n","AppDispatcher = require '../app_dispatcher'\n{ActionTypes} = require '../constants/app_constants'\nActivity = require '../utils/activity_utils'\nLayoutActionCreator = require '../actions/layout_action_creator'\n\nmodule.exports = ContactActionCreator =\n\n\n    searchContact: (query) ->\n        options =\n            name: 'search'\n            data:\n                type: 'contact'\n                query: query\n\n        activity = new Activity options\n\n        activity.onsuccess = ->\n            AppDispatcher.handleViewAction\n                type: ActionTypes.RECEIVE_RAW_CONTACT_RESULTS\n                value: @result\n\n        activity.onerror = ->\n            console.log \"KO\", @error, @name\n\n\n    searchContactLocal: (query) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.CONTACT_LOCAL_SEARCH\n            value: query\n\n\n    createContact: (contact) ->\n        options =\n            name: 'create'\n            data:\n                type: 'contact'\n                contact: contact\n\n        activity = new Activity options\n\n        activity.onsuccess = (err, res) ->\n            AppDispatcher.handleViewAction\n                type: ActionTypes.RECEIVE_RAW_CONTACT_RESULTS\n                value: @result\n\n            msg = t('contact create success',\n                {contact: contact.name or contact.address})\n            LayoutActionCreator.notify msg, autoclose: true\n\n        activity.onerror = ->\n            console.log @name\n            msg = t('contact create error', {error: @name})\n            LayoutActionCreator.alertError msg, autoclose: true\n\n","XHRUtils = require '../utils/xhr_utils'\nSocketUtils = require '../utils/socketio_utils'\n\nLayoutStore  = require '../stores/layout_store'\nAccountStore = require '../stores/account_store'\nMessageStore = require '../stores/message_store'\n\nAppDispatcher = require '../app_dispatcher'\n\n{ActionTypes, AlertLevel, MessageFlags} = require '../constants/app_constants'\n\nAccountActionCreator = require './account_action_creator'\nSearchActionCreator = require './search_action_creator'\n\n_cachedQuery = {}\n\nmodule.exports = LayoutActionCreator =\n\n    setDisposition: (type) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SET_DISPOSITION\n            value: type\n\n    # TODO: use a global method to DRY this 3-ones\n    increasePreviewPanel: (factor = 1) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RESIZE_PREVIEW_PANE\n            value: Math.abs factor\n\n    decreasePreviewPanel: (factor = 1) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RESIZE_PREVIEW_PANE\n            value: -1 * Math.abs factor\n\n    resetPreviewPanel: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RESIZE_PREVIEW_PANE\n            value: null\n\n    toggleFullscreen: ->\n        type = if LayoutStore.isPreviewFullscreen()\n            ActionTypes.MINIMIZE_PREVIEW_PANE\n        else\n            ActionTypes.MAXIMIZE_PREVIEW_PANE\n\n        AppDispatcher.handleViewAction\n            type: type\n\n    minimizePreview: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.MINIMIZE_PREVIEW_PANE\n\n    refresh: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.REFRESH\n            value: null\n\n    alert: (message) ->\n        LayoutActionCreator.notify message,\n            level: AlertLevel.INFO\n            autoclose: true\n\n    alertSuccess: (message) ->\n        LayoutActionCreator.notify message,\n            level: AlertLevel.SUCCESS\n            autoclose: true\n\n    alertWarning: (message) ->\n        LayoutActionCreator.notify message,\n            level: AlertLevel.WARNING\n            autoclose: true\n\n    alertError: (message) ->\n        LayoutActionCreator.notify message,\n            level: AlertLevel.ERROR\n            autoclose: true\n\n    notify: (message, options) ->\n        if not message? or message.toString().trim() is ''\n            # Throw an error to get the stack trace in server logs\n            throw new Error 'Empty notification'\n        else\n            task =\n                id: Date.now()\n                finished: true\n                message: message.toString()\n\n            if options?\n                task.autoclose = options.autoclose\n                task.errors = options.errors\n                task.finished = options.finished\n                task.actions = options.actions\n                task.level = options.level\n\n            AppDispatcher.handleViewAction\n                type: ActionTypes.RECEIVE_TASK_UPDATE\n                value: task\n\n    clearToasts: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.CLEAR_TOASTS\n            value: null\n\n    filterMessages: (filter) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.LIST_FILTER\n            value: filter\n\n    sortMessages: (sort) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.LIST_SORT\n            value: sort\n\n    getDefaultRoute: ->\n        # if there is no account, we display the configAccount\n        if AccountStore.getAll().length is 0 then 'account.new'\n        # else go directly to first account\n        else 'account.mailbox.messages'\n\n    showMessageList: (panelInfo) ->\n        {accountID, mailboxID} = panelInfo.parameters\n        selectedAccount = AccountStore.getSelected()\n        selectedMailbox = AccountStore.getSelectedMailbox()\n        if not selectedAccount? or\n        selectedAccount.get('id') isnt accountID or\n        selectedMailbox.get('id') isnt mailboxID\n            AccountActionCreator.selectAccount accountID, mailboxID\n\n        cached = _cachedQuery.mailboxID is mailboxID\n        query = {}\n        ['sort', 'after', 'before', 'flag', 'pageAfter'].forEach (param) ->\n            value = panelInfo.parameters[param]\n            if value? and value isnt ''\n                query[param] = value\n            if _cachedQuery[param] isnt value\n                _cachedQuery[param] = value\n                cached = false\n        _cachedQuery.mailboxID = mailboxID\n\n        if not cached\n            AppDispatcher.handleViewAction\n                type: ActionTypes.MESSAGE_FETCH_REQUEST\n                value: {mailboxID, query}\n\n            updated = Date.now()\n            XHRUtils.fetchMessagesByFolder mailboxID, query, (err, rawMsg) ->\n                if err?\n                    AppDispatcher.handleViewAction\n                        type: ActionTypes.MESSAGE_FETCH_FAILURE\n                        value: {mailboxID, query}\n                else\n                    # This prevent to override local updates with older ones\n                    # from server\n                    rawMsg.messages.forEach (msg) ->\n                        msg.updated = updated\n                    AppDispatcher.handleViewAction\n                        type: ActionTypes.MESSAGE_FETCH_SUCCESS\n                        value: {mailboxID, query, fetchResult: rawMsg}\n\n    # Apply filters and sort criteria on message list then display it\n    showFilteredList: (filter, sort) ->\n        @filterMessages filter\n        @sortMessages sort\n\n        params           = _.clone(MessageStore.getParams())\n        params.accountID = AccountStore.getSelected().get 'id'\n        params.mailboxID = AccountStore.getSelectedMailbox().get 'id'\n        @showMessageList parameters: params\n\n    showMessage: (panelInfo, direction) ->\n        onMessage = (msg) ->\n            # if there isn't a selected account (page loaded directly),\n            # select the message's account\n            selectedAccount = AccountStore.getSelected()\n            if  not selectedAccount? and msg?.accountID\n                AccountActionCreator.selectAccount msg.accountID\n        messageID = panelInfo.parameters.messageID\n        message = MessageStore.getByID messageID\n        if message?\n            onMessage message\n        else\n            XHRUtils.fetchMessage messageID, (err, rawMessage) ->\n\n                if err?\n                    LayoutActionCreator.alertError err\n                else\n                    MessageActionCreator.receiveRawMessage rawMessage\n                    onMessage rawMessage\n\n    showConversation: (panelInfo, direction) ->\n        onMessage = (msg) ->\n            # if there isn't a selected account (page loaded directly),\n            # select the message's account\n            selectedAccount = AccountStore.getSelected()\n            if  not selectedAccount? and msg?.accountID\n                AccountActionCreator.selectAccount msg.accountID\n        messageID      = panelInfo.parameters.messageID\n        conversationID = panelInfo.parameters.conversationID\n        message        = MessageStore.getByID messageID\n        if message?\n            onMessage message\n\n        length = MessageStore.getConversationsLength().get(conversationID)\n        if length? and length > 1\n            MessageActionCreator.fetchConversation conversationID\n\n    showComposeNewMessage: (panelInfo, direction) ->\n        # if there isn't a selected account (page loaded directly),\n        # select the default account\n        selectedAccount = AccountStore.getSelected()\n        if not selectedAccount?\n            defaultAccount = AccountStore.getDefault()\n            AccountActionCreator.selectAccount defaultAccount.get 'id'\n\n    # Edit draft\n    showComposeMessage: (panelInfo, direction) ->\n        # if there isn't a selected account (page loaded directly),\n        # select the default account\n        selectedAccount = AccountStore.getSelected()\n        if not selectedAccount?\n            defaultAccount = AccountStore.getDefault()\n            AccountActionCreator.selectAccount defaultAccount.get 'id'\n\n    showCreateAccount: (panelInfo, direction) ->\n        AccountActionCreator.selectAccount null\n\n    showConfigAccount: (panelInfo, direction) ->\n        AccountActionCreator.selectAccount panelInfo.parameters.accountID\n\n    showSearch: (panelInfo, direction) ->\n        AccountActionCreator.selectAccount null\n\n        {query, page} = panelInfo.parameters\n\n        SearchActionCreator.setQuery query\n\n        XHRUtils.search query, page, (err, results) ->\n            if err?\n                console.log err\n            else\n                SearchActionCreator.receiveRawSearchResults results\n\n    showSettings: (panelInfo, direction) ->\n\n    toastsShow: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.TOASTS_SHOW\n\n    toastsHide: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.TOASTS_HIDE\n\n    intentAvailability: (availability) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.INTENT_AVAILABLE\n            value: availability\n\n    # Drawer\n    drawerShow: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.DRAWER_SHOW\n\n    drawerHide: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.DRAWER_HIDE\n\n    drawerToggle: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.DRAWER_TOGGLE\n\n    displayModal: (params) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.DISPLAY_MODAL\n            value: params\n\n    hideModal: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.HIDE_MODAL\n\n# circular import, require after\nMessageActionCreator = require './message_action_creator'\n","AppDispatcher = require '../app_dispatcher'\nConstants = require '../constants/app_constants'\n{ActionTypes, MessageFlags, FlagsConstants} = Constants\nXHRUtils      = require '../utils/xhr_utils'\nAccountStore  = require \"../stores/account_store\"\nMessageStore  = require '../stores/message_store'\nrefCounter=1\n\nmodule.exports = MessageActionCreator =\n\n    receiveRawMessages: (messages) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_RAW_MESSAGES\n            value: messages\n\n    receiveRawMessage: (message) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_RAW_MESSAGE\n            value: message\n\n    send: (message, callback) ->\n        XHRUtils.messageSend message, (error, message) ->\n            if (not error?) and (message?)\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MESSAGE_SEND\n                    value: message\n            callback? error, message\n\n    # set conv to true to update current conversation ID\n    setCurrent: (messageID, conv) ->\n        if messageID? and typeof messageID isnt 'string'\n            messageID = messageID.get 'id'\n        AppDispatcher.handleViewAction\n            type: ActionTypes.MESSAGE_CURRENT\n            value:\n                messageID: messageID\n                conv: conv\n\n    fetchConversation: (conversationID) ->\n\n        AppDispatcher.handleViewAction\n            type: ActionTypes.CONVERSATION_FETCH_REQUEST\n            value: {conversationID}\n\n        XHRUtils.fetchConversation conversationID, (error, updated) ->\n            if error\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.CONVERSATION_FETCH_FAILURE\n                    value: {error}\n            else\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.CONVERSATION_FETCH_SUCCESS\n                    value: {error, updated}\n\n\n    # Immediately synchronise some messages with the server\n    # Used if one of the action fail\n    recover: (target, ref) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.MESSAGE_RECOVER_REQUEST\n            value: {ref}\n\n        XHRUtils.batchFetch target, (err, messages) ->\n            if err\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MESSAGE_RECOVER_FAILURE\n                    value: {ref}\n            else\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MESSAGE_RECOVER_SUCCESS\n                    value: {ref}\n\n    refreshMailbox: (mailboxID) ->\n        unless AccountStore.isMailboxRefreshing(mailboxID)\n            AppDispatcher.handleViewAction\n                type: ActionTypes.REFRESH_REQUEST\n                value: {mailboxID}\n\n            XHRUtils.refreshMailbox mailboxID, (error, updated) ->\n                if error?\n                    AppDispatcher.handleViewAction\n                        type: ActionTypes.REFRESH_FAILURE\n                        value: {mailboxID, error}\n                else\n                    AppDispatcher.handleViewAction\n                        type: ActionTypes.REFRESH_SUCCESS\n                        value: {mailboxID, updated}\n\n    # Delete message(s)\n    # target:\n    #  - messageID or messageIDs or conversationIDs or conversationIDs\n    #  - isDraft?\n    #  - silent? (don't display confirmation message when deleting\n    #    an empty draft)\n    delete: (target, callback) ->\n        ref = refCounter++\n        AppDispatcher.handleViewAction\n            type: ActionTypes.MESSAGE_TRASH_REQUEST\n            value: {target, ref}\n\n        ts = Date.now()\n        # send request\n        XHRUtils.batchDelete target, (error, updated) =>\n            if error\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MESSAGE_TRASH_FAILURE\n                    value: {target, ref, error}\n\n                # we dont know if some succeeded or not,\n                # in doubt, recover the changed to messages to sync with\n                # server\n                @recover target, ref\n            else\n                msg.updated = ts for msg in updated\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MESSAGE_TRASH_SUCCESS\n                    value: {target, ref, updated}\n\n\n    move: (target, from, to, callback) ->\n        ref = refCounter++\n        AppDispatcher.handleViewAction\n            type: ActionTypes.MESSAGE_MOVE_REQUEST\n            value: {target, ref, from, to}\n\n        ts = Date.now()\n        # send request\n        XHRUtils.batchMove target, from, to, (error, updated) =>\n            if error\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MESSAGE_MOVE_FAILURE\n                    value: {target, ref, error}\n\n                # we dont know if some succeeded or not,\n                # in doubt, recover the changed to messages to sync with\n                # server\n                @recover target, ref\n            else\n                msg.updated = ts for msg in updated\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MESSAGE_MOVE_SUCCESS\n                    value: {target, ref, updated}\n\n            callback? error, updated\n\n    mark: (target, flagAction, callback) ->\n        ref = refCounter++\n\n        switch flagAction\n            when FlagsConstants.SEEN\n                op = 'batchAddFlag'\n                flag = FlagsConstants.SEEN\n            when FlagsConstants.FLAGGED\n                op = 'batchAddFlag'\n                flag = FlagsConstants.FLAGGED\n            when FlagsConstants.UNSEEN\n                op = 'batchRemoveFlag'\n                flag = FlagsConstants.SEEN\n            when FlagsConstants.NOFLAG\n                op = 'batchRemoveFlag'\n                flag = FlagsConstants.FLAGGED\n            else\n                throw new Error \"Wrong usage : unrecognized FlagsConstants\"\n\n        AppDispatcher.handleViewAction\n            type: ActionTypes.MESSAGE_FLAGS_REQUEST\n            value: {target, ref, op, flag, flagAction}\n\n        ts = Date.now()\n\n        XHRUtils[op] target, flag, (error, updated) =>\n            if error\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MESSAGE_FLAGS_FAILURE\n                    value: {target, ref, error, op, flag, flagAction}\n\n                # we dont know if some succeeded or not,\n                # in doubt, recover the changed to messages to sync with\n                # server\n                @recover target, ref\n            else\n                msg.updated = ts for msg in updated\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MESSAGE_FLAGS_SUCCESS\n                    value: {target, ref, updated, op, flag, flagAction}\n\n            callback? error, updated\n\n    undo: (ref) ->\n\n        request = MessageStore.getUndoableRequest ref\n        {messages, type, from, to, target, trashBoxID} = request\n        reverseAction = []\n\n        oldto = if type is 'move' then to else trashBoxID\n        bydest = {}\n        # messages are the old messages\n        messages.forEach (message) ->\n            dest = (boxid for boxid, uid of message.get('mailboxIDs'))\n            destString = dest.sort().join(',')\n            bydest[destString] ?= {to: dest, from: oldto, messageIDs: []}\n            bydest[destString].messageIDs.push message.get('id')\n\n        AppDispatcher.handleViewAction\n            type: ActionTypes.MESSAGE_UNDO_START\n            value: {ref}\n\n        _loopSeries bydest, (request, dest, next) ->\n            {to, from, messageIDs} = request\n            target = {messageIDs, silent: true}\n            MessageActionCreator.move target, from, to, next\n        , (error) ->\n            if error\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MESSAGE_UNDO_FAILURE\n                    value: {ref}\n\n                # we dont know if some succeeded or not,\n                # in doubt, recover the changed to messages to sync with\n                # server\n                @recover target, ref\n            else\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MESSAGE_UNDO_SUCCESS\n                    value: {ref}\n\n\n_loopSeries = (obj, iterator, done) ->\n    keys = Object.keys(obj)\n    i = 0\n    do step = ->\n        key = keys[i]\n        iterator obj[key], key, (err) ->\n            return done err if err\n            return done null if ++i is keys.length\n            step()\n\n# circular, import after\nLAC = require './layout_action_creator'\n","AppDispatcher = require '../app_dispatcher'\n{ActionTypes} = require '../constants/app_constants'\n\nmodule.exports = SearchActionCreator =\n\n    setQuery: (query) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SET_SEARCH_QUERY\n            value: query\n\n    receiveRawSearchResults: (results) ->\n\n        # first clear the previous results\n        SearchActionCreator.clearSearch false\n\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_RAW_SEARCH_RESULTS\n            value: results\n\n    clearSearch: (clearQuery = true) ->\n        if clearQuery then SearchActionCreator.setQuery \"\"\n\n        AppDispatcher.handleViewAction\n            type: ActionTypes.CLEAR_SEARCH_RESULTS\n            value: null\n\n","XHRUtils = require '../utils/xhr_utils'\nAppDispatcher = require '../app_dispatcher'\n{ActionTypes} = require '../constants/app_constants'\n\nSettingsStore = require '../stores/settings_store'\nLayoutActionCreator = require './layout_action_creator'\n\nmodule.exports = SettingsActionCreator =\n\n    edit: (inputValues) ->\n        XHRUtils.changeSettings inputValues, (err, values) ->\n            if err\n                LayoutActionCreator.alertError t('settings save error') + err\n\n            else\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.SETTINGS_UPDATED\n                    value: values\n\n","Dispatcher = require './libs/flux/dispatcher/dispatcher'\n{PayloadSources} = require './constants/app_constants'\n\n###\n    Custom dispatcher class to add semantic method.\n###\nclass AppDispatcher extends Dispatcher\n\n    handleViewAction: (action) ->\n        window.cozyMails.logAction action\n        payload =\n            source: PayloadSources.VIEW_ACTION\n            action: action\n\n        @dispatch payload\n\n        # create and dispatch a DOM event for plugins\n        window.cozyMails.customEvent PayloadSources.VIEW_ACTION, action\n\n    handleServerAction: (action) ->\n        window.cozyMails.logAction action\n        payload =\n            source: PayloadSources.SERVER_ACTION\n            action: action\n\n        @dispatch payload\n\n        # create and dispatch a DOM event for plugins\n        window.cozyMails.customEvent PayloadSources.SERVER_ACTION, action\n\n\nmodule.exports = new AppDispatcher()\n","AccountActionCreator = require '../actions/account_action_creator'\nLayoutActions = require '../actions/layout_action_creator'\n\nRouterMixin = require '../mixins/router_mixin'\n{Container, Title, Tabs} = require './basic_components'\nAccountConfigMain = require './account_config_main'\nAccountConfigMailboxes = require './account_config_mailboxes'\nAccountConfigSignature = require './account_config_signature'\n\n\nmodule.exports = React.createClass\n    displayName: 'AccountConfig'\n\n    _lastDiscovered: ''\n\n    mixins: [\n        RouterMixin\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n    _accountFields: [\n        'id'\n        'label'\n        'name'\n        'login'\n        'password'\n        'imapServer'\n        'imapPort'\n        'imapSSL'\n        'imapTLS'\n        'imapLogin'\n        'smtpServer'\n        'smtpPort'\n        'smtpSSL'\n        'smtpTLS'\n        'smtpLogin'\n        'smtpPassword'\n        'smtpMethod'\n        'accountType'\n    ]\n\n    _mailboxesFields: [\n        'id'\n        'mailboxes'\n        'favoriteMailboxes'\n        'draftMailbox'\n        'sentMailbox'\n        'trashMailbox'\n    ]\n\n\n    _accountSchema:\n        properties:\n            label: allowEmpty: false\n            name: allowEmpty: false\n            login: allowEmpty: false\n            password: allowEmpty: false\n            imapServer: allowEmpty: false\n            imapPort: allowEmpty: false\n            imapSSL: allowEmpty: true\n            imapTLS: allowEmpty: true\n            imapLogin: allowEmpty: true\n            smtpServer: allowEmpty: false\n            smtpPort: allowEmpty: false\n            smtpSSL: allowEmpty: true\n            smtpTLS: allowEmpty: true\n            smtpLogin: allowEmpty: true\n            smtpMethod: allowEmpty: true\n            smtpPassword: allowEmpty: true\n            draftMailbox: allowEmpty: true\n            sentMailbox: allowEmpty: true\n            trashMailbox: allowEmpty: true\n            accountType: allowEmpty: true\n\n\n    getInitialState: ->\n        return @accountToState @props\n\n\n    # Do not update component if nothing has changed.\n    shouldComponentUpdate: (nextProps, nextState) ->\n        isNextState = _.isEqual nextState, @state\n        isNextProps = _.isEqual nextProps, @props\n        return not (isNextState and isNextProps)\n\n\n    componentWillReceiveProps: (props) ->\n        # prevents the form from changing during submission\n        if props.selectedAccount? and not props.isWaiting\n            @setState @accountToState props\n\n        else\n\n            if props.error?\n\n                if props.error.name is 'AccountConfigError'\n                    errors = {}\n                    field = props.error.field\n\n                    if field is 'auth'\n                        errors.login = t 'config error auth'\n                        errors.password = t 'config error auth'\n\n                    else\n                        errors[field] = t 'config error ' + field\n\n                    @setState errors: errors\n            else\n\n                if not props.isWaiting and not _.isEqual(props, @props)\n                    @setState @accountToState null\n\n\n    render: ->\n        mainOptions = @buildMainOptions()\n        mailboxesOptions = @buildMailboxesOptions()\n        titleLabel = @buildTitleLabel()\n        tabParams = @buildTabParams()\n\n        Container\n            id: 'mailbox-config'\n            key: \"account-config-#{@props.selectedAccount?.get 'id'}\"\n        ,\n            Title text: titleLabel\n            if @props.tab?\n                Tabs tabs: tabParams\n            if not @props.tab or @props.tab is 'account'\n                AccountConfigMain mainOptions\n            else if @props.tab is 'signature'\n                AccountConfigSignature\n                    account: @props.selectedAccount\n                    editAccount: @editAccount\n            else\n                AccountConfigMailboxes mailboxesOptions\n\n\n    # Build options shared by both tabs.\n    buildMainOptions: (options) ->\n\n        options =\n            isWaiting: @props.isWaiting\n            selectedAccount: @props.selectedAccount\n            validateForm: @validateForm\n            onSubmit: @onSubmit\n            onBlur: @onFieldBlurred\n            errors: @state.errors\n            checking: @state.checking\n\n        options[field] = @linkState field for field in @_accountFields\n\n        return options\n\n\n    # Build options required by mailbox tab.\n    buildMailboxesOptions: (options) ->\n\n        options =\n            error: @props.error\n            errors: @state.errors\n            onSubmit: @onSubmit\n            selectedAccount: @props.selectedAccount\n\n        # /!\\ we cannot use @linkState here because we need to be able\n        # to call a method after state has been updated\n        for field in @_mailboxesFields\n            options[field] =\n                value: @state[field]\n                requestChange: (val, cb) =>\n                    state = {}\n                    state[field] = val\n                    @setState state, cb\n\n        return options\n\n\n    # Build tab panel title depending if we show the component for a new\n    # account or for an edition.\n    buildTitleLabel: ->\n        if @state.id\n            titleLabel = t \"account edit\"\n        else\n            titleLabel = t \"account new\"\n\n        return titleLabel\n\n\n    # Build tab navigation depending if we show the component for a new\n    # account, for an edition or or changing account signaure\n    # (no tab navigation if we are in a creation mode).\n    buildTabParams: ->\n        tabAccountClass = tabMailboxClass = tabSignatureClass = ''\n\n        if not @props.tab or @props.tab is 'account'\n            tabAccountClass = 'active'\n        else if @props.tab is 'mailboxes'\n            tabMailboxClass = 'active'\n        else if @props.tab is 'signature'\n            tabSignatureClass = 'active'\n\n        tabs = [\n                class: tabAccountClass\n                url: @buildUrl\n                    direction: 'first'\n                    action: 'account.config'\n                    parameters: [@state.id, 'account']\n                text: t \"account tab account\"\n            ,\n                class: tabMailboxClass\n                url: @buildUrl\n                    direction: 'first'\n                    action: 'account.config'\n                    parameters: [@state.id, 'mailboxes']\n                text: t \"account tab mailboxes\"\n            ,\n                class: tabSignatureClass\n                url:  @buildUrl\n                    direction: 'first'\n                    action: 'account.config'\n                    parameters: [@state.id, 'signature']\n                text: t \"account tab signature\"\n        ]\n        return tabs\n\n\n    # When a field changes, if the form was not submitted, nothing happens,\n    # it the form was submitted on time, we run the whole validation again.\n    onFieldBlurred: ->\n        @validateForm() if @state.submitted\n\n\n    # Form submission displays errors if form values are wrong.\n    # If everything is ok, it runs the checking, the account edition and the\n    # creation depending on the current state and if the user submitted it\n    # with the check button.\n    onSubmit: (event, check) ->\n        event.preventDefault() if event?\n\n        {accountValue, valid, errors} = @validateForm()\n\n        if Object.keys(errors).length > 0\n            LayoutActions.alertError t 'account errors'\n\n        if valid.valid\n\n            if check is true\n                @checkAccount accountValue\n\n            else if @state.id?\n                @editAccount accountValue\n\n            else\n                @createAccount accountValue\n\n\n    # Check wether form values are right. Then it displays or remove dispayed\n    # errors dependning on the result.\n    # To achieve that, it changes the state of the current component.\n    # Returns form values and the valid object as result.\n    validateForm: (event) ->\n        event.preventDefault() if event?\n        @setState submitted: true\n\n        valid = valid: null\n        accountValue = null\n        errors = {}\n\n        {accountValue, valid} = @doValidate()\n\n        if valid.valid\n            @setState errors: {}\n\n        else\n            errors = {}\n            for error in valid.errors\n                errors[error.property] = t \"validate #{error.message}\"\n\n            @setState errors: errors\n\n        return {accountValue, valid, errors}\n\n\n    # Check if all fields are valid. It returns an object with field values and\n    # an object that lists all errors.\n    doValidate: ->\n        accountValue = {}\n        accountValue[field] = @state[field] for field in @_accountFields\n        accountValue[field] = @state[field] for field in @_mailboxesFields\n\n        validOptions =\n            additionalProperties: true\n        schema = @_accountSchema\n        # password is not required on OAuth accounts\n        isOauth = @props.selectedAccount?.get('oauthProvider')?\n        schema.properties.password.allowEmpty = isOauth\n        valid = validate accountValue, schema, validOptions\n\n        return {accountValue, valid}\n\n\n    # Run the account checking operation.\n    checkAccount: (values) ->\n        @setState checking: true\n        AccountActionCreator.check values, @state.id, =>\n            @setState checking: false\n\n\n    # Save modification to the server.\n    editAccount: (values, callback) ->\n        AccountActionCreator.edit values, @state.id, callback\n\n\n    # Create a new account and redirect user to the message list of this\n    # account.\n    createAccount: (values) ->\n        AccountActionCreator.create values, (account) =>\n            msg = t(\"account creation ok\")\n\n            LayoutActions.notify msg,\n                autoclose: true\n\n            @redirect\n                direction: 'first'\n                action: 'account.config'\n                parameters: [\n                    account.get 'id'\n                    'mailboxes'\n                ]\n                fullWidth: true\n\n\n    # Build state from prop values.\n    accountToState: (props) ->\n        state =\n            errors: {}\n\n        if props?\n            account = props.selectedAccount\n            @buildErrorState state, props\n\n        if account?\n            @buildAccountState state, props, account\n\n        else if Object.keys(state.errors).length is 0\n            state = @buildDefaultState state\n\n        return state\n\n\n    # Set errors at state level.\n    buildErrorState: (state, props) ->\n\n        if props.error?\n\n            if props.error.name is 'AccountConfigError'\n                field = props.error.field\n\n                if field is 'auth'\n                    state.errors.login    = t 'config error auth'\n                    state.errors.password = t 'config error auth'\n\n                else\n                    state.errors[field] = t \"config error #{field}\"\n\n\n    # Build state based on current account values.\n    buildAccountState: (state, props, account) ->\n\n        if @state?.id isnt account.get('id')\n\n            state[field] = account.get field for field in @_accountFields\n            state.smtpMethod = 'PLAIN' if not state.smtpMethod?\n\n        state[field] = account.get field for field in @_mailboxesFields\n\n        state.newMailboxParent = null\n        state.mailboxes = props.mailboxes\n        state.favoriteMailboxes = props.favoriteMailboxes\n\n        props.tab = 'mailboxes' if state.mailboxes.length is 0\n\n\n    # Build default state (required for account creation).\n    buildDefaultState: ->\n        state =\n            errors: {}\n\n        state[field] = '' for field in @_accountFields\n        state[field] = '' for field in @_mailboxesFields\n        state.id = null\n        state.smtpPort = 465\n        state.smtpSSL = true\n        state.smtpTLS = false\n        state.smtpMethod = 'PLAIN'\n        state.imapPort = 993\n        state.imapSSL = true\n        state.imapTLS = false\n        state.accountType = 'IMAP'\n        state.newMailboxParent  = null\n        state.favoriteMailboxes = null\n\n        return state\n\n","{ div } = React.DOM\n\nAccountActionCreator = require '../actions/account_action_creator'\nLayoutActionCreator  = require '../actions/layout_action_creator'\n\n{FieldSet, FormButtons} = require './basic_components'\n\nmodule.exports = AccountConfigDelete = React.createClass\n    displayName: 'AccountConfigDelete'\n\n\n    getInitialState: ->\n        state = {}\n        state.deleting     = false\n        return state\n\n    render: ->\n        div null,\n            FieldSet text: t 'account danger zone'\n\n            FormButtons\n                buttons: [\n                    class: 'btn-remove'\n                    contrast: false\n                    default: true\n                    danger: true\n                    onClick: @onRemove\n                    spinner: @state.deleting\n                    icon: 'trash'\n                    text: t \"account remove\"\n                ]\n\n    # Ask for confirmation before running remove operation.\n    onRemove: (event) ->\n        event?.preventDefault()\n\n        label = @props.selectedAccount.get 'label'\n        modal =\n            title       : t 'app confirm delete'\n            subtitle    : t 'account remove confirm', {label: label}\n            closeModal  : ->\n                LayoutActionCreator.hideModal()\n            closeLabel  : t 'app cancel'\n            actionLabel : t 'app confirm'\n            action      : =>\n                LayoutActionCreator.hideModal()\n                @setState deleting: true\n                AccountActionCreator.remove @props.selectedAccount.get('id')\n\n        LayoutActionCreator.displayModal modal\n","{div, label, input, textarea} = React.DOM\n{ErrorLine} = require './basic_components'\nclasser = React.addons.classSet\n\nRouterMixin = require '../mixins/router_mixin'\n\n\n# Input used in the account configuration/creation form. An account input can\n# display an error message below it.\nmodule.exports = AccountInput = React.createClass\n    displayName: 'AccountInput'\n\n    mixins: [\n        RouterMixin\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n\n    getInitialState: ->\n        return @props\n\n\n    componentWillReceiveProps: (props) ->\n        @setState props\n\n\n    render: ->\n        name = @props.name\n        type = @props.type or 'text'\n        errorField = @props.errorField or name\n        mainClasses = @buildMainClasses errorField, name\n        placeHolder = @buildPlaceHolder type, name\n\n        div\n            key: \"account-input-#{name}\"\n            className: mainClasses,\n\n            label\n                htmlFor: \"mailbox-#{name}\"\n                className: \"col-sm-2 col-sm-offset-2 control-label\",\n                t \"account #{name}\"\n\n            div className: 'col-sm-3',\n                if type is 'checkbox'\n                    input\n                        id: \"mailbox-#{name}\"\n                        name: \"mailbox-#{name}\"\n                        checkedLink: @linkState('value').value\n                        type: type\n                        onClick: @props.onClick\n                else if type is 'textarea'\n                    textarea\n                        id: \"mailbox-#{name}\"\n                        name: \"mailbox-#{name}\"\n                        valueLink: @linkState('value').value\n                        className: 'form-control'\n                        placeholder: placeHolder\n                        onBlur: @onBlur\n                        onInput: @props.onInput or null\n                else\n                    input\n                        id: \"mailbox-#{name}\"\n                        name: \"mailbox-#{name}\"\n                        valueLink: @linkState('value').value\n                        type: type\n                        className: 'form-control'\n                        placeholder: placeHolder\n                        onBlur: @onBlur\n                        onInput: @props.onInput or null\n\n            @renderError(errorField, name)...\n\n\n    onBlur: (event) ->\n        @props.onBlur?(event)\n\n\n    renderError: (errorField, name) ->\n        result = []\n        if Array.isArray errorField\n            for error in errorField\n                if @state.errors?[error]? and error is name\n                    result.push ErrorLine text: @state.errors[error]\n        else if @state.errors?[name]?\n            result.push ErrorLine text: @state.errors[errorField]\n        return result\n\n\n    # Add error class if errors are listed.\n    buildMainClasses: (fields, name) ->\n        fields = [fields] if not Array.isArray fields\n        errors = fields.some (field) => @state.errors[field]?\n        mainClasses =  \"form-group account-item-#{name} \"\n        mainClasses = \"#{mainClasses} has-error \" if errors\n        mainClasses = \"#{mainClasses} #{@props.className} \" if @props.className\n        return mainClasses\n\n\n    # Build input placeholder depending on given type (build right translation\n    # key and run translation process on it).\n    buildPlaceHolder: (type, name) ->\n        placeHolder = null\n        if type in ['text', 'email'] or name is 'signature'\n            placeHolder = t \"account #{name} short\"\n        return placeHolder\n\n","{li, span, i, input} = React.DOM\nclasser = React.addons.classSet\n\n{Spinner} = require './basic_components'\nAccountActionCreator = require '../actions/account_action_creator'\nLayoutActionCreator  = require '../actions/layout_action_creator'\nRouterMixin = require '../mixins/router_mixin'\n\n\n# Line for the mailbox list.\nmodule.exports = MailboxItem = React.createClass\n    displayName: 'MailboxItem'\n\n    mixins: [\n        RouterMixin\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n    propTypes:\n        mailbox: React.PropTypes.object\n\n\n    getInitialState: ->\n        return {\n            edited: false\n            favorite: @props.favorite\n            deleting: false\n        }\n\n\n    # Whether it's edit mode or not, it displays widgets to edit mailbox\n    # properties like the name. Otherwise it displays box information and\n    # button to switch to edit mode and button to delete the current mailbox.\n    render: ->\n        pusher = @buildIndentation()\n        {favoriteClass, favoriteTitle} = @buildFavoriteValues()\n        nbTotal  = @props.mailbox.get('nbTotal') or 0\n        nbUnread = @props.mailbox.get('nbUnread') or 0\n        nbRecent = @props.mailbox.get('nbRecent') or 0\n        key = @props.mailbox.get 'id'\n\n        classItem = classer\n            'row': true\n            'box': true\n            'box-item': true\n            edited: @state.edited\n\n        if @state.edited\n            li className: classItem, key: key,\n                span\n                    className: \"col-xs-1 box-action save\"\n                    onClick: @updateMailbox\n                    title: t(\"mailbox title edit save\"),\n                        i className: 'fa fa-check'\n                span\n                    className: \"col-xs-1 box-action cancel\"\n                    onClick: @undoMailbox\n                    title: t(\"mailbox title edit cancel\"),\n                        i className: 'fa fa-undo'\n                input\n                    className: \"col-xs-6 box-label\"\n                    ref: 'label',\n                    defaultValue: @props.mailbox.get 'label'\n                    type: 'text'\n                    onKeyDown: @onKeyDown,\n\n        else\n            li className: classItem, key: key,\n                span\n                    className: \"col-xs-1 box-action edit\",\n                    onClick: @editMailbox,\n                    title: t(\"mailbox title edit\"),\n                        i className: 'fa fa-pencil'\n                if @state.deleting\n                    span\n                        className: \"col-xs-1 box-action delete\"\n                        Spinner()\n                else\n                    span\n                        className: \"col-xs-1 box-action delete\",\n                        onClick: @deleteMailbox,\n                        title: t(\"mailbox title delete\"),\n                            i className: 'fa fa-trash-o'\n                span\n                    className: \"col-xs-6 box-label\",\n                    onClick: @editMailbox,\n                    \"#{pusher}#{@props.mailbox.get 'label'}\"\n                span\n                    className: \"col-xs-1 box-action favorite\",\n                    title: favoriteTitle\n                    onClick: @toggleFavorite,\n                        i className: favoriteClass\n                span\n                    className: \"col-xs-1 text-center box-count box-total\",\n                    nbTotal\n                span\n                    className: \"col-xs-1 text-center box-count box-unread\",\n                    nbUnread\n                span\n                    className: \"col-xs-1 text-center box-count box-new\",\n                    nbRecent\n\n\n    # Build indentation based on the depth of the folder.\n    # A subfolder has a larger indentation than its parent.\n    buildIndentation: ->\n        (\"    \" for j in [1..@props.mailbox.get('depth')]).join ''\n\n\n    # Change title and icon when a folder is marked as favorite or not.\n    buildFavoriteValues: ->\n        if @state.favorite\n            favoriteClass = \"fa fa-eye mailbox-visi-yes\"\n            favoriteTitle = t \"mailbox title favorite\"\n        else\n            favoriteClass = \"fa fa-eye-slash mailbox-visi-no\"\n            favoriteTitle = t \"mailbox title not favorite\"\n\n        return {favoriteClass, favoriteTitle}\n\n\n    # When enter key is typed, it updates the mailbox information.\n    onKeyDown: (evt) ->\n        switch evt.key\n            when \"Enter\"\n                @updateMailbox()\n\n\n    # Go in edit mode.\n    editMailbox: (event) ->\n        event.preventDefault()\n        @setState edited: true\n\n\n    # Go back to non edition mode.\n    undoMailbox: (event) ->\n        event.preventDefault()\n        @setState edited: false\n\n\n    # Save mailbox details to sever. Display an alert if an error occurs.\n    updateMailbox: (event) ->\n        event?.preventDefault()\n\n        mailbox =\n            label: @refs.label.getDOMNode().value.trim()\n            mailboxID: @props.mailbox.get 'id'\n            accountID: @props.accountID\n\n        AccountActionCreator.mailboxUpdate mailbox, (error) =>\n            if error?\n                message = \"#{t(\"mailbox update ko\")} #{error}\"\n                LayoutActionCreator.alertError message\n            else\n                LayoutActionCreator.notify t(\"mailbox update ok\"),\n                    autoclose: true\n                @setState edited: false\n\n\n    # Set mailbox as favorite. Save information to the server. It shows\n    # an alert if an error occurs.\n    toggleFavorite: (event) ->\n        mailbox =\n            favorite: not @state.favorite\n            mailboxID: @props.mailbox.get 'id'\n            accountID: @props.accountID\n\n        AccountActionCreator.mailboxUpdate mailbox, (error) ->\n            if error?\n                message = \"#{t(\"mailbox update ko\")} #{error}\"\n                LayoutActionCreator.alertError message\n            else\n                LayoutActionCreator.notify t(\"mailbox update ok\"),\n                    autoclose: true\n\n        @setState favorite: not @state.favorite\n\n\n    # Ask for confirmation before sending box deletion request to the server.\n    # Display an alert if an error occurs.\n    deleteMailbox: (event) ->\n        event.preventDefault() if event?\n\n        modal =\n            title       : t 'app confirm delete'\n            subtitle    : t 'account confirm delbox'\n            closeModal  : ->\n                LayoutActionCreator.hideModal()\n            closeLabel  : t 'app cancel'\n            actionLabel : t 'app confirm'\n            action      : =>\n                LayoutActionCreator.hideModal()\n                @setState deleting: true\n                mailbox =\n                    mailboxID: @props.mailbox.get 'id'\n                    accountID: @props.accountID\n\n                AccountActionCreator.mailboxDelete mailbox, (error) =>\n                    if error?\n                        message = \"#{t(\"mailbox delete ko\")} #{error}\"\n                        LayoutActionCreator.alertError message\n                    else\n                        LayoutActionCreator.notify t(\"mailbox delete ok\"),\n                            autoclose: true\n                    if @isMounted()\n                        @setState deleting: false\n\n        LayoutActionCreator.displayModal modal\n\n","{div, h4, ul, li, span, form, i, input, label} = React.DOM\nclasser = React.addons.classSet\n\nAccountActionCreator = require '../actions/account_action_creator'\nLayoutActionCreator  = require '../actions/layout_action_creator'\nRouterMixin = require '../mixins/router_mixin'\nMailboxList = require './mailbox_list'\nMailboxItem = require './account_config_item'\n{SubTitle, Form} = require './basic_components'\nAccountDelete = require './account_config_delete'\n\n\nmodule.exports = AccountConfigMailboxes = React.createClass\n    displayName: 'AccountConfigMailboxes'\n\n    mixins: [\n        RouterMixin\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n\n    # Do not update component if nothing has changed.\n    shouldComponentUpdate: (nextProps, nextState) ->\n        isNextState = _.isEqual nextState, @state\n        isNextProps = _.isEqual nextProps, @props\n        return not (isNextState and isNextProps)\n\n    getInitialState: ->\n        @propsToState @props\n\n\n    componentWillReceiveProps: (props) ->\n        @setState @propsToState props\n\n\n    # Turn properties into a react state. It mainly set a n array of\n    # object for each mailbox set in the properties.\n    propsToState: (props) ->\n        state = {}\n        state.mailboxesFlat = {}\n\n        if props.mailboxes.value isnt ''\n\n            props.mailboxes.value.map (mailbox, key) ->\n                id = mailbox.get 'id'\n                state.mailboxesFlat[id] = {}\n                ['id', 'label', 'depth'].map (prop) ->\n                    state.mailboxesFlat[id][prop] = mailbox.get prop\n            .toJS()\n\n        return state\n\n\n    render: ->\n        favorites = @props.favoriteMailboxes.value\n\n        if @props.mailboxes.value isnt '' and favorites isnt ''\n            mailboxes = @props.mailboxes.value.map (mailbox, key) =>\n                try\n                    favorite = favorites.get(mailbox.get('id'))?\n                    MailboxItem {accountID: @props.id.value, mailbox, favorite}\n                catch error\n                    console.error error, favorites\n            .toJS()\n\n        Form className: 'form-horizontal',\n\n            @renderError()\n\n            SubTitle\n                className: 'config-title'\n                text: t \"account special mailboxes\"\n\n            @renderMailboxChoice t('account draft mailbox'), \"draftMailbox\"\n            @renderMailboxChoice t('account sent mailbox'),  \"sentMailbox\"\n            @renderMailboxChoice t('account trash mailbox'), \"trashMailbox\"\n\n            SubTitle\n                className: 'config-title'\n                t \"account mailboxes\"\n\n            ul className: \"folder-list list-unstyled boxes container\",\n                if mailboxes?\n                    li className: 'row box title', key: 'title',\n                        span\n                            className: \"col-xs-1\",\n                            ''\n                        span\n                            className: \"col-xs-1\",\n                            ''\n                        span\n                            className: \"col-xs-6\",\n                            ''\n                        span\n                            className: \"col-xs-1\",\n                            ''\n                        span\n                            className: \"col-xs-1 text-center\",\n                            t 'mailbox title total'\n                        span\n                            className: \"col-xs-1 text-center\",\n                            t 'mailbox title unread'\n                        span\n                            className: \"col-xs-1 text-center\",\n                            t 'mailbox title new'\n\n                mailboxes\n\n                li className: \"row box new\", key: 'new',\n\n                    span\n                        className: \"col-xs-1 box-action add\"\n                        onClick: @addMailbox\n                        title: t(\"mailbox title add\"),\n                            i className: 'fa fa-plus'\n\n                    span\n                        className: \"col-xs-1 box-action cancel\"\n                        onClick: @undoMailbox\n                        title: t(\"mailbox title add cancel\"),\n                            i className: 'fa fa-undo'\n\n                    div className: 'col-xs-6',\n                        input\n                            id: 'newmailbox',\n                            ref: 'newmailbox',\n                            type: 'text',\n                            className: 'form-control',\n                            placeholder: t \"account newmailbox placeholder\"\n                            onKeyDown: @onKeyDown\n\n                    label\n                        className: 'col-xs-2 text-center control-label',\n                        t \"account newmailbox parent\"\n\n                    div className: 'col-xs-2 text-center',\n                        MailboxList\n                            allowUndefined: true\n                            mailboxes: @state.mailboxesFlat\n                            selectedMailboxID: @state.newMailboxParent\n                            onChange: (mailbox) =>\n                                @setState newMailboxParent: mailbox\n\n                if @props.selectedAccount?\n                    AccountDelete\n                        selectedAccount: @props.selectedAccount\n\n\n    renderError: ->\n\n        if @props.error and @props.error.name is 'AccountConfigError'\n            message = t 'config error ' + @props.error.field\n            div className: 'alert alert-warning', message\n\n        else if @props.error\n            div className: 'alert alert-warning', @props.error.message\n\n        else if Object.keys(@props.errors).length isnt 0\n            div className: 'alert alert-warning', t 'account errors'\n\n\n    renderMailboxChoice: (labelText, box) ->\n        if @props.id? and @props.mailboxes.value isnt ''\n            errorClass = if @props[box].value? then '' else 'has-error'\n            div className: \"form-group #{box} #{errorClass}\",\n                label\n                    className: 'col-sm-2 col-sm-offset-2 control-label',\n                    labelText\n                div className: 'col-sm-3',\n                    MailboxList\n                        allowUndefined: true\n                        mailboxes: @state.mailboxesFlat\n                        selectedMailboxID: @props[box].value\n                        onChange: (mailbox) => @onMailboxChange mailbox, box\n\n\n    onMailboxChange: (mailbox, box) ->\n        @props[box].requestChange mailbox, =>\n            @props.onSubmit()\n\n\n    # Typing enter runs the mailbox creation process.\n    onKeyDown: (evt) ->\n        switch evt.key\n            when \"Enter\"\n                @addMailbox()\n\n\n    # Save new mailbox information to the server.\n    addMailbox: (event) ->\n        event?.preventDefault()\n\n        mailbox =\n            label: @refs.newmailbox.getDOMNode().value.trim()\n            accountID: @props.id.value\n            parentID: @state.newMailboxParent\n\n        AccountActionCreator.mailboxCreate mailbox, (error) =>\n            if error?\n                LayoutActionCreator.alertError \"#{t(\"mailbox create ko\")} #{error}\"\n            else\n                LayoutActionCreator.notify t(\"mailbox create ok\"),\n                    autoclose: true\n                @refs.newmailbox.getDOMNode().value = ''\n\n\n    # Undo mailbox creation (hide the mailbox creation widget).\n    undoMailbox: (event) ->\n        event.preventDefault()\n\n        @refs.newmailbox.getDOMNode().value = ''\n        @setState newMailboxParent: null\n\n","{\n    div, p, form, label, input, button, ul, li, a, span, i,\n    fieldset, legend\n} = React.DOM\nclasser = React.addons.classSet\n\nAccountInput  = require './account_config_input'\nAccountDelete = require './account_config_delete'\n\nRouterMixin = require '../mixins/router_mixin'\n{Form, FieldSet, FormButtons, FormDropdown} = require './basic_components'\n\n\nmodule.exports = AccountConfigMain = React.createClass\n    displayName: 'AccountConfigMain'\n\n    mixins: [\n        RouterMixin\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n\n    # Do not update component if nothing has changed.\n    shouldComponentUpdate: (nextProps, nextState) ->\n        isNextState = _.isEqual nextState, @state\n        isNextProps = _.isEqual nextProps, @props\n        return not (isNextState and isNextProps)\n\n\n    getInitialState: ->\n        state = {}\n        state[key] = value for key, value of @props\n        state.imapAdvanced = false\n        state.smtpAdvanced = false\n        return state\n\n\n    componentWillReceiveProps: (props) ->\n        state = {}\n        state[key] = value for key, value of props\n\n        if not @_lastDiscovered?\n            # If editing account, init @_lastDiscovered with current domain\n            # so we don't try to discover parameters if domain doesn't change\n            login = state.login.value\n            if state.id?.value? and login?.indexOf('@') >= 0\n                @_lastDiscovered = login.split('@')[1]\n\n        @setState state\n\n\n    buildButtonLabel: ->\n        if @props.isWaiting\n            buttonLabel = t 'account saving'\n\n        else if @props.selectedAccount?\n            buttonLabel = t \"account save\"\n\n        else\n            buttonLabel = t \"account add\"\n\n        return buttonLabel\n\n\n    render: ->\n        buttonLabel = @buildButtonLabel()\n\n        formClass = classer\n            'form-horizontal': true\n            'form-account': true\n            'waiting': @props.isWaiting\n\n        isOauth = @props.selectedAccount?.get('oauthProvider')?\n\n        Form className: formClass,\n\n            if isOauth\n                p null, t 'account oauth'\n\n            FieldSet text: t 'account identifiers'\n\n            AccountInput\n                name: 'label'\n                value: @linkState('label').value\n                errors: @state.errors\n                onBlur: @props.onBlur\n\n            AccountInput\n                name: 'name'\n                value: @linkState('name').value\n                errors: @state.errors\n                onBlur: @props.onBlur\n\n            AccountInput\n                name: 'login'\n                value: @linkState('login').value\n                errors: @state.errors\n                type: 'email'\n                errorField: ['login', 'auth']\n                onBlur: @discover\n\n            if not isOauth\n                AccountInput\n                    name: 'password'\n                    value: @linkState('password').value\n                    errors: @state.errors\n                    type: 'password'\n                    errorField: ['password', 'auth']\n                    onBlur: @props.onBlur\n\n            AccountInput\n                name: 'accountType'\n                className: 'hidden'\n                value: @linkState('accountType').value\n                errors: @state.errors\n\n            if @state.displayGMAILSecurity\n                url = \"https://www.google.com/settings/security/lesssecureapps\"\n                [\n                    FieldSet text: t 'gmail security tile'\n                    p null, t('gmail security body', login: @state.login.value)\n                    p null,\n                        a\n                            target: '_blank',\n                            href: url\n                            t 'gmail security link'\n                ]\n\n\n            if not isOauth\n                @_renderReceivingServer()\n            if not isOauth\n                @_renderSendingServer()\n\n            FieldSet text: t 'account actions'\n            FormButtons\n                buttons: [\n                    class: 'action-save'\n                    contrast: true\n                    default: false\n                    danger: false\n                    spinner: false\n                    icon: 'save'\n                    onClick: @onSubmit\n                    text: buttonLabel\n                ,\n                    class: 'action-check'\n                    contrast: false\n                    default: false\n                    danger: false\n                    spinner: @props.checking\n                    onClick: @onCheck\n                    icon: 'ellipsis-h'\n                    text: t 'account check'\n                ]\n\n            if @props.selectedAccount?\n                AccountDelete\n                    selectedAccount: @props.selectedAccount\n\n\n    _renderReceivingServer: ->\n        div null,\n            FieldSet text: t 'account receiving server'\n\n            AccountInput\n                name: 'imapServer'\n                value: @linkState('imapServer').value\n                errors: @state.errors\n                errorField: ['imap', 'imapServer', 'imapPort']\n                onBlur: @props.onBlur\n\n            AccountInput\n                name: 'imapPort'\n                value: @linkState('imapPort').value\n                errors: @state.errors\n                onBlur: =>\n                    @_onIMAPPort()\n                    @props.onBlur?()\n                onInput: =>\n                    @setState imapManualPort: true\n\n            AccountInput\n                name: 'imapSSL'\n                value: @linkState('imapSSL').value\n                errors: @state.errors\n                type: 'checkbox'\n                onClick: (event) =>\n                    @_onServerParam event.target, 'imap', 'ssl'\n\n            AccountInput\n                name: 'imapTLS'\n                value: @linkState('imapTLS').value\n                errors: @state.errors\n                type: 'checkbox'\n                onClick: (event) =>\n                    @_onServerParam event.target, 'imap', 'tls'\n\n            div\n                className: \"form-group advanced-imap-toggle\",\n                a\n                    className: \"col-sm-3 col-sm-offset-2 control-label clickable\",\n                    onClick: @toggleIMAPAdvanced,\n                    t \"account imap #{if @state.imapAdvanced then 'hide' else 'show'} advanced\"\n\n            if @state.imapAdvanced\n                AccountInput\n                    name: 'imapLogin'\n                    value: @linkState('imapLogin').value\n                    errors: @state.errors\n                    errorField: ['imap', 'imapServer', 'imapPort', 'imapLogin']\n\n\n    _renderSendingServer: ->\n        div null,\n            FieldSet text: t 'account sending server'\n\n            AccountInput\n                name: 'smtpServer'\n                value: @linkState('smtpServer').value\n                errors: @state.errors\n                errorField: [\n                    'smtp'\n                    'smtpServer'\n                    'smtpPort'\n                    'smtpLogin'\n                    'smtpPassword'\n                ]\n                onBlur: @props.onBlur\n\n            AccountInput\n                name: 'smtpPort'\n                value: @linkState('smtpPort').value\n                errors: @state.errors\n                errorField: ['smtp', 'smtpPort', 'smtpServer']\n                onBlur: (event) =>\n                    @_onSMTPPort(event)\n                    @props.onBlur()\n                onInput: =>\n                    @setState smtpManualPort: true\n\n            AccountInput\n                name: 'smtpSSL'\n                value: @linkState('smtpSSL').value\n                errors: @state.errors\n                errorField: ['smtp', 'smtpPort', 'smtpServer']\n                type: 'checkbox'\n                onClick: (ev) =>\n                    @_onServerParam ev.target, 'smtp', 'ssl'\n\n            AccountInput\n                name: 'smtpTLS'\n                value: @linkState('smtpTLS').value\n                errors: @state.errors\n                errorField: ['smtp', 'smtpPort', 'smtpServer']\n                type: 'checkbox'\n                onClick: (ev) =>\n                    @_onServerParam ev.target, 'smtp', 'tls'\n\n            div\n                className: \"form-group advanced-smtp-toggle\",\n                a\n                    className: \"col-sm-3 col-sm-offset-2 control-label clickable\",\n                    onClick: @toggleSMTPAdvanced,\n                    t \"account smtp #{if @state.smtpAdvanced then 'hide' else 'show'} advanced\"\n\n            if @state.smtpAdvanced\n                FormDropdown\n                    prefix: 'mailbox'\n                    name: 'smtpMethod'\n                    labelText: t \"account smtpMethod\"\n                    defaultText: t \"account smtpMethod #{@state.smtpMethod.value}\"\n                    values: ['NONE', 'CRAM-MD5', 'LOGIN', 'PLAIN']\n                    onClick: @onMethodChange\n                    methodPrefix: \"account smtpMethod\"\n                    errorField: ['smtp', 'smtpAuth']\n\n            if @state.smtpAdvanced\n                AccountInput\n                    name: 'smtpLogin'\n                    value: @linkState('smtpLogin').value\n                    errors: @state.errors\n                    errorField: ['smtpAuth']\n\n            if @state.smtpAdvanced\n                AccountInput\n                    name: 'smtpPassword'\n                    value: @linkState('smtpPassword').value\n                    type: 'password'\n                    errors: @state.errors\n                    errorField: ['smtpAuth']\n\n    # Run form submission process described in parent component.\n    # Check for errors before.\n    onSubmit: (event) ->\n        @props.onSubmit event, false\n\n\n    # Run form submission process described in parent component. This one\n    # checks that current parameters are working well.\n    # Check for errors before.\n    onCheck: (event) ->\n        @props.onSubmit event, true\n\n\n    onMethodChange: (event) ->\n        console.log \"blash\"\n        @state.smtpMethod.requestChange event.target.dataset.value\n\n\n    # Display or not SMTP advanced settings.\n    toggleSMTPAdvanced: ->\n        @setState smtpAdvanced: not @state.smtpAdvanced\n\n\n    # Display or not IMAP advanced settings.\n    toggleIMAPAdvanced: ->\n        @setState imapAdvanced: not @state.imapAdvanced\n\n\n    # Attempt to discover default values depending on target server.\n    # The target server is guessed by the email given by the user.\n    discover: (event) ->\n        login = @state.login.value\n        domain = login.split('@')[1] if login?.indexOf '@' >= 0\n\n        if domain isnt @_lastDiscovered\n            @_lastDiscovered = domain\n\n            AccountActionCreator.discover domain, (err, provider) =>\n                @setDefaultValues provider if not err?\n\n        @props.onBlur?()\n\n\n    # Set default values based on ones given in parameter.\n    setDefaultValues: (provider) ->\n        infos = {}\n\n        # Set values depending on given providers.\n        for server in provider\n\n            if server.type is 'imap' and not infos.imapServer?\n                infos.imapServer = server.hostname\n                infos.imapPort = server.port\n\n                if server.socketType is 'SSL'\n                    infos.imapSSL = true\n                    infos.imapTLS = false\n\n                else if server.socketType is 'STARTTLS'\n                    infos.imapSSL = false\n                    infos.imapTLS = true\n\n                else if server.socketType is 'plain'\n                    infos.imapSSL = false\n                    infos.imapTLS = false\n\n            if server.type is 'smtp' and not infos.smtpServer?\n                infos.smtpServer = server.hostname\n                infos.smtpPort = server.port\n\n                if server.socketType is 'SSL'\n                    infos.smtpSSL = true\n                    infos.smtpTLS = false\n\n                else if server.socketType is 'STARTTLS'\n                    infos.smtpSSL = false\n                    infos.smtpTLS = true\n\n                else if server.socketType is 'plain'\n                    infos.smtpSSL = false\n                    infos.smtpTLS = false\n\n        # Set default values if providers didn't give required infos.\n\n        unless infos.imapServer?\n            infos.imapServer = ''\n            infos.imapPort   = '993'\n\n        unless infos.smtpServer?\n            infos.smtpServer = ''\n            infos.smtpPort   = '465'\n\n        unless infos.imapSSL\n            switch infos.imapPort\n                when '993'\n                    infos.imapSSL = true\n                    infos.imapTLS = false\n                else\n                    infos.imapSSL = false\n                    infos.imapTLS = false\n\n        unless infos.smtpSSL\n            switch infos.smtpPort\n                when '465'\n                    infos.smtpSSL = true\n                    infos.smtpTLS = false\n                when '587'\n                    infos.smtpSSL = false\n                    infos.smtpTLS = true\n                else\n                    infos.smtpSSL = false\n                    infos.smtpTLS = false\n\n        # Display gmail warning if selected provider is Gmail.\n        isGmail = infos.imapServer is 'imap.googlemail.com'\n        @setState displayGMAILSecurity: isGmail\n\n        # Apply built values to current state\n        @state[key].requestChange val for key, val of infos\n\n\n    # Configure port automatically depending on selected paramerters.\n    _onServerParam: (target, server, type) ->\n\n        # port has been set manually, don't update it\n        if not((server is 'imap' and @state.imapManualPort) or\n        (server is 'smtp' and @state.smtpManualPort))\n\n            if server is 'smtp'\n\n                if type is 'ssl' and target.checked\n                    @setState smtpPort: 465\n\n                else if type is 'tls' and target.checked\n                    @setState smtpPort: 587\n\n            else\n\n                if target.checked\n                    @setState imapPort: 993\n\n                else\n                    @setState imapPort: 143\n\n\n    # Force IMAP parameters when IMAP port changes.\n    _onIMAPPort: (event) ->\n        port = event.target.value.trim()\n        infos =\n            imapPort: port\n\n        switch port\n\n            when '993'\n                infos.imapSSL = true\n                infos.imapTLS = false\n\n            else\n                infos.imapSSL = false\n                infos.imapTLS = false\n\n        @setState infos\n\n\n    # Force SMTP parameters when SMTP port changes.\n    _onSMTPPort: (event) ->\n        port = event.target.value.trim()\n        infos = {}\n\n        switch port\n\n            when '465'\n                infos.smtpSSL = true\n                infos.smtpTLS = false\n\n            when '587'\n                infos.smtpSSL = false\n                infos.smtpTLS = true\n\n            else\n                infos.smtpSSL = false\n                infos.smtpTLS = false\n\n        @setState infos\n\n","{div, h4, ul, li, span, form, i, input, label} = React.DOM\nclasser = React.addons.classSet\n\nAccountActionCreator = require '../actions/account_action_creator'\nLayoutActionCreator  = require '../actions/layout_action_creator'\nRouterMixin = require '../mixins/router_mixin'\nAccountInput = require './account_config_input'\n{Form, FieldSet, FormButtons} = require './basic_components'\n\n\n# Component to handle account signature modification.\n# It's a form with a single textarea.\nmodule.exports = React.createClass\n    displayName: 'AccountConfigSignature'\n\n    mixins: [\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n\n    # Do not update component if nothing has changed.\n    shouldComponentUpdate: (nextProps, nextState) ->\n        isNextState = _.isEqual nextState, @state\n        isNextProps = _.isEqual nextProps, @props\n        return not (isNextState and isNextProps)\n\n\n    getInitialState: ->\n        account: @props.account\n        saving: false\n        errors: {}\n        signature: @props.account.get 'signature'\n\n\n    # Render a form with a single entry for the account signature.\n    render: ->\n        console.log @state.account.get 'signature'\n        formClass = classer\n            'form-horizontal': true\n            'form-account': true\n            'account-signature-form': true\n\n        Form className: formClass,\n\n            FieldSet\n                text: t 'account signature'\n\n            AccountInput\n                type: 'textarea'\n                name: 'signature'\n                value: @linkState 'signature'\n                errors: @state.errors\n                onBlur: @props.onBlur\n\n            FieldSet\n                text: t 'account actions'\n\n            FormButtons\n                buttons: [\n                    class: 'signature-save'\n                    contrast: false\n                    default: false\n                    danger: false\n                    spinner: @state.saving\n                    icon: 'save'\n                    onClick: @onSubmit\n                    text: t 'account signature save'\n                ]\n\n\n    # When data are submitted, it asks to the API to persist the current\n    # signature.\n    onSubmit: (event) ->\n        event.preventDefault() if event?\n\n        @setState saving: true\n        @props.editAccount signature: @state.signature, =>\n            @setState saving: false\n\n","{div, ul, li, p, span, a, button, input} = React.DOM\n\nRouterMixin = require '../mixins/router_mixin'\n\nmodule.exports = React.createClass\n    displayName: 'AccountPicker'\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n            not (_.isEqual(nextProps, @props))\n\n    render: ->\n        accounts = @props.accounts\n        if Object.keys(accounts).length is 1\n            @renderNoChoice()\n        else\n            @renderPicker()\n\n    onChange: ({target: dataset: value: accountID})->\n        @props.valueLink.requestChange accountID\n\n    renderNoChoice: ->\n        account = @props.accounts[@props.valueLink.value]\n\n        label = \"#{account.name or account.label} <#{account.login}>\"\n        p className: 'form-control-static align-item', label\n\n    renderPicker:  ->\n        accounts = @props.accounts\n        account  = accounts[@props.valueLink.value]\n        value    = @props.valueLink.value\n        label = \"#{account.name or account.label} <#{account.login}>\"\n\n        div className: 'account-picker align-item',\n            span\n                className: 'compose-from dropdown-toggle',\n                'data-toggle': 'dropdown',\n                    span\n                        ref: 'account',\n                        'data-value': value,\n                        label\n                    span className: 'caret'\n            ul className: 'dropdown-menu', role: 'menu',\n                for key, account of accounts when key isnt value\n                    @renderAccount(key, account)\n\n    renderAccount: (key, account) ->\n        label = \"#{account.name or account.label} <#{account.login}>\"\n\n        li\n            role: 'presentation',\n            key: key,\n                a\n                    role: 'menuitem',\n                    onClick: @onChange,\n                    'data-value': key,\n                    label\n\n\n","{div, button, span, strong} = React.DOM\n{AlertLevel}     = require '../constants/app_constants'\nLayoutActionCreator = require '../actions/layout_action_creator'\n\nmodule.exports = React.createClass\n    displayName: 'Alert'\n\n    render: ->\n\n        alert = @props.alert\n        if alert.level?\n            levels = {}\n            levels[AlertLevel.SUCCESS] = 'alert-success'\n            levels[AlertLevel.INFO]    = 'alert-info'\n            levels[AlertLevel.WARNING] = 'alert-warning'\n            levels[AlertLevel.ERROR]   = 'alert-danger'\n\n        div className: 'row row-alert',\n            if alert.level?\n                div\n                    ref: 'alert'\n                    className: \"alert #{levels[alert.level]} alert-dismissible\",\n                    role: \"alert\",\n                        button\n                            type: \"button\",\n                            className: \"close\",\n                            onClick: @hide,\n                                span 'aria-hidden': \"true\", \"×\"\n                                span className: \"sr-only\", t \"app alert close\"\n                        strong null, alert.message\n\n    hide: ->\n        LayoutActionCreator.alertHide()\n\n    autohide: ->\n        if false and @props.alert.level is AlertLevel.SUCCESS\n            setTimeout =>\n                @refs.alert.getDOMNode().classList.add 'autoclose'\n            , 1000\n            setTimeout @hide, 10000\n\n    componentDidMount: ->\n        @autohide()\n\n    componentDidUpdate: ->\n        @autohide()\n","# React components\n{div, section, main, p, span, a, i, strong, form, input, button} = React.DOM\nAlert          = require './alert'\nMenu           = require './menu'\nModal          = require './modal'\nPanel          = require './panel'\nToastContainer = require './toast_container'\nTooltips       = require './tooltips-manager'\n\n# React Mixins\nRouterMixin          = require '../mixins/router_mixin'\nStoreWatchMixin      = require '../mixins/store_watch_mixin'\nTooltipRefesherMixin = require '../mixins/tooltip_refresher_mixin'\n\n# Flux stores\nAccountStore  = require '../stores/account_store'\nMessageStore  = require '../stores/message_store'\nLayoutStore   = require '../stores/layout_store'\nStores        = [AccountStore, MessageStore, LayoutStore]\n\n# Flux actions\nLayoutActionCreator  = require '../actions/layout_action_creator'\nMessageActionCreator = require '../actions/message_action_creator'\n\n{MessageFilter, Dispositions} = require '../constants/app_constants'\n\n###\n    This component is the root of the React tree.\n\n    It has two functions:\n        - building the layout based on the router\n        - listening for changes in  the model (Flux stores)\n          and re-render accordingly\n\n    About routing: it uses Backbone.Router as a source of truth for the layout.\n    (based on:\n        https://medium.com/react-tutorials/react-backbone-router-c00be0cf1592)\n###\nmodule.exports = Application = React.createClass\n    displayName: 'Application'\n\n    mixins: [\n        StoreWatchMixin Stores\n        RouterMixin\n        TooltipRefesherMixin\n    ]\n\n    render: ->\n        # Shortcut\n        # TODO: Improve the way we display a loader when app isn't ready\n        layout = @props.router.current\n        return div null, t \"app loading\" unless layout?\n\n        disposition = LayoutStore.getDisposition()\n        fullscreen  = LayoutStore.isPreviewFullscreen()\n        previewSize = LayoutStore.getPreviewSize()\n\n        modal = @state.modal\n\n        layoutClasses = ['layout'\n            \"layout-#{disposition}\"\n            if fullscreen then \"layout-preview-fullscreen\"\n            \"layout-preview-#{previewSize}\"].join(' ')\n\n        div className: layoutClasses,\n            # Actual layout\n            div className: 'app',\n                # Menu is self-managed because this part of the layout\n                # is always the same.\n                Menu\n                    ref:                   'menu'\n                    selectedAccount:       @state.selectedAccount\n                    selectedMailboxID:     @state.selectedMailboxID\n                    layout:                @props.router.current\n                    disposition:           disposition\n\n                main\n                    className: if layout.secondPanel? then null else 'full',\n                    @getPanel layout.firstPanel, 'firstPanel'\n                    if layout.secondPanel?\n                        @getPanel layout.secondPanel, 'secondPanel'\n                    else\n                        section\n                            key:             'placeholder'\n                            'aria-expanded': false\n\n            # Display feedback\n            if modal?\n                Modal modal\n            ToastContainer()\n\n            # Tooltips' content is declared once at the application level.\n            # It's hidden so it doesn't break the layout. Other components\n            # can then reference the tooltips by their ID to trigger them.\n            Tooltips()\n\n\n    getPanel: (panel, ref) ->\n        Panel\n            ref               : ref\n            action            : panel.action\n            accountID         : panel.parameters.accountID\n            mailboxID         : panel.parameters.mailboxID\n            messageID         : panel.parameters.messageID\n            tab               : panel.parameters.tab\n            useIntents        : @state.useIntents\n            selectedMailboxID : @state.selectedMailboxID\n\n\n    getStateFromStores: ->\n\n        selectedAccount = AccountStore.getSelected()\n        # When selecting compose in Menu, we may not have a selected account\n        if not selectedAccount?\n            selectedAccount = AccountStore.getDefault()\n        selectedAccountID = selectedAccount?.get('id') or null\n\n        firstPanelInfo = @props.router.current?.firstPanel\n        if firstPanelInfo?.action is 'account.mailbox.messages' or\n           firstPanelInfo?.action is 'account.mailbox.messages.full'\n            selectedMailboxID = firstPanelInfo.parameters.mailboxID\n        else\n            selectedMailboxID = null\n\n\n        return {\n            selectedAccount       : selectedAccount\n            modal                 : LayoutStore.getModal()\n            useIntents            : LayoutStore.intentAvailable()\n            selectedMailboxID     : selectedMailboxID\n        }\n\n\n    # Listens to router changes. Renders the component on changes.\n    componentWillMount: ->\n        # Uses `forceUpdate` with the proper scope because React doesn't allow\n        # to rebind its scope on the fly\n        @onRoute = (params) =>\n            {firstPanel, secondPanel} = params\n            if firstPanel?\n                @checkAccount firstPanel.action\n            if secondPanel?\n                @checkAccount secondPanel.action\n\n            # Store current message ID if selected\n            if secondPanel? and secondPanel.parameters.messageID?\n                isConv = secondPanel.parameters.conversationID?\n                messageID = secondPanel.parameters.messageID\n                MessageActionCreator.setCurrent messageID, isConv\n            else\n                if firstPanel isnt 'compose'\n                    MessageActionCreator.setCurrent null\n\n            @forceUpdate()\n\n        @props.router.on 'fluxRoute', @onRoute\n\n    checkAccount: (action) ->\n        # \"special\" mailboxes must be set before accessing to the account\n        # otherwise, redirect to account config\n        account = @state.selectedAccount\n        if (account?)\n            if not account.get('draftMailbox')? or\n               not account.get('sentMailbox')? or\n               not account.get('trashMailbox')?\n\n                if action is 'account.mailbox.messages' or\n                   action is 'account.mailbox.messages.full' or\n                   action is 'search' or\n                   action is 'message' or\n                   action is 'conversation' or\n                   action is 'compose' or\n                   action is 'edit'\n                    @redirect\n                        direction: 'first'\n                        action: 'account.config'\n                        parameters: [\n                            account.get 'id'\n                            'mailboxes'\n                        ]\n                        fullWidth: true\n                    errorMsg = t 'account no special mailboxes'\n                    LayoutActionCreator.alertError errorMsg\n\n\n    _notify: (title, options) ->\n        window.cozyMails.notify title, options\n\n\n    componentDidMount: ->\n        Stores.forEach (store) =>\n            store.on 'notify', @_notify\n\n\n    componentWillUnmount: ->\n        Stores.forEach (store) =>\n            store.removeListener 'notify', @notify\n        # Stops listening to router changes\n        @props.router.off 'fluxRoute', @onRoute\n","{li, img, a, i} = React.DOM\nMessageUtils = require '../utils/message_utils'\n{Tooltips} = require '../constants/app_constants'\n\nmodule.exports = React.createClass\n    displayName: 'AttachmentPreview'\n\n    icons:\n        'archive'      : 'fa-file-archive-o'\n        'audio'        : 'fa-file-audio-o'\n        'code'         : 'fa-file-code-o'\n        'image'        : 'fa-file-image-o'\n        'pdf'          : 'fa-file-pdf-o'\n        'word'         : 'fa-file-word-o'\n        'presentation' : 'fa-file-powerpoint-o'\n        'spreadsheet'  : 'fa-file-excel-o'\n        'text'         : 'fa-file-text-o'\n        'video'        : 'fa-file-video-o'\n        'word'         : 'fa-file-word-o'\n\n\n    render: ->\n        if @props.previewLink\n            li key: @props.key,\n                @renderIcon()\n                a\n                    target: '_blank'\n                    href: @props.file.url\n                    'aria-describedby': Tooltips.OPEN_ATTACHMENT\n                    'data-tooltip-direction': 'top',\n                        # TODO: generate a thumb instead of loading raw file\n                        img width: 90, src: @props.file.url if @props.preview\n                        @props.file.generatedFileName\n                ' - '\n                a\n                    href: \"#{@props.file.url}?download=1\"\n                    'aria-describedby': Tooltips.DOWNLOAD_ATTACHMENT\n                    'data-tooltip-direction': 'top',\n                        i className: 'fa fa-download'\n                        @displayFilesize(@props.file.length)\n        else\n            li key: @props.key,\n                @renderIcon()\n                a\n                    href: \"#{@props.file.url}?download=1\"\n                    'aria-describedby': Tooltips.DOWNLOAD_ATTACHMENT\n                    'data-tooltip-direction': 'left',\n                    \"\"\"#{@props.file.generatedFileName}\n                    (#{@displayFilesize(@props.file.length)})\"\"\"\n\n\n\n    renderIcon: ->\n        type = MessageUtils.getAttachmentType @props.file.contentType\n        i className: \"mime #{type} fa #{@icons[type] or 'fa-file-o'}\"\n\n\n    displayFilesize: (length) ->\n        if length < 1024\n            \"#{length} #{t 'length bytes'}\"\n        else if length < 1024*1024\n            \"#{0 | length / 1024} #{t 'length kbytes'}\"\n        else\n            \"#{0 | length / (1024*1024)} #{t 'length mbytes'}\"\n","{\n    div\n    section\n    h3\n    h4\n    ul\n    li\n    a\n    i\n    button\n    span\n    fieldset\n    legend\n    label\n    img\n    form\n} = React.DOM\n\nclasser = React.addons.classSet\n\n\nContainer = React.createClass\n\n    render: ->\n        section\n            id: @props.id\n            key: @props.key\n            className: 'panel'\n        ,\n            @props.children\n\n\nTitle = React.createClass\n\n    render: ->\n        h3\n            refs: @props.ref\n            className: 'title'\n        ,\n            @props.text\n\n\nSubTitle = React.createClass\n\n    render: ->\n        h4\n            refs: @props.ref\n            className: 'subtitle ' + @props.className\n        ,\n            @props.text\n\n\nTabs = React.createClass\n\n    render: ->\n        ul className: \"nav nav-tabs\", role: \"tablist\",\n            for index, tab of @props.tabs\n                if tab.class?.indexOf('active') >= 0\n                    url = null\n                else\n                    url = tab.url\n\n                li key: \"tab-li-#{index}\", className: tab.class,\n                    a\n                        href: url\n                        key: \"tab-#{index}\"\n                    ,\n                        tab.text\n\n\nErrorLine = React.createClass\n\n    render: ->\n        div\n            className: 'col-sm-5 col-sm-offset-2 control-label',\n            @props.text\n\n\nForm = React.createClass\n\n    render: ->\n        form\n            id: @props.id\n            className: @props.className\n            method: 'POST'\n        ,\n            @props.children\n\n\nFieldSet = React.createClass\n\n    render: ->\n        fieldset null,\n            legend null, @props.text\n            @props.children\n\n\nFormButton = React.createClass\n\n    render: ->\n        className = 'btn '\n        if @props.contrast\n            className += 'btn-cozy-contrast '\n        else if @props.default\n            className += 'btn-cozy-default '\n        else\n            className += 'btn-cozy '\n\n        if @props.danger\n            className += 'btn-danger '\n\n        if @props.class?\n            className += @props.class\n\n        button\n            className: className\n            onClick: @props.onClick\n        ,\n            if @props.spinner\n                span null, Spinner(white: true)\n            else\n                span className: \"fa fa-#{@props.icon}\"\n            span null, @props.text\n\n\nFormButtons = React.createClass\n\n    render: ->\n\n        div null,\n            div className: 'col-sm-offset-4',\n                for formButton, index in @props.buttons\n                    formButton.key = index\n                    FormButton formButton\n\nMenuItem = React.createClass\n\n    render: ->\n\n        liOptions = role: 'presentation'\n        liOptions.key = @props.key if @props.key\n        liOptions.className = @props.liClassName if @props.liClassName\n\n        aOptions =\n            role: 'menuitemu'\n            onClick: @props.onClick\n        aOptions.className = @props.className if @props.className\n        aOptions.href      = @props.href if @props.href\n        aOptions.target    = @props.href if @props.target\n\n        li liOptions,\n            a aOptions,\n                @props.children\n\nMenuHeader = React.createClass\n\n    render: ->\n        liOptions = role: 'presentation', className: 'dropdown-header'\n        liOptions.key = @props.key if @props.key\n        li liOptions, @props.children\n\n\nMenuDivider = React.createClass\n\n    render: ->\n        liOptions = role: 'presentation', className: 'divider'\n        liOptions.key = @props.key if @props.key\n        li liOptions\n\n\nFormDropdown = React.createClass\n\n    render: ->\n\n        div\n            key: \"account-input-#{@props.name}\"\n            className: \"form-group account-item-#{@props.name} \"\n        ,\n            label\n                htmlFor: \"#{@props.prefix}-#{@props.name}\",\n                className: \"col-sm-2 col-sm-offset-2 control-label\"\n            ,\n                @props.labelText\n            div className: 'col-sm-3',\n                div className: \"dropdown\",\n                    button\n                        id: \"#{@props.prefix}-#{@props.name}\"\n                        name: \"#{@props.prefix}-#{@props.name}\"\n                        className: \"btn btn-default dropdown-toggle\"\n                        type: \"button\"\n                        \"data-toggle\": \"dropdown\"\n                    ,\n                        @props.defaultText\n\n                    ul className: \"dropdown-menu\", role: \"menu\",\n                        @props.values.map (method) =>\n                            li\n                                role: \"presentation\",\n                                    a\n                                        'data-value': method\n                                        role: \"menuitem\"\n                                        onClick: @props.onClick\n                                    ,\n                                        t \"#{@props.methodPrefix} #{method}\"\n\n\n\n# Widget to display contact following these rules:\n# If a name is provided => Contact Name <address@contact.com>\n# If no name is provided => address@contact.com\nAddressLabel = React.createClass\n\n    render: ->\n        meaninglessKey = 0\n\n        if @props.contact.name?.length > 0 and @props.contact.address\n            key = @props.contact.address.replace /\\W/g, ''\n\n            result = span null,\n                span\n                    className: 'highlight'\n                    @props.contact.name\n                span\n                    className: 'contact-address'\n                    key: key\n                    ,\n                        i className: 'fa fa-angle-left'\n                        @props.contact.address\n                        i className: 'fa fa-angle-right'\n\n        else if @props.contact.name?.length > 0\n            result = span key: \"label-#{meaninglessKey++}\",\n                @props.contact.name\n\n        else\n            result = span null, @props.contact.address\n\n        return result\n\n# Available properties:\n# - values: {key -> value}\n# - value: optional key of current value\nDropdown = React.createClass\n    displayName: 'Dropdown'\n\n    getInitialState: ->\n        defaultKey = if @props.value? then @props.value else Object.keys(@props.values)[0]\n        state=\n            label: @props.values[defaultKey]\n\n    render: ->\n\n        renderFilter = (key, value) =>\n            onChange = =>\n                @setState label: value\n                @props.onChange key\n            li\n                role: 'presentation'\n                onClick: onChange\n                key: key,\n                    a\n                        role: 'menuitem'\n                        value\n\n        div\n            className: 'dropdown',\n                button\n                    className: 'dropdown-toggle'\n                    type: 'button'\n                    'data-toggle': 'dropdown'\n                    \"#{@state.label} \"\n                        span className: 'caret', ''\n                ul className: 'dropdown-menu', role: 'menu',\n                    for key, value of @props.values\n                        renderFilter key, t \"list filter #{key}\"\n\n# Widget to display a spinner.\n# If property `white` is set to true, it will use the white version.\nSpinner = React.createClass\n    displayName: 'Spinner'\n\n    protoTypes:\n        white: React.PropTypes.bool\n\n    render: ->\n        suffix = if @props.white  then '-white' else ''\n\n        img\n            src: \"images/spinner#{suffix}.svg\"\n            alt: 'spinner'\n            className: 'button-spinner'\n\nProgress = React.createClass\n    displayName: 'Progress'\n\n    propTypes:\n        value: React.PropTypes.number.isRequired\n        max: React.PropTypes.number.isRequired\n\n    render: ->\n        div className: 'progress',\n            div\n                className: classer\n                    'progress-bar': true\n                    'actived': @props.value > 0\n                style: width: 0\n                role: 'progressbar'\n                \"aria-valuenow\": @props.value\n                \"aria-valuemin\": '0'\n                \"aria-valuemax\": @props.max\n\nmodule.exports = {\n    AddressLabel\n    Container\n    Dropdown\n    ErrorLine\n    Form\n    FieldSet\n    FormButton\n    FormButtons\n    FormDropdown\n    MenuItem\n    MenuHeader\n    MenuDivider\n    Progress\n    Spinner\n    SubTitle\n    Title\n    Tabs\n}\n","{div, section, h3, a, i, textarea, form, label} = React.DOM\n{span, ul, li, input} = React.DOM\n\nclasser = React.addons.classSet\n\nComposeEditor  = require './compose_editor'\nComposeToolbox = require './compose_toolbox'\nFilePicker     = require './file_picker'\nMailsInput     = require './mails_input'\n\nAccountPicker = require './account_picker'\n\n{ComposeActions, Tooltips} = require '../constants/app_constants'\n\nMessageUtils = require '../utils/message_utils'\n\n\nLayoutActionCreator  = require '../actions/layout_action_creator'\nMessageActionCreator = require '../actions/message_action_creator'\n\n\nRouterMixin = require '../mixins/router_mixin'\n\nmodule.exports = Compose = React.createClass\n    displayName: 'Compose'\n\n    mixins: [\n        RouterMixin,\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n    propTypes:\n        selectedAccountID:    React.PropTypes.string.isRequired\n        selectedAccountLogin: React.PropTypes.string.isRequired\n        layout:               React.PropTypes.string\n        accounts:             React.PropTypes.object.isRequired\n        message:              React.PropTypes.object\n        action:               React.PropTypes.string\n        callback:             React.PropTypes.func\n        onCancel:             React.PropTypes.func\n        settings:             React.PropTypes.object.isRequired\n        useIntents:           React.PropTypes.bool.isRequired\n\n    getDefaultProps: ->\n        layout: 'full'\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n            not (_.isEqual(nextProps, @props))\n\n    render: ->\n        return unless @props.accounts\n\n\n        toggleFullscreen = ->\n            LayoutActionCreator.toggleFullscreen()\n\n        closeUrl = @buildClosePanelUrl @props.layout\n\n        classLabel = 'compose-label'\n        classInput = 'compose-input'\n        classCc    = if @state.ccShown  then ' shown ' else ''\n        classBcc   = if @state.bccShown then ' shown ' else ''\n\n        focusEditor = Array.isArray(@state.to) and\n            @state.to.length > 0 and\n            @state.subject isnt ''\n\n        section\n            className: classer\n                compose: true\n                panel:   @props.layout is 'full'\n            'aria-expanded': true,\n\n            form className: 'form-compose', method: 'POST',\n                div className: 'form-group account',\n                    label\n                        htmlFor: 'compose-from',\n                        className: classLabel,\n                        t \"compose from\"\n                    AccountPicker\n                        accounts: @props.accounts\n                        valueLink: @linkState 'accountID'\n                div className: 'clearfix', null\n\n                div className: classInput,\n                    div\n                        className: 'btn-toolbar compose-toggle',\n                        role: 'toolbar',\n                            div null\n                                a\n                                    className: 'compose-toggle-cc',\n                                    onClick: @onToggleCc,\n                                    t 'compose toggle cc'\n                                a\n                                    className: 'compose-toggle-bcc',\n                                    onClick: @onToggleBcc,\n                                    t 'compose toggle bcc'\n\n                MailsInput\n                    id: 'compose-to'\n                    valueLink: @linkState 'to'\n                    label: t 'compose to'\n                    ref: 'to'\n\n                MailsInput\n                    id: 'compose-cc'\n                    className: 'compose-cc' + classCc\n                    valueLink: @linkState 'cc'\n                    label: t 'compose cc'\n                    placeholder: t 'compose cc help'\n                    ref: 'cc'\n\n                MailsInput\n                    id: 'compose-bcc'\n                    className: 'compose-bcc' + classBcc\n                    valueLink: @linkState 'bcc'\n                    label: t 'compose bcc'\n                    placeholder: t 'compose bcc help'\n                    ref: 'bcc'\n\n                div className: 'form-group',\n                    div className: classInput,\n                        input\n                            id: 'compose-subject',\n                            name: 'compose-subject',\n                            ref: 'subject',\n                            valueLink: @linkState('subject'),\n                            type: 'text',\n                            className: 'form-control compose-subject',\n                            placeholder: t \"compose subject help\"\n                div className: '',\n                    ComposeEditor\n                        messageID         : @props.message?.get 'id'\n                        html              : @linkState('html')\n                        text              : @linkState('text')\n                        accounts          : @props.accounts\n                        accountID         : @state.accountID\n                        settings          : @props.settings\n                        onSend            : @onSend\n                        composeInHTML     : @state.composeInHTML\n                        focus             : focusEditor\n                        ref               : 'editor'\n                        getPicker         : @getPicker\n                        useIntents        : @props.useIntents\n\n                div className: 'attachements',\n                    FilePicker\n                        className: ''\n                        editable: true\n                        valueLink: @linkState 'attachments'\n                        ref: 'attachments'\n\n                ComposeToolbox\n                    saving    : @state.saving\n                    sending   : @state.sending\n                    onSend    : @onSend\n                    onDelete  : @onDelete\n                    onDraft   : @onDraft\n                    onCancel  : @onCancel\n                    canDelete : @props.message?\n\n                div className: 'clearfix', null\n\n    onCancel: (e) ->\n        e.preventDefault()\n\n        # Action after cancelation : call @props.onCancel\n        # or navigate to message list\n        if @props.onCancel?\n            @props.onCancel()\n        else\n            @redirect @buildUrl\n                direction: 'first'\n                action: 'default'\n                fullWidth: true\n\n    _initCompose: ->\n\n        if @_saveInterval\n            window.clearInterval @_saveInterval\n        @_saveInterval = window.setInterval @_autosave, 30000\n        # First save of draft\n        @_autosave()\n\n        # scroll compose window into view\n        @getDOMNode().scrollIntoView()\n\n        # Focus\n        if not Array.isArray(@state.to) or @state.to.length is 0\n            setTimeout ->\n                document.getElementById('compose-to').focus()\n            , 0\n\n    componentDidMount: ->\n        @_initCompose()\n\n    componentDidUpdate: ->\n        switch @state.focus\n            when 'cc'\n                setTimeout ->\n                    document.getElementById('compose-cc').focus()\n                , 0\n                @setState focus: ''\n\n            when 'bcc'\n                setTimeout ->\n                    document.getElementById('compose-bcc').focus()\n                , 0\n                @setState focus: ''\n\n    componentWillUnmount: ->\n        if @_saveInterval\n            window.clearInterval @_saveInterval\n\n        # delete draft\n        doDelete = =>\n            window.setTimeout =>\n                LayoutActionCreator.hideModal()\n                messageID = @state.id\n                MessageActionCreator.delete {messageID, silent, isDraft: true, inReplyTo: @props.inReplyTo}\n            , 5\n\n        # save draft one last time\n        doSave = =>\n            if @state.originalConversationID?\n                # save one last time the draft, adding the conversationID\n                message =\n                    id            : @state.id\n                    accountID     : @state.accountID\n                    mailboxIDs    : @state.mailboxIDs\n                    from          : @state.from\n                    to            : @state.to\n                    cc            : @state.cc\n                    bcc           : @state.bcc\n                    subject       : @state.subject\n                    isDraft       : true\n                    attachments   : @state.attachments\n                    inReplyTo     : @state.inReplyTo\n                    references    : @state.references\n                    text          : @state.text\n                    html          : @state.html\n                    conversationID: @state.originalConversationID\n                MessageActionCreator.send message, (error, message) ->\n                    if error? or not message?\n                        msg = \"#{t \"message action draft ko\"} #{error}\"\n                        LayoutActionCreator.alertError msg\n                    else\n                        msg = \"#{t \"message action draft ok\"}\"\n                        LayoutActionCreator.notify msg, autoclose: true\n                        if message.conversationID?\n                            # reload conversation to update its length\n                            cid = message.conversationID\n                            MessageActionCreator.fetchConversation cid\n            else\n\n\n        # If message has not been sent, ask if we should keep it or not\n        #  - if yes, and the draft belongs to a conversation, add the\n        #    conversationID and save the draft\n        #  - if no, delete the draft\n        if not @state.isDeleted and @state.isDraft and @state.id?\n\n            if @state.composeInHTML\n                newContent = MessageUtils.cleanReplyText(@state.html).replace /\\s/gim, ''\n                oldContent = MessageUtils.cleanReplyText(@state.initHtml).replace /\\s/gim, ''\n                updated = newContent isnt oldContent\n            else\n                updated = @state.text isnt @state.initText\n\n            # if draft has not been updated, delete without asking confirmation\n            silent = @state.isNew and not updated\n            if silent\n                doDelete()\n            else\n                # we need a timeout because of React's components life cycle\n                setTimeout ->\n                    # display a modal asking if we should keep or delete the draft\n                    modal =\n                        title       : t 'app confirm delete'\n                        subtitle    : t 'compose confirm keep draft'\n                        closeModal  : ->\n                            doSave()\n                            LayoutActionCreator.hideModal()\n                        closeLabel  : t 'compose confirm draft keep'\n                        actionLabel : t 'compose confirm draft delete'\n                        action      : doDelete\n                    LayoutActionCreator.displayModal modal\n                , 0\n\n    getInitialState: ->\n\n        # edition of an existing draft\n        if message = @props.message\n            state =\n                composeInHTML: @props.settings.get 'composeInHTML'\n                isNew: false\n            if (not message.get('html')?) and message.get('text')\n                state.conposeInHTML = false\n\n            # TODO : smarter ?\n            state[key] = value for key, value of message.toJS()\n            # we want the immutable attachments\n            state.attachments = message.get 'attachments'\n\n        # new draft\n        else\n            account = @props.accounts[@props.selectedAccountID]\n            state = MessageUtils.makeReplyMessage(\n                account.login,\n                @props.inReplyTo,\n                @props.action,\n                @props.settings.get('composeInHTML'),\n                account.signature\n            )\n            state.isNew = true\n            state.accountID ?= @props.selectedAccountID\n            # use another field to prevent the empty conversationID of draft\n            # to override the original conversationID\n            state.originalConversationID = state.conversationID\n\n        state.isDraft  = true\n        state.sending  = false\n        state.saving   = false\n        state.ccShown  = Array.isArray(state.cc) and state.cc.length > 0\n        state.bccShown = Array.isArray(state.bcc) and state.bcc.length > 0\n        # save initial message content, to don't ask confirmation if\n        # it has not been updated\n        state.initHtml = state.html\n        state.initText = state.text\n        return state\n\n    componentWillReceiveProps: (nextProps) ->\n        if nextProps.message isnt @props.message\n            @props.message = nextProps.message\n            @setState @getInitialState()\n\n    onDraft: (e) ->\n        e.preventDefault()\n        @_doSend true\n\n    onSend: (e) ->\n        if e?\n            e.preventDefault()\n        @_doSend false\n\n    _doSend: (isDraft) ->\n\n        account = @props.accounts[@state.accountID]\n\n        from =\n            name: account.name or undefined\n            address: account.login\n\n        message =\n            id            : @state.id\n            accountID     : @state.accountID\n            mailboxIDs    : @state.mailboxIDs\n            from          : [from]\n            to            : @state.to\n            cc            : @state.cc\n            bcc           : @state.bcc\n            subject       : @state.subject\n            isDraft       : isDraft\n            attachments   : @state.attachments\n            inReplyTo     : @state.inReplyTo\n            references    : @state.references\n\n        if not isDraft\n            # Add conversationID when sending message\n            # we don't add conversationID to draft, otherwise the full\n            # conversation would be updated, closing the compose panel\n            message.conversationID = @state.originalConversationID\n\n        valid = true\n        if not isDraft\n            if @state.to.length is 0 and\n               @state.cc.length is 0 and\n               @state.bcc.length is 0\n                valid = false\n                LayoutActionCreator.alertError t \"compose error no dest\"\n                setTimeout ->\n                    document.getElementById('compose-to').focus()\n                , 0\n            else if @state.subject is ''\n                valid = false\n                LayoutActionCreator.alertError t \"compose error no subject\"\n                setTimeout =>\n                    @refs.subject.getDOMNode().focus()\n                , 0\n\n        if valid\n            if @state.composeInHTML\n                message.html = @_cleanHTML @state.html\n                message.text = MessageUtils.cleanReplyText message.html\n                message.html = MessageUtils.wrapReplyHtml message.html\n            else\n                message.text = @state.text.trim()\n\n            if not isDraft and @_saveInterval\n                window.clearInterval @_saveInterval\n\n            if isDraft\n                @setState saving: true\n            else\n                @setState sending: true, isDraft: false\n\n            MessageActionCreator.send message, (error, message) =>\n                if (not error?) and (not @state.id?) and (message?)\n                    MessageActionCreator.setCurrent message.id\n\n                state = _.clone @state\n                if isDraft\n                    state.saving = false\n                else\n                    state.isDraft = false\n                    state.sending = false\n                # Don't override local attachments nor message content\n                # (server override cid: URLs with relative URLs)\n                state[key] = value for key, value of message when key isnt 'attachments' and\n                    key isnt 'html' and key isnt 'text'\n                # Sometime, when user cancel composing, the component has been\n                # unmounted before we come back from autosave, and setState fails\n                if @isMounted()\n                    @setState state\n\n                if isDraft\n                    msgKo = t \"message action draft ko\"\n                else\n                    msgKo = t \"message action sent ko\"\n                    msgOk = t \"message action sent ok\"\n                if error? or not message?\n                    LayoutActionCreator.alertError \"#{msgKo} #{error}\"\n                else\n                    # don't display confirmation message when draft has been saved\n                    if not isDraft\n                        LayoutActionCreator.notify msgOk, autoclose: true\n\n                    if not @state.id?\n                        MessageActionCreator.setCurrent message.id\n\n                    if not isDraft\n                        if message.conversationID?\n                            # reload conversation to update its length\n                            cid = message.conversationID\n                            MessageActionCreator.fetchConversation cid\n                        if @props.callback?\n                            @props.callback error\n                        else\n                            @redirect @buildClosePanelUrl @props.layout\n\n    _autosave: ->\n        if @props.settings.get 'autosaveDraft'\n            @_doSend true\n\n    # set source of attached images\n    _cleanHTML: (html) ->\n        parser = new DOMParser()\n        doc    = parser.parseFromString html, \"text/html\"\n\n        if not doc\n            doc = document.implementation.createHTMLDocument(\"\")\n            doc.documentElement.innerHTML = html\n\n        if doc\n            # the contentID of attached images will be in the data-src attribute\n            # override image source with this attribute\n            imageSrc = (image) ->\n                image.setAttribute 'src', \"cid:#{image.dataset.src}\"\n            images = doc.querySelectorAll 'IMG[data-src]'\n            imageSrc image for image in images\n\n            return doc.documentElement.innerHTML\n        else\n            console.error \"Unable to parse HTML content of message\"\n            return html\n\n    onDelete: (e) ->\n        e.preventDefault()\n        subject = @props.message.get 'subject'\n\n        if subject? and subject isnt ''\n            params = subject: @props.message.get 'subject'\n            confirmMessage = t 'mail confirm delete', params\n\n        else\n            confirmMessage = t 'mail confirm delete nosubject'\n\n        doDelete = =>\n            LayoutActionCreator.hideModal()\n            messageID = @props.message.get('id')\n            # this will prevent asking a second time when unmounting component\n            @setState isDeleted: true, =>\n                MessageActionCreator.delete {messageID}, (error) =>\n                    unless error?\n                        if @props.callback\n                            @props.callback()\n                        else\n                            parameters = [\n                                @props.selectedAccountID\n                                @props.selectedMailboxID\n                            ]\n\n                            @redirect\n                                direction: 'first'\n                                action: 'account.mailbox.messages'\n                                parameters: parameters\n                                fullWidth: true\n\n        modal =\n            title       : t 'mail confirm delete title'\n            subtitle    : confirmMessage\n            closeModal  : ->\n                LayoutActionCreator.hideModal()\n            closeLabel  : t 'mail confirm delete cancel'\n            actionLabel : t 'mail confirm delete delete'\n            action      : doDelete\n        LayoutActionCreator.displayModal modal\n\n    onToggleCc: (e) ->\n        toggle = (e) -> e.classList.toggle 'shown'\n        toggle e for e in @getDOMNode().querySelectorAll '.compose-cc'\n        focus = if not @state.ccShown then 'cc' else ''\n        @setState ccShown: not @state.ccShown, focus: focus\n\n    onToggleBcc: (e) ->\n        toggle = (e) -> e.classList.toggle 'shown'\n        toggle e for e in @getDOMNode().querySelectorAll '.compose-bcc'\n        focus = if not @state.bccShown then 'bcc' else ''\n        @setState bccShown: not @state.bccShown, focus: focus\n\n    # Get the file picker component (method used to pass it to the editor)\n    getPicker: ->\n        return @refs.attachments\n\n\n","{div, button, textarea} = React.DOM\n\nFileUtils    = require '../utils/file_utils'\n\nmodule.exports = ComposeEditor = React.createClass\n    displayName: 'ComposeEditor'\n\n    mixins: [\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n    getInitialState: ->\n        return {\n            html: @props.html\n            text: @props.text\n            target: false     # true when hovering with a file\n        }\n\n    componentWillReceiveProps: (nextProps) ->\n        if nextProps.messageID isnt @props.messageID\n            @setState html: nextProps.html, text: nextProps.text\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n            not (_.isEqual(nextProps, @props))\n\n    # Update parent component when content has been updated\n    onHTMLChange: (event) ->\n        @props.html.requestChange @refs.html.getDOMNode().innerHTML\n\n    # Update parent component when content has been updated\n    onTextChange: (event) ->\n        @props.text.requestChange @refs.content.getDOMNode().value\n\n    render: ->\n\n        if @props.settings.get 'composeOnTop'\n            classFolded = 'folded'\n        else\n            classFolded = ''\n        classTarget = if @state.target then 'target' else ''\n\n        div null,\n            if @props.useIntents\n                div className: \"btn-group editor-actions\",\n                    button\n                        className: \"btn btn-default\"\n                        onClick: @choosePhoto,\n                            span\n                                className:'fa fa-image'\n                                'aria-describedby': Tooltips.COMPOSE_IMAGE\n                                'data-tooltip-direction': 'top'\n            if @props.composeInHTML\n                div\n                    className: \"form-control rt-editor #{classFolded} #{classTarget}\",\n                    ref: 'html',\n                    contentEditable: true,\n                    onKeyDown: @onKeyDown,\n                    onInput: @onHTMLChange,\n                    onDragOver: @allowDrop,\n                    onDragEnter: @onDragEnter,\n                    onDragLeave: @onDragLeave,\n                    onDrop: @handleFiles,\n                    # when dropping an image, input is fired before the image has\n                    # really been added to the DOM, so we need to also listen to\n                    # blur event\n                    onBlur: @onHTMLChange,\n                    dangerouslySetInnerHTML: {\n                        __html: @state.html.value\n                    }\n            else\n                textarea\n                    className: \"editor #{classTarget}\",\n                    ref: 'content',\n                    onKeyDown: @onKeyDown,\n                    onChange: @onTextChange,\n                    onBlur: @onTextChange,\n                    defaultValue: @state.text.value\n                    onDragOver: @allowDrop,\n                    onDragEnter: @onDragEnter,\n                    onDragLeave: @onDragLeave,\n                    onDrop: @handleFiles,\n\n    _initCompose: ->\n\n        if @props.composeInHTML\n            @setCursorPosition()\n\n            # Webkit/Blink and Gecko have some different behavior on\n            # contentEditable, so we need to test the rendering engine\n            # Webklink doesn't support insertBrOnReturn, so this will return\n            # false\n            gecko = document.queryCommandEnabled 'insertBrOnReturn'\n\n            # Some DOM manipulation when replying inside the message.\n            # When inserting a new line, we must close all blockquotes,\n            # insert a blank line and then open again blockquotes\n            jQuery('.rt-editor').on('keypress', (e) ->\n                if e.keyCode isnt 13\n                    # yes, our styleguide returning before the end of a\n                    # function. But they also don't like lines longer than\n                    # 80 characters\n                    return\n\n                # main function that remove quote at cursor\n                quote = ->\n                    # check whether a node is inside a blockquote\n                    isInsideQuote = (node) ->\n                        matchesSelector = document.documentElement.matches or\n                              document.documentElement.matchesSelector or\n                              document.documentElement.webkitMatchesSelector or\n                              document.documentElement.mozMatchesSelector or\n                              document.documentElement.oMatchesSelector or\n                              document.documentElement.msMatchesSelector\n\n                        if matchesSelector?\n                            return matchesSelector.call node,\n                                '.rt-editor blockquote, .rt-editor blockquote *'\n                        else\n                            while node? and node.tagName isnt 'BLOCKQUOTE'\n                                node = node.parentNode\n                            return node.tagName is 'BLOCKQUOTE'\n\n                    # try to get the real target element\n                    target = document.getSelection().anchorNode\n                    if target.lastChild?\n                        target = target.lastChild\n                        if target.previousElementSibling?\n                            target = target.previousElementSibling\n                    targetElement = target\n                    while targetElement and not (targetElement instanceof Element)\n                        targetElement = targetElement.parentNode\n                    if not target?\n                        return\n                    if not isInsideQuote(targetElement)\n                        # we are not inside a blockquote, nothing to do\n                        return\n\n                    # Insert another break, then select it and use outdent to\n                    # remove blocquotes\n                    if gecko\n                        br = \"\\r\\n<br>\\r\\n<br class='cozyInsertedBr'>\\r\\n\"\n                    else\n                        br = \"\"\"\n                          \\r\\n<div></div><div><br class='cozyInsertedBr'></div>\\r\\n\n                            \"\"\"\n                    document.execCommand 'insertHTML', false, br\n\n                    node = document.querySelector('.cozyInsertedBr')\n                    if gecko\n                        node = node.previousElementSibling\n\n                    # get path of a node inside the contentEditable\n                    getPath = (node) ->\n                        path = node.tagName\n                        while node.parentNode? and node.contentEditable isnt 'true'\n                            node = node.parentNode\n                            path = \"#{node.tagName} > #{path}\"\n                        return path\n\n                    # ensure focus is on newly inserted node\n                    selection = window.getSelection()\n                    range = document.createRange()\n                    range.selectNode(node)\n                    selection.removeAllRanges()\n                    selection.addRange(range)\n\n                    # outdent node\n                    depth = getPath(node).split('>').length\n                    while depth > 0\n                        document.execCommand 'outdent', false, null\n                        depth--\n                    # remove the surnumerous block\n                    node = document.querySelector '.cozyInsertedBr'\n                    node?.parentNode.removeChild node\n\n                    # try to remove format that may remains from the quote\n                    document.execCommand 'removeFormat', false, null\n                    return\n\n                # timeout to let the editor perform its own stuff\n                setTimeout quote, 50\n            )\n\n            # Allow to hide original message\n            if document.querySelector('.rt-editor blockquote') and\n               not document.querySelector('.rt-editor .originalToggle')\n                try\n                    header = jQuery('.rt-editor blockquote').eq(0).prev()\n                    header.text(header.text().replace('…', ''))\n                    header.append('<span class=\"originalToggle\">…</>')\n                    header.on 'click', ->\n                        jQuery('.rt-editor').toggleClass('folded')\n                catch e\n                    console.error e\n\n            else\n                jQuery('.rt-editor .originalToggle').on 'click', ->\n                    jQuery('.rt-editor').toggleClass('folded')\n\n        else\n            # Text message\n            if @props.focus\n                node = @refs.content.getDOMNode()\n\n                if not @props.settings.get 'composeOnTop'\n                    rect = node.getBoundingClientRect()\n                    node.scrollTop = node.scrollHeight - rect.height\n\n                    if (typeof node.selectionStart is \"number\")\n                        node.selectionStart = node.value.length\n                        node.selectionEnd   = node.value.length\n                    else if (typeof node.createTextRange isnt \"undefined\")\n                        setTimeout ->\n                            node.focus()\n                        , 0\n                        range = node.createTextRange()\n                        range.collapse(false)\n                        range.select()\n\n                setTimeout ->\n                    node.focus()\n                , 0\n\n\n    # Put the selection cursor at the bottom of the message. The cursor is set\n    # before the signature if there is one.\n    setCursorPosition: ->\n        if @props.focus\n            node = @refs.html?.getDOMNode()\n            if node?\n                document.querySelector(\".rt-editor\").focus()\n                if not @props.settings.get 'composeOnTop'\n\n                    account = @props.accounts[@props.accountID]\n\n                    signatureNode = document.getElementById \"signature\"\n                    if account.signature? and\n                    account.signature.length > 0 and\n                    signatureNode?\n                        node = signatureNode\n                        node.innerHTML = \"\"\"\n                        <p><br /></p>\n                        #{node.innerHTML}\n                        \"\"\"\n                        node = node.firstChild\n\n                    else\n                        node.innerHTML += \"<p><br /></p><p><br /></p>\"\n                        node = node.lastChild\n\n                    if node?\n                        # move cursor to the bottom\n                        node.scrollIntoView(false)\n                        node.innerHTML = \"<br \\>\"\n                        selection = window.getSelection()\n                        range = document.createRange()\n                        range.selectNodeContents node\n                        selection.removeAllRanges()\n                        selection.addRange range\n                        document.execCommand 'delete', false, null\n                        node.focus()\n\n\n    componentDidMount: ->\n        @_initCompose()\n\n    componentDidUpdate: (oldProps, oldState) ->\n        if oldProps.messageID isnt @props.messageID\n            @_initCompose()\n\n        # On account change, update message signature\n        if oldProps.accountID isnt @props.accountID\n            @_updateSignature()\n\n    _updateSignature: ->\n        signature = @props.accounts[@props.accountID].signature\n        if @refs.html?\n            signatureNode = document.getElementById \"signature\"\n            if signature? and signature.length > 0\n                signatureHtml = signature.replace /\\n/g, '<br>'\n                if signatureNode?\n                    # replace old signature by new one\n                    signatureNode.innerHTML = \"-- \\n<br>#{signatureHtml}</p>\"\n                else\n                    # append new signature at the end of message\n                    @refs.html.getDOMNode().innerHTML += \"\"\"\n                <p><br></p><p id=\"signature\">-- \\n<br>#{signatureHtml}</p>\n                    \"\"\"\n            else\n                # new account has no signature\n                if signatureNode?\n                    # delete old signature\n                    signatureNode.parentNode.removeChild signatureNode\n            # force update of React component\n            @onHTMLChange()\n        else if @refs.content?\n            node = @refs.content.getDOMNode()\n            oldSig = @props.accounts[oldProps.accountID].signature\n            if signature? and signature.length > 0\n                if oldSig and oldSig.length > 0\n                    # replace old signature by new one\n                    node.textContent = node.textContent.replace oldSig, signature\n                else\n                    # add signature at the end of message\n                    node.textContent += \"\\n\\n-- \\n#{signature}\"\n            else\n                # new account has no signature\n                if oldSig and oldSig.length > 0\n                    # delete old signature\n                    oldSig = \"-- \\n#{signature}\"\n                    node.textContent = node.textContent.replace oldSig, ''\n            # force update of React component\n            @onTextChange()\n\n    onKeyDown: (evt) ->\n        if evt.ctrlKey and evt.key is 'Enter'\n            @props.onSend()\n\n    ###\n    # Handle dropping of images inside editor\n    ###\n    allowDrop: (e) ->\n        e.preventDefault()\n\n    onDragEnter: (e) ->\n        if not @state.target\n            @setState target: true\n\n    onDragLeave: (e) ->\n        if @state.target\n            @setState target: false\n\n    handleFiles: (e) ->\n        e.preventDefault()\n        files = e.target.files or e.dataTransfer.files\n        # Add files to Compose file picker\n        @props.getPicker().addFiles files\n        if @props.composeInHTML\n            for file in files\n                # for every image, insert it into the HTML compose editor\n                # Set the file name to data-src so it can be converted to cid: url on send\n                # Convert the file to a data-uri to display the image inside the editor\n                if file.type.split('/')[0] is 'image'\n                    id  = \"editor-img-#{new Date()}\"\n                    img = \"<img data-src='#{file.name}' id='#{id}'>\"\n                    # if editor has not the focus, insert image at the end\n                    # otherwise at cursor position\n                    if not document.activeElement.classList.contains 'rt-editor'\n                        # if there is a signature, insert image juste before\n                        signature = document.getElementById 'signature'\n                        if signature?\n                            signature.previousElementSibling.innerHTML += img\n                        else\n                            document.querySelector('.rt-editor').innerHTML += img\n                    else\n                        document.execCommand 'insertHTML', false, img\n                    FileUtils.fileToDataURI file, (result) =>\n                        img = document.getElementById id\n                        if img\n                            img.removeAttribute 'id'\n                            img.src = result\n                            # force update of React component\n                            @onHTMLChange()\n        @setState target: false\n\n\n    choosePhoto: (e) ->\n        e.preventDefault()\n        intent =\n            type  : 'pickObject'\n            params:\n                objectType : 'singlePhoto'\n                isCropped  : false\n        timeout = 30000 # 30 seconds\n\n        window.intentManager.send('nameSpace', intent, timeout)\n            .then @choosePhoto_answer, (error) ->\n                console.error 'response in error : ', error\n\n\n    choosePhoto_answer : (message) ->\n        answer = message.data\n        if answer.newPhotoChosen\n            data      = FileUtils.dataURItoBlob answer.dataUrl\n            blob      = new Blob([data.blob, {type: data.mime}])\n            blob.name = answer.name\n            picker    = @props.getPicker()\n            picker.addFiles [blob]\n            if @props.composeInHTML\n                if document.activeElement.classList.contains 'rt-editor'\n                    # editor has focus, insert image at cursor position\n                    document.execCommand('insertHTML', false, '<img src=\"' + answer.dataUrl + '\" data-src=\"' + answer.name + '\">')\n                else\n                    # otherwise, insert at end\n                    # if there is a signature, insert image juste before\n                    img = document.createElement 'img'\n                    img.src = answer.dataUrl\n                    img.dataset.src = answer.name\n                    signature = document.getElementById 'signature'\n                    if signature?\n                        signature.parentNode.insertBefore img, signature\n                    else\n                        editor = document.querySelector('.rt-editor')\n                        if editor?\n                            editor.appendChild img\n                # force update of React component\n                @onHTMLChange()\n\n","{div, button, span} = React.DOM\n\n{Spinner} = require './basic_components'\n\nmodule.exports = ComposeToolbox = React.createClass\n    displayName: 'ComposeToolbox'\n\n\n    render: ->\n        if @props.sending\n            labelSend = t 'compose action sending'\n        else\n            labelSend = t 'compose action send'\n\n        div className: 'composeToolbox',\n            div className: 'btn-toolbar', role: 'toolbar',\n                div className: '',\n                    button\n                        className: 'btn btn-cozy btn-send',\n                        type: 'button',\n                        disable: if @props.sending then true else null\n                        onClick: @props.onSend,\n                            if @props.sending\n                                span null, Spinner(white: true)\n                            else\n                                span className: 'fa fa-send'\n                            span null, labelSend\n                    button\n                        className: 'btn btn-cozy btn-save',\n                        disable: if @props.saving then true else null\n                        type: 'button', onClick: @props.onDraft,\n                            if @props.saving\n                                span null, Spinner(white: true)\n                            else\n                                span className: 'fa fa-save'\n                            span null, t 'compose action draft'\n                    if @props.canDelete\n                        button\n                            className: 'btn btn-cozy-non-default btn-delete',\n                            type: 'button',\n                            onClick: @props.onDelete,\n                                span className: 'fa fa-trash-o'\n                                span null, t 'compose action delete'\n                    button\n                        onClick: @props.onCancel\n                        className: 'btn btn-cozy-non-default btn-cancel',\n                        t 'app cancel'\n","{section, header, ul, li, span, i, p, h3, a, button} = React.DOM\n\nMessageUtils = require '../utils/message_utils'\nContactStore = require '../stores/contact_store'\nContactActionCreator = require '../actions/contact_action_creator'\nLayoutActionCreator  =  require '../actions/layout_action_creator'\n{AddressLabel} = require './basic_components'\n\n\n# Small component used to display contact label in message headers.\nmodule.exports = ContactLabel = React.createClass\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        should = not (_.isEqual(nextProps, @props))\n        return should\n\n    # Display contact label as a link to the contact page if the contact\n    # exists, else it displays it as a clickable span than allows to create\n    # a contact object in the Cozy for this contact.\n    render: ->\n        if @props.contact?\n\n            contactModel = ContactStore.getByAddress @props.contact.address\n\n            if contactModel?\n                contactId = contactModel.get 'id'\n                a\n                    ref: 'contact'\n                    target: '_blank'\n                    href: \"/#apps/contacts/contact/#{contactId}\"\n                    onClick: (event) -> event.stopPropagation()\n                    AddressLabel\n                        contact: @props.contact\n\n            else\n                span\n                    ref: 'contact'\n                    className: 'participant'\n                    onClick: (event) =>\n                        event.stopPropagation()\n                        @addContact()\n                    AddressLabel\n                        contact: @props.contact\n        else\n            span null\n\n\n\n    _initTooltip: ->\n        if @props.tooltip and @refs.contact?\n            node = @refs.contact.getDOMNode()\n            # because of absolute positionning of some elements, we must insert\n            # tooltip at article level\n            container = node.parentNode\n            container = container.parentNode while container.tagName isnt 'ARTICLE'\n            options =\n                showOnClick: false\n                container: container\n            MessageUtils.tooltip @refs.contact.getDOMNode(), @props.contact, @addContact, options\n\n    componentDidMount: ->\n        @_initTooltip()\n\n    componentDidUpdate: ->\n        @_initTooltip()\n\n    # When a contact is clicked, it asks to the user if he wants to add it to\n    # its Cozy. If the user agrees it runs a contact creation action.\n    addContact: ->\n        params = contact: MessageUtils.displayAddress @props.contact\n        modal =\n            title       : t 'message contact creation title'\n            subtitle    : t 'message contact creation', params\n            closeModal  : ->\n                LayoutActionCreator.hideModal()\n            closeLabel  : t 'app cancel'\n            actionLabel : t 'app confirm'\n            action      : =>\n                ContactActionCreator.createContact @props.contact\n                LayoutActionCreator.hideModal()\n        LayoutActionCreator.displayModal modal\n","{section, header, ul, li, span, i, p, h3, a, button} = React.DOM\nMessage = require './message'\nToolbar = require './toolbar_conversation'\nclasser = React.addons.classSet\n\nRouterMixin = require '../mixins/router_mixin'\n{MessageFlags} = require '../constants/app_constants'\n\nLayoutActionCreator = require '../actions/layout_action_creator'\n\n\nmodule.exports = React.createClass\n    displayName: 'Conversation'\n\n    mixins: [RouterMixin]\n\n    propTypes:\n        conversation         : React.PropTypes.object\n        conversationID       : React.PropTypes.string\n        selectedAccountID    : React.PropTypes.string.isRequired\n        selectedAccountLogin : React.PropTypes.string.isRequired\n        selectedMailboxID    : React.PropTypes.string\n        mailboxes            : React.PropTypes.object.isRequired\n        settings             : React.PropTypes.object.isRequired\n        accounts             : React.PropTypes.object.isRequired\n        displayConversations : React.PropTypes.bool\n        useIntents           : React.PropTypes.bool.isRequired\n\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n               not(_.isEqual(nextProps, @props))\n\n\n    # Init an array with keys of expanded articles\n    _initExpanded: (props) ->\n        props ?= @props\n        expanded = []\n        if props.conversation?\n            # set first expanded message: first unseen or last of conversation\n            props.conversation.map((message, key) ->\n                isUnread = MessageFlags.SEEN not in message.get 'flags'\n                isLast   = key is props.conversation.length - 1\n                if (expanded.length is 0 and (isUnread or isLast))\n                    expanded.push key\n            ).toJS()\n        return expanded\n\n    getInitialState: ->\n        # compact: set to true to not display all messages in conversation\n        return {\n            expanded: @_initExpanded()\n            compact: true\n        }\n\n    componentWillReceiveProps: (props) ->\n        if props.conversation?.length isnt @props.conversation?.length\n            expanded = @_initExpanded(props)\n            @setState expanded: expanded, compact: true\n\n    renderToolbar: ->\n        Toolbar\n            readability         : @props.readability\n            nextMessageID       : @props.nextMessageID\n            nextConversationID  : @props.nextConversationID\n            prevMessageID       : @props.prevMessageID\n            prevConversationID  : @props.prevConversationID\n            settings            : @props.settings\n\n\n    renderMessage: (key, active) ->\n        # allow the Message component to update current active message\n        # in conversation. Needed to open the first unread message when\n        # opening a conversation\n        toggleActive = =>\n            expanded = @state.expanded[..]\n            if key in expanded\n                expanded = expanded.filter (id) -> return key isnt id\n            else\n                expanded.push key\n            @setState expanded: expanded\n\n        Message\n            ref                 : 'message'\n            accounts            : @props.accounts\n            active              : active\n            inConversation      : @props.conversation.length > 1\n            key                 : key.toString()\n            mailboxes           : @props.mailboxes\n            message             : @props.conversation.get key\n            selectedAccountID   : @props.selectedAccountID\n            selectedAccountLogin: @props.selectedAccountLogin\n            selectedMailboxID   : @props.selectedMailboxID\n            settings            : @props.settings\n            displayConversations: @props.displayConversation\n            useIntents          : @props.useIntents\n            toggleActive        : toggleActive\n\n\n    renderGroup: (messages, key) ->\n        # if there are more than 3 messages, by default only render\n        # first and last ones\n        if messages.length > 3 and @state.compact\n            items = []\n            [first, ..., last] = messages\n            items.push @renderMessage(first, false)\n            items.push button\n                className: 'more'\n                onClick: =>\n                    @setState compact: false\n                i className: 'fa fa-refresh'\n                t 'load more messages', messages.length - 2\n            items.push @renderMessage(last, false)\n        else\n            items = (@renderMessage(key, false) for key in messages)\n\n        return items\n\n\n    render: ->\n        if not @props.conversation\n            return section\n                key: 'conversation'\n                className: 'conversation panel'\n                'aria-expanded': true,\n                p null, t \"app loading\"\n\n        message = @props.conversation.get 0\n        # Sort messages in conversation to find seen messages and group them\n        messages = []\n        lastMessageIndex = @props.conversation.length - 1\n        @props.conversation.map((message, key) =>\n            if key in @state.expanded\n                messages.push key\n            else\n                [..., last] = messages\n                messages.push(last = []) unless _.isArray(last)\n                last.push key\n        ).toJS()\n\n        # Starts components rendering\n        section\n            key: 'conversation'\n            className: 'conversation panel'\n            'aria-expanded': true,\n\n            header null,\n                h3\n                    className: 'conversation-title'\n                    'data-message-id': message.get 'id'\n                    'data-conversation-id': message.get 'conversationID'\n                    message.get 'subject'\n                @renderToolbar()\n                a\n                    className: 'clickable btn btn-default fa fa-close'\n                    href: @buildClosePanelUrl 'second'\n                    onClick: LayoutActionCreator.minimizePreview\n\n            for glob, index in messages\n                if _.isArray glob\n                    @renderGroup glob, index\n                else\n                    @renderMessage glob, true\n","{div, ul, li, span, i, button, input} = React.DOM\n{Tooltips} = require '../constants/app_constants'\n\n\nmomentFormat     = 'DD/MM/YYYY'\ndatePickerFormat = '%d/%m/%Y'\n\n\nmodule.exports = DateRangePicker = React.createClass\n    displayName: 'DateRangePicker'\n\n    propTypes:\n        active:       React.PropTypes.bool\n        onDateFilter: React.PropTypes.func.isRequired\n\n    getInitialState: ->\n        isActive:  @props.active\n        label:     t 'daterangepicker placeholder'\n        startDate: ''\n        endDate:   ''\n\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        should = not(_.isEqual(nextState, @state)) or\n            not (_.isEqual(nextProps, @props))\n        return should\n\n\n    componentWillReceiveProps: (nextProps) ->\n        if @state.isActive and not nextProps.active\n            # we don't call reset here because we don't want to filterize\n            @setState\n                isActive:  false\n                startDate: ''\n                endDate:   ''\n\n\n    onStartChange: (obj) ->\n        date = if obj.target? then obj.target.value else\n            \"#{obj.dd}/#{obj.mm}/#{obj.yyyy}\"\n        active = !!date and !!@state.endDate\n        @setState isActive: active, startDate: date, @filterize\n\n\n    onEndChange: (obj) ->\n        date = if obj.target then obj.target.value else\n            \"#{obj.dd}/#{obj.mm}/#{obj.yyyy}\"\n        active = !!@state.startDate and !!date\n        @setState isActive: active, endDate: date, @filterize\n\n\n    filterize: ->\n        return if not @state.startDate ^ not @state.endDate\n\n        start = if @state.startDate\n            [d, m, y] = @state.startDate.split '/'\n            \"#{y}-#{m}-#{d}T00:00:00.000Z\"\n\n        end = if @state.endDate\n            [d, m, y] = @state.endDate.split '/'\n            \"#{y}-#{m}-#{d}T23:59:59.999Z\"\n\n        @props.onDateFilter start, end\n\n\n    reset: ->\n        @setState\n            isActive:  false\n            startDate: ''\n            endDate:   '',\n            @filterize\n\n\n    presetYesterday: ->\n        @setState\n            isActive:  true\n            startDate: moment().subtract(1, 'day').format(momentFormat)\n            endDate:   moment().subtract(1, 'day').format(momentFormat),\n            @filterize\n\n\n    presetLastWeek: ->\n        @setState\n            isActive:  true\n            startDate: moment().subtract(1, 'week').format(momentFormat)\n            endDate:   moment().format(momentFormat),\n            @filterize\n\n\n    presetLastMonth: ->\n        @setState\n            isActive:  true\n            startDate: moment().subtract(1, 'month').format(momentFormat)\n            endDate:   moment().format(momentFormat),\n            @filterize\n\n\n    render: ->\n        div\n            className:                'dropdown date-range-picker'\n            'aria-describedby':       Tooltips.FILTER_DATE_RANGE\n            'data-tooltip-direction': 'bottom'\n\n            button\n                className:       'dropdown-toggle'\n                role:            'menuitem'\n                'data-toggle':   'dropdown'\n                'aria-selected': @state.isActive\n\n                i className: 'fa fa-calendar'\n                span className: 'btn-label',\n                    \"#{@state.label} \"\n                span className: 'caret'\n\n            div className: 'dropdown-menu',\n                ul className: 'presets list-unstyled',\n                    li role: 'presentation',\n                        button\n                            role:    'menuitem'\n                            onClick: @presetYesterday\n                            t 'daterangepicker presets yesterday'\n\n                    li role: 'presentation',\n                        button\n                            role:    'menuitem'\n                            onClick: @presetLastWeek\n                            t 'daterangepicker presets last week'\n\n                    li role: 'presentation',\n                        button\n                            role:    'menuitem'\n                            onClick: @presetLastMonth\n                            t 'daterangepicker presets last month'\n\n                    li role: 'presentation',\n                        button\n                            role:    'menuitem'\n                            onClick: @reset\n                            t 'daterangepicker clear'\n\n                div className: 'date-pickers',\n                    input\n                        ref:      \"date-range-picker-start\"\n                        id:       \"date-range-picker-start\"\n                        type:     'text'\n                        name:     \"date-range-picker-start\"\n                        value:    @state.startDate\n                        onChange: @onStartChange\n\n                    input\n                        ref:      \"date-range-picker-end\"\n                        id:       \"date-range-picker-end\"\n                        type:     'text'\n                        name:     \"date-range-picker-end\"\n                        value:    @state.endDate\n                        onChange: @onEndChange\n\n\n    # Add third party datepicker to start and end date fields\n    initDatepicker: ->\n        options =\n            staticPos: true\n            fillGrid:  true\n            hideInput: true\n\n        datePickerController.createDatePicker _.extend {}, options,\n            formElements: 'date-range-picker-start': datePickerFormat\n            callbackFunctions: datereturned: [@onStartChange]\n\n        datePickerController.createDatePicker _.extend {}, options,\n            formElements: 'date-range-picker-end': datePickerFormat\n            callbackFunctions: datereturned: [@onEndChange]\n\n\n    componentDidMount: ->\n        @initDatepicker()\n\n    componentDidUpdate: ->\n        datePickerController.setDateFromInput 'date-range-picker-start'\n        datePickerController.setDateFromInput 'date-range-picker-end'\n","{div, form, input, ul, li, span, i, a} = React.DOM\n\nMessageUtils = require '../utils/message_utils'\n\n\n# file picker file format = mailparser result\nFileShape = React.PropTypes.shape\n    fileName           : React.PropTypes.string\n    length             : React.PropTypes.number\n    contentType        : React.PropTypes.string\n    generatedFileName  : React.PropTypes.string\n    contentDisposition : React.PropTypes.string\n    contentId          : React.PropTypes.string\n    transferEncoding   : React.PropTypes.string\n    # one or the other\n    rawFileObject      : React.PropTypes.object\n    url                : React.PropTypes.string\n\n\n###\n# File picker\n#\n# Available props\n# - editable: boolean (false)\n# - files: array\n# - form: boolean (true) embed component inside a form element\n# - valueLink: a ReactLink for files\n# - messageID: string\n###\n\nFilePicker = React.createClass\n    displayName: 'FilePicker'\n\n    propTypes:\n        editable: React.PropTypes.bool\n        display:  React.PropTypes.func\n        value:    React.PropTypes.instanceOf Immutable.Vector\n        valueLink: React.PropTypes.shape\n            value: React.PropTypes.instanceOf Immutable.Vector\n            requestChange: React.PropTypes.func\n        messageID: React.PropTypes.string\n\n\n    getDefaultProps: ->\n        editable: false\n        valueLink:\n            value: Immutable.Vector.empty()\n            requestChange: ->\n\n    getInitialState: ->\n        files: @props.value or @props.valueLink.value\n        target: false\n\n    componentWillReceiveProps: (props) ->\n        @setState files: props.value or props.valueLink.value\n\n    addFiles: (files) ->\n        files = (@_fromDOM file for file in files)\n        files = @state.files.concat(files).toVector()\n\n        @props.valueLink.requestChange files\n\n    deleteFile: (file) ->\n        files = @state.files.filter (f) ->\n            f.get('generatedFileName') isnt file.generatedFileName\n        .toVector()\n\n        @props.valueLink.requestChange files\n\n    displayFile: (file) ->\n        if file.url\n            window.open file.url\n        else if file.rawFileObject\n            window.open URL.createObjectURL file.rawFileObject\n        else console.log \"broken file : \", file\n\n    render: ->\n        classMain = 'file-picker'\n        classMain += \" #{@props.className}\" if @props.className\n        classZone = 'dropzone'\n        classZone += \" target\" if @state.target\n        div className: classMain,\n            ul className: 'files list-unstyled',\n                @state.files.toJS().map (file) =>\n                    FileItem\n                        key: file.generatedFileName\n                        file: file\n                        editable: @props.editable\n                        delete: => @deleteFile file\n                        display: => @displayFile file\n                        messageID: @props.messageID\n\n            if @props.editable\n                div null,\n                    # triggering \"click\" won't work if file input is hidden\n                    span className: \"file-wrapper\",\n                        input\n                            type: \"file\",\n                            multiple: \"multiple\",\n                            ref: \"file\",\n                            onChange: @handleFiles\n                    div\n                        className: classZone\n                        ref: \"dropzone\",\n                        onDragOver: @allowDrop,\n                        onDragEnter: @onDragEnter,\n                        onDragLeave: @onDragLeave,\n                        onDrop: @handleFiles,\n                        onClick: @onOpenFile,\n                            i className: \"fa fa-paperclip\"\n                            span null, t \"picker drop here\"\n\n    onOpenFile: (e) ->\n        e.preventDefault()\n        jQuery(@refs.file.getDOMNode()).trigger \"click\"\n\n    allowDrop: (e) ->\n        e.preventDefault()\n\n    onDragEnter: (e) ->\n        if not @state.target\n            @setState target: true\n\n    onDragLeave: (e) ->\n        if @state.target\n            @setState target: false\n\n    handleFiles: (e) ->\n        e.preventDefault()\n        files = e.target.files or e.dataTransfer.files\n        @addFiles files\n        @setState target: false\n\n    # convert from DOM Files to file picker format\n    _fromDOM: (file) ->\n        idx = @state.files.filter (f) -> f.get('fileName') is file.name\n            .count()\n        name = file.name\n        if idx > 0\n            dotpos = file.name.indexOf '.'\n            name = name.substring(0, dotpos) + '-' + (idx + 1) +\n                name.substring(dotpos)\n\n        return Immutable.Map\n            fileName:           file.name\n            length:             file.size\n            contentType:        file.type\n            rawFileObject:      file\n            generatedFileName:  name\n            contentDisposition: null\n            contentId:          file.name\n            transferEncoding:   null\n            content:            null\n            url:                null\n\n\n            # reader = new FileReader()\n            # reader.readAsDataURL(file)\n            # reader.onloadend = (e) =>\n            #     txt = e.target.result\n            #     file.content = txt\n            #     currentFiles.push file\n            #     parsed++\n            #     if parsed is files.length\n            #         @props.valueLink.requestChange currentFiles\n            #         @setState {files: currentFiles }\n\n\n\n\nmodule.exports = FilePicker\n\n###\n# Display a file item\n#\n# Props:\n#  - file\n#  - editable: boolean (false) allow to delete file\n#  - (display): function\n#  - (delete): function\n#  - (messageID): string\n###\nFileItem = React.createClass\n    displayName: 'FileItem'\n\n    propTypes:\n        file: React.PropTypes.shape({\n            fileName: React.PropTypes.string\n            contentType: React.PropTypes.string\n            length: React.PropTypes.number\n        }).isRequired\n        editable:  React.PropTypes.bool\n        display:   React.PropTypes.func\n        delete:    React.PropTypes.func\n        messageID: React.PropTypes.string\n\n    getDefaultProps: ->\n        return {\n            editable: false\n        }\n\n    getInitialState: ->\n        return {}\n\n    render: ->\n        file = @props.file\n        if not(file.url?) and not(file.rawFileObject)\n            window.cozyMails.log(new Error \"Wrong file #{JSON.stringify(file)}\")\n            file.url = \"message/#{@props.messageID}/attachments/#{file.generatedFileName}\"\n        type = MessageUtils.getAttachmentType file.contentType\n        icons =\n            'archive'      : 'fa-file-archive-o'\n            'audio'        : 'fa-file-audio-o'\n            'code'         : 'fa-file-code-o'\n            'image'        : 'fa-file-image-o'\n            'pdf'          : 'fa-file-pdf-o'\n            'word'         : 'fa-file-word-o'\n            'presentation' : 'fa-file-powerpoint-o'\n            'spreadsheet'  : 'fa-file-excel-o'\n            'text'         : 'fa-file-text-o'\n            'video'        : 'fa-file-video-o'\n            'word'         : 'fa-file-word-o'\n        iconClass = icons[type] or 'fa-file-o'\n\n        li className: \"file-item\", key: @props.key,\n            i className: \"mime #{type} fa #{iconClass}\"\n            a\n                className: 'file-name',\n                target: '_blank',\n                onClick: @doDisplay,\n                href: file.url\n                'data-file-url': file.url\n                'data-file-name': file.generatedFileName\n                'data-file-type': file.contentType\n                file.generatedFileName\n\n            span className: 'file-size',\n                \"\\(#{(file.length / 1000).toFixed(1)}Ko\\)\"\n            span className: 'file-actions',\n                a\n                    className: \"fa fa-download\"\n                    href: \"#{file.url}?download=1\"\n                if @props.editable\n                    i className: \"fa fa-times delete\", onClick: @doDelete\n\n    doDisplay: (e) ->\n        e.preventDefault()\n        e.stopPropagation()\n        @props.display()\n\n    doDelete: (e) ->\n        e.preventDefault()\n        e.stopPropagation()\n        @props.delete()\n","{div, ul, li, span, a, button} = React.DOM\n\nRouterMixin = require '../mixins/router_mixin'\n\nmodule.exports = React.createClass\n    displayName: 'MailboxList'\n\n    mixins: [RouterMixin]\n\n    onChange: (boxid) ->\n        @props.onChange? boxid\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n            not (_.isEqual(nextProps, @props))\n\n    render: ->\n        selectedID = @props.selectedMailboxID\n        if @props.mailboxes? and Object.keys(@props.mailboxes).length > 0\n            if selectedID?\n                selected = @props.mailboxes[selectedID]\n            div className: 'btn-group btn-group-sm dropdown pull-left',\n                button\n                    className: 'btn dropdown-toggle',\n                    type: 'button',\n                    'data-toggle': 'dropdown',\n                    selected?.label or t 'mailbox pick one'\n                        span className: 'caret', ''\n                ul className: 'dropdown-menu', role: 'menu',\n                    if @props.allowUndefined and selected?\n                        li\n                            role: 'presentation',\n                            key: null,\n                            onClick: @onChange.bind(this, null),\n                                a role: 'menuitem', t 'mailbox pick null'\n\n                    for key, mailbox of @props.mailboxes when key isnt selectedID\n                        @getMailboxRender mailbox, key\n        else\n            # no account selected\n            div null, \"\"\n\n\n    getMailboxRender: (mailbox, key) ->\n        url = @props.getUrl?(mailbox)\n        onChange = @onChange.bind(this, key)\n\n        # Mark nested levels with \"--\" because plain space\n        # just doesn't work for some reason\n        pusher = \"\"\n        pusher += \"--\" for i in [1..mailbox.depth] by 1\n\n        li role: 'presentation', key: key, onClick: onChange,\n            if url?\n                a href: url, role: 'menuitem', \"#{pusher}#{mailbox.label}\"\n            else\n                a role: 'menuitem', \"#{pusher}#{mailbox.label}\"\n\n","{div, label, textarea, span, ul, li, a, img, i} = React.DOM\n\nMessageUtils    = require '../utils/message_utils'\nContactStore    = require '../stores/contact_store'\nContactActionCreator = require '../actions/contact_action_creator'\nLayoutActionCreator = require '../actions/layout_action_creator'\n\nclasser = React.addons.classSet\n\n# Public: input to enter multiple mails\n# @TODO : use something tag-it like\n\nmodule.exports = MailsInput = React.createClass\n    displayName: 'MailsInput'\n\n    getStateFromStores: ->\n        contacts: ContactStore.getResults()\n\n    componentWillMount: ->\n        @setState contacts: null, open: false\n\n    getInitialState: ->\n        state = @getStateFromStores()\n        state.known    = @props.valueLink.value\n        state.unknown  = ''\n        state.selected = 0\n        state.open     = false\n        return state\n\n    componentWillReceiveProps: (nextProps) ->\n        @setState known: nextProps.valueLink.value\n\n    # Code from the StoreWatch Mixin. We don't use the mixin\n    # because we store other things into the state\n    componentDidMount: ->\n        ContactStore.on 'change', @_setStateFromStores\n\n    componentWillUnmount: ->\n        ContactStore.removeListener 'change', @_setStateFromStores\n\n    _setStateFromStores: -> @setState @getStateFromStores()\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n            not (_.isEqual(nextProps, @props))\n\n    render: ->\n\n        renderTag = (address, idx) =>\n            remove = =>\n                known = @state.known.filter (a) ->\n                    return a.address isnt address.address\n                @props.valueLink.requestChange known\n\n            onDragStart = (event) =>\n                event.stopPropagation()\n                if address?\n                    data =\n                        name: address.name\n                        address: address.address\n                    event.dataTransfer.setData 'address', JSON.stringify(data)\n                    event.dataTransfer.effectAllowed = 'all'\n                    # needed to prevent droping over drag source\n                    event.dataTransfer.setData @props.id, true\n\n            onDragEnd = (event) ->\n                if event.dataTransfer.dropEffect is 'move'\n                    remove()\n\n            if address.name? and address.name.trim() isnt ''\n                display = address.name\n            else\n                display = address.address\n            span\n                className: 'address-tag'\n                draggable: true\n                onDragStart: onDragStart\n                onDragEnd: onDragEnd\n                key: \"#{@props.id}-#{address.address}-#{idx}\"\n                title: address.address\n                display\n                    a\n                        className: 'clickable'\n                        onClick: remove,\n                            i className: 'fa fa-times'\n\n        knownContacts = @state.known.map renderTag\n\n        # set focus to input area when clicking into component\n        onClick = =>\n            @refs.contactInput.getDOMNode().focus()\n\n        onChange = (event) =>\n            value = event.target.value.split ','\n            if value.length is 2\n                known = _.clone @state.known\n                known.push(MessageUtils.parseAddress value[0])\n                @props.valueLink.requestChange known\n                @setState unknown: value[1].trim()\n            else\n                @setState unknown: event.target.value\n\n        onInput = (event) =>\n            input = @refs.contactInput.getDOMNode()\n            input.cols = input.value.length + 2\n\n        className  = \"\"\"\n           #{@props.className or ''} form-group mail-input #{@props.id}\n        \"\"\"\n        classLabel = 'compose-label control-label'\n        listClass  = classer\n            'contact-form': true\n            open: @state.open and @state.contacts?.length > 0\n        current    = 0\n\n        # in Chrome, we need to cancel some events for drop to work\n        cancelDragEvent = (event) =>\n            event.preventDefault()\n            # To prevent removing the contact when dropped where it has been dragged,\n            # we must set dropEffect to 'none'\n            # if Chrome, we can only access types of data, not data themselves\n            # In Chrome, types are an array; in Firefox, a DOMStringList\n            types = Array.prototype.slice.call(event.dataTransfer.types)\n            if types.indexOf(@props.id) is -1\n                event.dataTransfer.dropEffect = 'move'\n            else\n                event.dataTransfer.dropEffect = 'none'\n\n        # don't display placeholder if there are dests\n        if knownContacts.length > 0\n            placeholder = ''\n        else\n            placeholder = @props.placeholder\n\n        div\n            className: className,\n            onClick: onClick\n            onDrop: @onDrop,\n            onDragEnter: cancelDragEvent,\n            onDragLeave: cancelDragEvent,\n            onDragOver: cancelDragEvent,\n                label htmlFor: @props.id, className: classLabel,\n                    @props.label\n                knownContacts\n                div className: 'contact-group dropdown ' + listClass,\n                    textarea\n                        id: @props.id\n                        name: @props.id\n                        className: 'form-control compose-input'\n                        onKeyDown: @onKeyDown\n                        onBlur: @onBlur\n                        onDrop: @onDrop\n                        onDragEnter: cancelDragEvent\n                        onDragLeave: cancelDragEvent\n                        onDragOver: cancelDragEvent\n                        ref: 'contactInput'\n                        rows: 1\n                        value: @state.unknown\n                        onChange: onChange\n                        onInput: onInput\n                        placeholder: placeholder\n                        'autoComplete': 'off'\n                        'spellCheck': 'off'\n\n                    if @state.contacts?\n                        ul className: \"dropdown-menu contact-list\",\n                            @state.contacts.map (contact, key) =>\n                                selected = current is @state.selected\n                                current++\n                                @renderContact contact, selected\n                            .toJS()\n\n    renderContact: (contact, selected) ->\n        selectContact = =>\n            @onContact contact\n        avatar = contact.get 'avatar'\n\n        classes = classer\n            selected: selected\n\n        li className: classes, onClick: selectContact,\n            a null,\n                if avatar?\n                    img\n                        className: 'avatar'\n                        src: avatar\n                else\n                    i className: 'avatar fa fa-user'\n                \"#{contact.get 'fn'} <#{contact.get 'address'}>\"\n\n    onQuery: (char) ->\n        query = @refs.contactInput.getDOMNode().value.split(',').pop().replace(/^\\s*/, '')\n        if char? and typeof char is 'string'\n            query += char\n            force = false\n        else if char? and typeof char is 'object'\n            # always display contact list when user click on contact button\n            force = true\n        if query.length > 2 or ( force and not @state.open )\n            ContactActionCreator.searchContactLocal query\n            @setState open: true\n            return true\n        else\n            if @state.open\n                @setState contacts: null, open: false\n            return false\n\n    onKeyDown: (evt) ->\n        count    = @state.contacts?.count()\n        selected = @state.selected\n        switch evt.key\n            when \"Enter\"\n                # Typing enter key leads to the same behavior as blurring:\n                # adding a contact to the current list\n                @addContactFromInput() if 13 in [evt.keyCode, evt.which]\n\n                if @state.contacts?.count() > 0\n                    contact = @state.contacts.slice(selected).first()\n                    @onContact contact\n                else\n                    @onQuery()\n                evt.preventDefault()\n                return false\n            when \"ArrowUp\"\n                @setState selected: if selected is 0 then count - 1 else selected - 1\n            when \"ArrowDown\"\n                @setState selected: if selected is (count - 1) then 0 else selected + 1\n            when \"Backspace\"\n                node = @refs.contactInput.getDOMNode()\n                node.value = node.value.trim()\n                if node.value.length < 2\n                    @setState open: false\n            when \"Escape\"\n                @setState contacts: null, open: false\n            else\n                if (evt.key? or evt.key.toString().length is 1)\n                    @onQuery(String.fromCharCode(evt.which))\n                    return true\n\n\n    onBlur: ->\n        # We must use a timeout, otherwise, when user click inside contact list,\n        # blur is triggered first and the click event lost. Dirty hack\n        setTimeout =>\n            @addContactFromInput true\n        , 100\n\n\n    # Grab text from the input and ensure it's a valid email address.\n    # If the address is valid, adds it to the recipient list.\n    addContactFromInput: (isBlur=false) ->\n        # if user cancel compose, component may be unmounted when the timeout\n        # is fired\n        if @isMounted()\n            state = {}\n            # close suggestion list\n            state.open = false\n            # Add current value to list of addresses\n            value = @refs.contactInput.getDOMNode().value\n\n            if value.trim() isnt ''\n                address = MessageUtils.parseAddress value\n\n                if address.isValid\n                    @state.known.push address\n                    state.known   = @state.known\n                    state.unknown = ''\n                    @props.valueLink.requestChange state.known\n                    @setState state\n\n                else\n                    # Trick to make sure that the alert error is not pop up\n                    # twiced due to multiple blur and key down.\n                    # Do not display anything when the field is blurred.\n                    isContacts = @state.contacts?.length is 0\n                    if not isBlur and isContacts\n\n                        msg = t 'compose wrong email format',\n                            address: address.address\n                        LayoutActionCreator.alertError msg\n\n            else\n                @setState state\n\n\n    onContact: (contact) ->\n        address =\n            name    : contact.get 'fn'\n            address : contact.get 'address'\n        known = _.clone @state.known\n        known.push address\n        @props.valueLink.requestChange known\n        @setState unknown: '', contacts: null, open: false\n\n        # try to put back the focus at the end of the field\n        setTimeout =>\n            query = @refs.contactInput.getDOMNode().focus()\n        , 200\n\n    onDrop: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        {name, address} = JSON.parse(event.dataTransfer.getData 'address')\n        exists = @state.known.some (item) ->\n            return item.name is name and item.address is address\n        if address? and not exists\n            address =\n                name    : name\n                address : address\n            known = _.clone @state.known\n            known.push address\n            @props.valueLink.requestChange known\n            @setState unknown: '', contacts: null, open: false\n            event.dataTransfer.dropEffect = 'move'\n        else\n            event.dataTransfer.dropEffect = 'none'\n","{div, aside, nav, ul, li, span, a, i, button} = React.DOM\n\nclasser = React.addons.classSet\n\nRouterMixin     = require '../mixins/router_mixin'\nStoreWatchMixin = require '../mixins/store_watch_mixin'\n\nAccountActionCreator      = require '../actions/account_action_creator'\nLayoutActionCreator       = require '../actions/layout_action_creator'\nMessageActionCreator      = require '../actions/message_action_creator'\n\nAccountStore   = require '../stores/account_store'\nLayoutStore    = require '../stores/layout_store'\nRefreshesStore = require '../stores/refreshes_store'\n\nMessageUtils = require '../utils/message_utils'\ncolorhash    = require '../utils/colorhash'\n\n{Dispositions, SpecialBoxIcons, Tooltips} = require '../constants/app_constants'\n\n\n# This is here for a convenient way to fond special mailboxes names.\n# NOTE: should we externalize them in app_constants?\nspecialMailboxes = [\n    'inboxMailbox'\n    'draftMailbox'\n    'sentMailbox'\n    'trashMailbox'\n    'junkMailbox'\n    'allMailbox'\n]\n\n\nmodule.exports = Menu = React.createClass\n    displayName: 'Menu'\n\n    mixins: [\n        RouterMixin\n        StoreWatchMixin [AccountStore, LayoutStore, RefreshesStore]\n    ]\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n               not(_.isEqual(nextProps, @props))\n\n    getInitialState: ->\n        displayActiveAccount: true\n        onlyFavorites: true\n\n    getStateFromStores: ->\n        isDrawerExpanded : LayoutStore.isDrawerExpanded()\n        refreshes        : RefreshesStore.getRefreshing()\n        accounts         : AccountStore.getAll()\n        mailboxes        : AccountStore.getSelectedMailboxes true\n        favorites        : AccountStore.getSelectedFavorites true\n\n    componentWillReceiveProps: (props) ->\n        if not Immutable.is(props.selectedAccount, @props.selectedAccount)\n            @setState displayActiveAccount: true\n\n\n    displayErrors: (refreshee) ->\n        errors = refreshee.get 'errors'\n        modal =\n            title       : t 'modal please contribute'\n            subtitle    : t 'modal please report'\n            allowCopy   : true\n            closeModal  : ->\n                LayoutActionCreator.hideModal()\n            closeLabel  : t 'app alert close'\n            content     : React.DOM.pre\n                style: \"max-height\": \"300px\",\n                \"word-wrap\": \"normal\",\n                    errors.join \"\\n\\n\"\n        LayoutActionCreator.displayModal modal\n\n    render: ->\n\n        if @state.accounts.length\n            selectedAccountUrl = @buildUrl\n                direction: 'first'\n                action: 'account.mailbox.messages'\n                parameters: @props.selectedAccount?.get 'id'\n                fullWidth: true\n        else\n            selectedAccountUrl = @buildUrl\n                direction: 'first'\n                action: 'account.new'\n                fullWidth: true\n\n        # the button toggle the \"new account\" screen\n        if @props.layout.firstPanel.action is 'account.new'\n            newMailboxClass = 'active'\n            newMailboxUrl = selectedAccountUrl\n        else\n            newMailboxClass = ''\n            newMailboxUrl = @buildUrl\n                direction: 'first'\n                action: 'account.new'\n                fullWidth: true\n\n        # the button toggles the \"settings\" screen\n        if @props.layout.firstPanel.action is 'settings' or\n           @props.layout.secondPanel?.action is 'settings'\n            settingsClass = 'active'\n            settingsUrl = selectedAccountUrl\n        else\n            settingsClass = ''\n            settingsUrl = @buildUrl\n                direction: 'first'\n                action: 'settings'\n                fullWidth: true\n\n        composeUrl = @buildUrl\n            direction: 'first'\n            action: 'compose'\n            parameters: null\n            fullWidth: true\n\n        # Starts DOM rendering\n        aside\n            role: 'menubar'\n            'aria-expanded': @state.isDrawerExpanded,\n\n            if @state.accounts.length\n                a\n                    href: composeUrl\n                    className: 'compose-action btn btn-cozy-contrast btn-cozy',\n                        i className: 'fa fa-pencil'\n                        span className: 'item-label', \" #{t 'menu compose'}\"\n\n            nav className: 'mainmenu',\n                if @state.accounts.length\n                    @state.accounts.map (account, key) =>\n                        @getAccountRender account, key\n                    .toJS()\n\n            nav className: 'submenu',\n                a\n                    href: newMailboxUrl\n                    role: 'menuitem'\n                    className: \"btn new-account-action #{newMailboxClass}\",\n                        i className: 'fa fa-plus'\n                        span className: 'item-label', t 'menu account new'\n\n                button\n                    role: 'menuitem'\n                    className: classer\n                        btn:               true\n                        fa:                true\n                        'drawer-toggle':   true\n                        'fa-caret-right': not @state.isDrawerExpanded\n                        'fa-caret-left':  @state.isDrawerExpanded\n                    onClick: LayoutActionCreator.drawerToggle\n\n    # renders a single account and its submenu\n    getAccountRender: (account, key) ->\n\n        isSelected = (not @props.selectedAccount? and key is 0) \\\n                     or @props.selectedAccount?.get('id') is account.get('id')\n\n        accountID      = account.get 'id'\n        nbUnread       = account.get('totalUnread')\n        defaultMailbox = AccountStore.getDefaultMailbox accountID\n        refreshes      = @state.refreshes\n\n        if defaultMailbox?\n            url = @buildUrl\n                direction: 'first'\n                action: 'account.mailbox.messages'\n                parameters: [accountID, defaultMailbox?.get 'id']\n                fullWidth: true # /!\\ Hide second panel when switching account\n        else\n            # Go to account settings to add mailboxes\n            url = @buildUrl\n                direction: 'first'\n                action: 'account.config'\n                parameters: [accountID, 'account']\n                fullWidth: true # /!\\ Hide second panel when switching account\n\n        toggleActive = =>\n            if not @state.displayActiveAccount\n                @setState displayActiveAccount: true\n\n        toggleDisplay = =>\n            if isSelected\n                @setState displayActiveAccount: not @state.displayActiveAccount\n            else\n                @setState displayActiveAccount: true\n\n        toggleFavorites = =>\n            @setState onlyFavorites: not @state.onlyFavorites\n\n\n        isActive = (isSelected and @state.displayActiveAccount)\n        accountClasses = classer\n            active: isActive\n\n\n        if @state.onlyFavorites\n            mailboxes = @state.favorites\n            icon = 'fa-ellipsis-h'\n            toggleFavoritesLabel = t 'menu favorites off'\n        else\n            mailboxes = @state.mailboxes\n            icon = 'fa-ellipsis-h'\n            toggleFavoritesLabel = t 'menu favorites on'\n\n        allBoxesAreFavorite = @state.mailboxes.length is @state.favorites.length\n\n        configMailboxUrl = @buildUrl\n            direction: 'first'\n            action: 'account.config'\n            parameters: [accountID, 'account']\n            fullWidth: true\n\n        specialMboxes = specialMailboxes.map (mbox) -> account.get mbox\n        accountColor  = colorhash(account.get 'label')\n\n        div\n            className: accountClasses, key: key,\n            div className: 'account-title',\n                a\n                    href: url\n                    role: 'menuitem'\n                    className: 'account ' + accountClasses,\n                    onClick: toggleActive\n                    onDoubleClick: toggleDisplay\n                    'data-toggle': 'tooltip'\n                    'data-delay': '10000'\n                    'data-placement' : 'right',\n                        i\n                            className: 'avatar'\n                            style:\n                                'background-color': accountColor\n                            account.get('label')[0]\n                        span\n                            'data-account-id': key,\n                            className: 'item-label',\n                            account.get 'label'\n\n                    if progress = refreshes.get(accountID)\n                        if progress.get('errors').length\n                            span className: 'refresh-error',\n                                i\n                                    className: 'fa warning',\n                                    onClick: @displayErrors.bind null,\n                                    progress\n\n                if isSelected\n                    a\n                        href: configMailboxUrl\n                        className: 'mailbox-config',\n                        i\n                            className:\n                                'fa fa-cog'\n                            'aria-describedby': Tooltips.ACCOUNT_PARAMETERS\n                            'data-tooltip-direction': 'right'\n\n                if nbUnread > 0 and not progress\n                    span className: 'badge', nbUnread\n\n            if isSelected\n                ul\n                    role: 'group'\n                    className: 'list-unstyled mailbox-list',\n                    mailboxes?.filter (mailbox) ->\n                        mailbox.get('id') in specialMboxes\n                    .map (mailbox, key) =>\n                        selectedMailboxID = @props.selectedMailboxID\n                        MenuMailboxItem\n                            account:           account,\n                            mailbox:           mailbox,\n                            key:               key,\n                            selectedMailboxID: selectedMailboxID,\n                            refreshes:         refreshes,\n                            displayErrors:     @displayErrors,\n                    .toJS()\n                    mailboxes?.filter (mailbox) ->\n                        mailbox.get('id') not in specialMboxes\n                    .map (mailbox, key) =>\n                        selectedMailboxID = @props.selectedMailboxID\n                        MenuMailboxItem\n                            account:           account,\n                            mailbox:           mailbox,\n                            key:               key,\n                            selectedMailboxID: selectedMailboxID,\n                            refreshes:         refreshes,\n                            displayErrors:     @displayErrors,\n                    .toJS()\n                    unless allBoxesAreFavorite\n                        li className: 'toggle-favorites',\n                            a\n                                role: 'menuitem',\n                                tabIndex: 0,\n                                onClick: toggleFavorites,\n                                key: 'toggle',\n                                    i className: 'fa ' + icon\n                                    span\n                                        className: 'item-label',\n                                        toggleFavoritesLabel\n\n    _initTooltips: ->\n        #jQuery('#account-list [data-toggle=\"tooltip\"]').tooltip()\n\n    componentDidMount: ->\n        @_initTooltips()\n\n    componentDidUpdate: ->\n        @_initTooltips()\n\n\nMenuMailboxItem = React.createClass\n    displayName: 'MenuMailboxItem'\n\n    mixins: [RouterMixin]\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n               not(_.isEqual(nextProps, @props))\n\n    getInitialState: ->\n        return target: false\n\n    onClickMailbox: ->\n        if @props.mailbox.get('id') is @props.selectedMailboxID\n            MessageActionCreator.refreshMailbox(@props.selectedMailboxID)\n\n    render: ->\n        mailboxID = @props.mailbox.get 'id'\n        mailboxUrl = @buildUrl\n            direction: 'first'\n            action: 'account.mailbox.messages'\n            parameters: [@props.account.get('id'), mailboxID]\n\n        nbTotal  = @props.mailbox.get('nbTotal') or 0\n        nbUnread = @props.mailbox.get('nbUnread') or 0\n        nbRecent = @props.mailbox.get('nbRecent') or 0\n        title    = t \"menu mailbox total\", nbTotal\n        if nbUnread > 0\n            title += \" #{t \"menu mailbox unread\", nbUnread}\"\n        if nbRecent > 0\n            title += \" #{t \"menu mailbox new\", nbRecent}\"\n\n        mailboxIcon = 'fa-folder-o'\n        specialMailbox = false\n        for attrib, icon of SpecialBoxIcons\n            if @props.account.get(attrib) is mailboxID\n                mailboxIcon = icon\n                specialMailbox = attrib\n\n        classesParent = classer\n            active: mailboxID is @props.selectedMailboxID\n            target: @state.target\n        classesChild = classer\n            target:  @state.target\n            special: specialMailbox\n            news:    nbRecent > 0\n        classesChild += \" #{specialMailbox}\" if specialMailbox\n\n\n        progress = @props.refreshes.get mailboxID\n        displayError = @props.displayErrors.bind null, progress\n\n        li className: classesParent,\n            a\n                href: mailboxUrl\n                onClick: @onClickMailbox\n                className: \"#{classesChild} lv-#{@props.mailbox.get('depth')}\"\n                role: 'menuitem'\n                'data-mailbox-id': mailboxID\n                onDragEnter: @onDragEnter\n                onDragLeave: @onDragLeave\n                onDragOver: @onDragOver\n                onDrop: (e) =>\n                    @onDrop e, mailboxID\n                title: title\n                'data-toggle': 'tooltip'\n                'data-placement' : 'right'\n                key: @props.key,\n                    # Something must be rethought about the icon\n                    i className: 'fa ' + mailboxIcon\n                    span\n                        className: 'item-label',\n                        \"#{@props.mailbox.get 'label'}\"\n\n                if progress?.get('errors').length\n                    span className: 'refresh-error', onClick: displayError,\n                        i className: 'fa fa-warning', null\n\n            if @props.account.get('trashMailbox') is mailboxID\n                button\n                    'aria-describedby':       Tooltips.EXPUNGE_MAILBOX\n                    'data-tooltip-direction': 'right'\n                    onClick: @expungeMailbox\n\n                    span className: 'fa fa-recycle'\n\n            if not progress and nbUnread and nbUnread > 0\n                span className: 'badge', nbUnread\n\n\n    onDragEnter: (e) ->\n        if not @state.target\n            @setState target: true\n\n    onDragLeave: (e) ->\n        if @state.target\n            @setState target: false\n\n    onDragOver: (e) ->\n        e.preventDefault()\n\n    onDrop: (event, to) ->\n        data = event.dataTransfer.getData('text')\n        {messageID, mailboxID, conversationID} = JSON.parse data\n        @setState target: false\n        MessageActionCreator.move {messageID, conversationID}, mailboxID, to\n\n    expungeMailbox: (e) ->\n        accountID = @props.account.get 'id'\n        mailboxID = @props.mailbox.get 'id'\n\n        e.preventDefault()\n\n        doExpunge = ->\n            mailbox =\n                accountID: accountID\n                mailboxID: mailboxID\n\n            AccountActionCreator.mailboxExpunge mailbox, (error) ->\n                if error?\n                    # if user hasn't switched to another box, refresh display\n                    if accountID is mailbox.accountID and\n                       mailboxID is mailbox.mailboxID\n                        params = _.clone(MessageStore.getParams())\n                        params.accountID = accountID\n                        params.mailboxID = mailboxID\n                        LayoutActionCreator.showMessageList parameters: params\n\n                    errorMessage = \"#{t(\"mailbox expunge ko\")} #{error}\"\n                    LayoutActionCreator.alertError errorMessage\n                else\n                    LayoutActionCreator.notify t(\"mailbox expunge ok\"),\n                        autoclose: true\n            LayoutActionCreator.hideModal()\n\n        modal =\n            title       : t 'app confirm delete'\n            subtitle    : t 'account confirm delbox'\n            closeModal  : ->\n                LayoutActionCreator.hideModal()\n            closeLabel  : t 'app cancel'\n            actionLabel : t 'app confirm'\n            action      : doExpunge\n        LayoutActionCreator.displayModal modal\n","{ul} = React.DOM\nMessageItem = require './message-list-item'\nDomUtils     = require '../utils/dom_utils'\n\n\nmodule.exports = MessageListBody = React.createClass\n    displayName: 'MessageListBody'\n\n    getInitialState: ->\n        state =\n            messageID: null\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        # we must do the comparison manually because the property \"onSelect\" is\n        # a function (therefore it should not be compared)\n        updatedProps = Object.keys(nextProps).filter (prop) =>\n            return typeof nextProps[prop] isnt 'function' and\n                not (_.isEqual(nextProps[prop], @props[prop]))\n        should = not(_.isEqual(nextState, @state)) or updatedProps.length > 0\n\n        return should\n\n    _isActive: (id, cid) ->\n        @props.messageID is id or\n        @props.displayConversations and cid? and @props.conversationID is cid\n\n    render: ->\n        ul className: 'list-unstyled', ref: 'messageList',\n            @props.messages.map((message, key) =>\n                id = message.get('id')\n                cid = message.get('conversationID')\n\n                MessageItem\n                    message: message,\n                    mailboxID: @props.mailboxID,\n                    conversationLengths: @props.conversationLengths?.get(cid),\n                    key: key,\n                    isActive: @_isActive(id, cid),\n                    edited: @props.edited,\n                    settings: @props.settings,\n                    selected: @props.selected[id]?,\n                    login: @props.login\n                    displayConversations: @props.displayConversations\n                    isTrash: @props.isTrash\n                    ref: 'messageItem'\n                    onSelect: (val) =>\n                        @props.onSelect id, val\n            ).toJS()\n\n    componentDidMount: ->\n        @_onMount()\n\n    componentDidUpdate: ->\n        @_onMount()\n\n    _onMount: ->\n        # If selected message has changed, scroll the list to put\n        # current message into view\n        if @state.messageID isnt @props.messageID\n            scrollable = @refs.messageList?.getDOMNode()?.parentNode\n            active = document.querySelector(\"[data-message-id='#{@props.messageID}']\")\n            if active? and not DomUtils.isVisible(active)\n                scroll = scrollable?.scrollTop\n                active.scrollIntoView(false)\n                # display half of next message\n                if scroll isnt @refs.scrollable?.getDOMNode()?.scrollTop\n                    scrollable?.scrollTop += active.getBoundingClientRect().height / 2\n\n            @setState messageID: @props.messageID\n","{div, section, p, ul, li, a, span, i, button, input, img} = React.DOM\n{MessageFlags} = require '../constants/app_constants'\nRouterMixin           = require '../mixins/router_mixin'\nclasser      = React.addons.classSet\nMessageUtils = require '../utils/message_utils'\ncolorhash    = require '../utils/colorhash'\nParticipants        = require './participant'\nMessageActionCreator = require '../actions/message_action_creator'\n\n\nmodule.exports = MessageItem = React.createClass\n    displayName: 'MessagesItem'\n\n    mixins: [RouterMixin]\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        # we must do the comparison manually because the property \"onSelect\" is\n        # a function (therefore it should not be compared)\n        updatedProps = Object.keys(nextProps).filter (prop) =>\n            return typeof nextProps[prop] isnt 'function' and\n                not (_.isEqual(nextProps[prop], @props[prop]))\n        shouldUpdate = not _.isEqual(nextState, @state) or\n            updatedProps.length > 0\n\n        return shouldUpdate\n\n    render: ->\n        message = @props.message\n        flags = message.get('flags')\n\n        classes = classer\n            message: true\n            unseen:  MessageFlags.SEEN not in flags\n            active:  @props.isActive\n            edited:  @props.edited\n\n        if MessageFlags.DRAFT in flags and not @props.isTrash\n            action = 'edit'\n            params =\n                messageID: message.get 'id'\n        else\n            conversationID = message.get 'conversationID'\n            if conversationID? and @props.displayConversations\n                action = 'conversation'\n                params =\n                    conversationID: conversationID\n                    messageID: message.get 'id'\n            else\n                action = 'message'\n                params =\n                    messageID: message.get 'id'\n\n        url = @buildUrl\n            direction: 'second'\n            action: action\n            parameters: params\n\n        compact = @props.settings.get('listStyle') is 'compact'\n        date    = MessageUtils.formatDate message.get('createdAt'), compact\n        avatar  = MessageUtils.getAvatar message\n        text    = message.get('text')\n        html    = message.get('html')\n        if not text? and html?\n            text = toMarkdown html\n        if not text?\n            text = ''\n\n        li\n            className:              classes\n            key:                    @props.key\n            'data-message-id':      message.get('id')\n            'data-conversation-id': message.get('conversationID')\n            draggable:              not @props.edited\n            onClick:                @onMessageClick\n            onDragStart:            @onDragStart,\n\n            # Change tag type if current message is in edited mode\n            (if @props.edited then span else a)\n                href:              url\n                className:         'wrapper'\n                'data-message-id': message.get('id')\n                onClick:           @onMessageClick\n                onDoubleClick:     @onMessageDblClick\n                ref:               'target'\n\n                div className: 'markers-wrapper',\n                    i\n                        className: classer\n                            select:              true\n                            fa:                  true\n                            'fa-check-square-o': @props.selected\n                            'fa-square-o':       not @props.selected\n                        onClick:   @onSelect\n\n                    if MessageFlags.SEEN in flags\n                        i className: 'fa'\n                    else\n                        i className: 'fa fa-circle'\n                    if MessageFlags.FLAGGED in flags\n                        i className: 'fa fa-star'\n\n                div className: 'avatar-wrapper select-target',\n                    if avatar?\n                        img className: 'avatar', src: avatar\n                    else\n                        from  = message.get('from')[0]\n                        cHash = \"#{from.name} <#{from.address}>\"\n                        i\n                            className: 'avatar placeholder'\n                            style:\n                                'background-color': colorhash(cHash)\n                            if from.name then from.name[0] else from.address[0]\n\n                div className: 'metas-wrapper',\n                    div className: 'participants ellipsable',\n                        @getParticipants message\n                    div className: 'subject ellipsable',\n                        p null,\n                            message.get 'subject'\n                    div className: 'date',\n                        # TODO: use time-elements component here for the date\n                        date\n                    div className: 'extras',\n                        if message.get 'hasAttachments'\n                            i className: 'attachments fa fa-paperclip'\n                        if @props.displayConversations and\n                           @props.conversationLengths > 1\n                            span className: 'conversation-length',\n                                \"#{@props.conversationLengths}\"\n                    div className: 'preview',\n                        p null, text.substr(0, 1024)\n\n    _doCheck: ->\n        # please don't ask me why this **** react needs this\n        if @props.selected\n            setTimeout =>\n                @refs.select?.getDOMNode().checked = true\n            , 50\n        else\n            setTimeout =>\n                @refs.select?.getDOMNode().checked = false\n            , 50\n\n    componentDidMount: ->\n        @_doCheck()\n\n    componentDidUpdate: ->\n        @_doCheck()\n\n    onSelect: (e) ->\n        @props.onSelect(not @props.selected)\n        e.preventDefault()\n        e.stopPropagation()\n\n    onMessageClick: (event) ->\n        node = @refs.target.getDOMNode()\n        if @props.edited and event.target.classList.contains 'select-target'\n            @props.onSelect(not @props.selected)\n            event.preventDefault()\n            event.stopPropagation()\n        # When hitting `enter` in deletion confirmation dialog, this\n        # event is fired on last active link. We must cancel it to prevent\n        # navigating to the last message the user clicked\n        else if event.target.classList.contains 'wrapper'\n            event.preventDefault()\n            event.stopPropagation()\n        else if not (event.target.getAttribute('type') is 'checkbox')\n            event.preventDefault()\n            event.stopPropagation()\n            MessageActionCreator.setCurrent node.dataset.messageId, true\n            if @props.settings.get('displayPreview')\n                href = '#' + node.getAttribute('href').split('#')[1]\n                @redirect href\n\n    onMessageDblClick: (event) ->\n        if not @props.edited\n            url = event.currentTarget.href.split('#')[1]\n            window.router.navigate url, {trigger: true}\n\n    onDragStart: (event) ->\n        event.stopPropagation()\n        data = mailboxID: @props.mailboxID\n\n        if @props.displayConversations\n            data.conversationID = event.currentTarget.dataset.conversationId\n        else\n            data.messageID = event.currentTarget.dataset.messageId\n\n        event.dataTransfer.setData 'text', JSON.stringify(data)\n        event.dataTransfer.effectAllowed = 'move'\n        event.dataTransfer.dropEffect = 'move'\n\n    getParticipants: (message) ->\n        from = message.get 'from'\n        to   = message.get('to').concat(message.get('cc')).filter (address) =>\n            return address.address isnt @props.login and\n                address.address isnt from[0]?.address\n        separator = if to.length > 0 then ', ' else ' '\n        p null,\n            Participants\n                participants: from\n                onAdd: @addAddress\n                ref: 'from'\n                tooltip: false\n            span null, separator\n            Participants\n                participants: to\n                onAdd: @addAddress\n                ref: 'to'\n                tooltip: false\n\n    addAddress: (address) ->\n        ContactActionCreator.createContact address\n","{div, section, p, ul, li, a, span, i, button, input, img} = React.DOM\n{MessageFlags, Tooltips} = require '../constants/app_constants'\n\nRouterMixin           = require '../mixins/router_mixin'\nTooltipRefresherMixin = require '../mixins/tooltip_refresher_mixin'\nStoreWatchMixin       = require '../mixins/store_watch_mixin'\n\nLayoutStore = require '../stores/layout_store'\n\nclasser      = React.addons.classSet\nDomUtils     = require '../utils/dom_utils'\nMessageUtils = require '../utils/message_utils'\nSocketUtils  = require '../utils/socketio_utils'\ncolorhash    = require '../utils/colorhash'\n\nContactActionCreator = require '../actions/contact_action_creator'\nLayoutActionCreator  = require '../actions/layout_action_creator'\nMessageActionCreator = require '../actions/message_action_creator'\n\nParticipants        = require './participant'\n{Spinner, Progress} = require './basic_components'\nToolbarMessagesList = require './toolbar_messageslist'\nMessageListBody = require './message-list-body'\n\n\nmodule.exports = MessageList = React.createClass\n    displayName: 'MessageList'\n\n    mixins: [\n        RouterMixin,\n        TooltipRefresherMixin\n        StoreWatchMixin [LayoutStore]\n    ]\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        should = not(_.isEqual(nextState, @state)) or\n            not (_.isEqual(nextProps, @props))\n        return should\n\n    getInitialState: ->\n        edited: false\n        selected: {}\n        allSelected: false\n\n    getStateFromStores: ->\n        fullscreen: LayoutStore.isPreviewFullscreen()\n\n    componentWillReceiveProps: (props) ->\n        if props.mailboxID isnt @props.mailboxID\n            @setState allSelected: false, edited: false, selected: {}\n        else\n            selected = @state.selected\n            # remove selected messages that are not in view anymore\n            for id, isSelected of selected when not props.messages.get(id)\n                delete selected[id]\n            @setState selected: selected\n            if Object.keys(selected).length is 0\n                @setState allSelected: false, edited: false\n\n    render: ->\n        compact = @props.settings.get('listStyle') is 'compact'\n\n        filterParams =\n            accountID: @props.accountID\n            mailboxID: @props.mailboxID\n            query:     @props.query\n\n        hasMore = @props.query.pageAfter isnt '-'\n        # This allow to load next messages if needed after we remove messages\n        # from this mailbox by moving or deleting them.\n        # (if we delete all messages, the list is empty and listEmpty displayed)\n        if hasMore\n            afterAction = =>\n                # ugly setTimeout to wait until localDelete occured\n                setTimeout =>\n                    listEnd = @refs.nextPage or @refs.listEnd or @refs.listEmpty\n                    if listEnd? and\n                       DomUtils.isVisible(listEnd.getDOMNode())\n                        params = parameters: @props.query\n                        LayoutActionCreator.showMessageList params\n                , 100\n\n        nextPage = =>\n            LayoutActionCreator.showMessageList parameters: @props.query\n\n        section\n            key:               'messages-list'\n            ref:               'list'\n            'data-mailbox-id': @props.mailboxID\n            className:         'messages-list panel'\n            'aria-expanded':   not @state.fullscreen\n\n            # Toolbar\n            ToolbarMessagesList\n                settings:             @props.settings\n                accountID:            @props.accountID\n                mailboxID:            @props.mailboxID\n                mailboxes:            @props.mailboxes\n                messages:             @props.messages\n                edited:               @state.edited\n                selected:             @state.selected\n                allSelected:          @state.allSelected\n                displayConversations: @props.displayConversations\n                toggleEdited:         @toggleEdited\n                toggleAll:            @toggleAll\n                afterAction:          afterAction\n                queryParams:          @props.queryParams\n                filter:               @props.filter\n\n            # Progress\n            Progress value: @props.refresh, max: 1\n\n            # Message List\n            if @props.messages.count() is 0\n                if @props.fetching\n                    p className: 'listFetching list-loading', t 'list fetching'\n                else\n                    p\n                        className: 'listEmpty'\n                        ref: 'listEmpty'\n                        @props.emptyListMessage\n            else\n                div\n                    className: 'main-content'\n                    ref: 'scrollable',\n                    MessageListBody\n                        messages: @props.messages\n                        settings: @props.settings\n                        mailboxID: @props.mailboxID\n                        messageID: @props.messageID\n                        conversationID: @props.conversationID\n                        conversationLengths: @props.conversationLengths\n                        login: @props.login\n                        edited: @state.edited\n                        selected: @state.selected\n                        allSelected: @state.allSelected\n                        displayConversations: @props.displayConversations\n                        isTrash: @props.isTrash\n                        ref: 'listBody'\n                        onSelect: (id, val) =>\n                            selected = _.clone @state.selected\n                            if val\n                                selected[id] = val\n                            else\n                                delete selected[id]\n                            if Object.keys(selected).length > 0\n                                newState =\n                                    edited: true\n                                    selected: selected\n                            else\n                                newState =\n                                    allSelected: false\n                                    edited: false\n                                    selected: {}\n                            @setState newState\n\n                    if hasMore\n                        p className: 'text-center list-footer',\n                            if @props.fetching\n                                Spinner()\n                            else\n                                a\n                                    className: 'more-messages'\n                                    onClick: nextPage,\n                                    ref: 'nextPage',\n                                    t 'list next page'\n                    else\n                        p ref: 'listEnd', t 'list end'\n\n    toggleEdited: ->\n        if @state.edited\n            @setState allSelected: false, edited: false, selected: {}\n        else\n            @setState edited: true\n\n    toggleAll: ->\n        if @state.allSelected\n            @setState allSelected: false, edited: false, selected: {}\n        else\n            selected = {}\n            @props.messages.map (message, key) ->\n                selected[key] = true\n            .toJS()\n            @setState allSelected: true, edited: true, selected: selected\n\n    _loadNext: ->\n        # load next message if last one is displayed (useful when navigating\n        # with keyboard)\n        lastMessage = @refs.listBody?.getDOMNode().lastElementChild\n        if @refs.nextPage? and\n           lastMessage? and\n           DomUtils.isVisible(lastMessage)\n            LayoutActionCreator.showMessageList parameters: @props.query\n\n    _handleRealtimeGrowth: ->\n        if @props.pageAfter isnt '-' and\n           @refs.listEnd? and\n           not DomUtils.isVisible(@refs.listEnd.getDOMNode())\n            lastdate = @props.messages.last().get('date')\n            SocketUtils.changeRealtimeScope @props.mailboxID, lastdate\n\n    _initScroll: ->\n        if not @refs.nextPage?\n            return\n\n        # listen to scroll events\n        if @refs.scrollable?\n            scrollable = @refs.scrollable.getDOMNode()\n            setTimeout =>\n                scrollable.removeEventListener 'scroll', @_loadNext\n                scrollable.addEventListener 'scroll', @_loadNext\n                @_loadNext()\n                # a lot of event can make the \"more messages\" label visible,\n                # so we check every few seconds\n                if not @_checkNextInterval?\n                    @_checkNextInterval = window.setInterval @_loadNext, 10000\n            , 0\n\n    componentDidMount: ->\n        @_initScroll()\n\n    componentDidUpdate: ->\n        @_initScroll()\n        @_handleRealtimeGrowth()\n\n    componentWillUnmount: ->\n        if @refs.scrollable?\n            scrollable = @refs.scrollable.getDOMNode()\n            scrollable.removeEventListener 'scroll', @_loadNext\n            if @_checkNextInterval?\n                window.clearInterval @_checkNextInterval\n\n","{\n    div, article, header, footer, ul, li, span, i, p, a, button, pre,\n    iframe\n} = React.DOM\n\nMessageHeader  = require \"./message_header\"\nMessageFooter  = require \"./message_footer\"\nToolbarMessage = require './toolbar_message'\nCompose        = require './compose'\n\n{ComposeActions, MessageFlags} = require '../constants/app_constants'\n\nLayoutActionCreator       = require '../actions/layout_action_creator'\nMessageActionCreator      = require '../actions/message_action_creator'\nContactActionCreator      = require '../actions/contact_action_creator'\n\nRouterMixin = require '../mixins/router_mixin'\nTooltipRefresherMixin = require '../mixins/tooltip_refresher_mixin'\n\nclasser = React.addons.classSet\nalertError   = LayoutActionCreator.alertError\nalertSuccess = LayoutActionCreator.notify\n\n\nmodule.exports = React.createClass\n    displayName: 'Message'\n\n    mixins: [\n        RouterMixin\n        TooltipRefresherMixin\n    ]\n\n\n    propTypes:\n        accounts               : React.PropTypes.object.isRequired\n        active                 : React.PropTypes.bool\n        inConversation         : React.PropTypes.bool\n        displayConversations   : React.PropTypes.bool\n        key                    : React.PropTypes.string.isRequired\n        mailboxes              : React.PropTypes.object.isRequired\n        message                : React.PropTypes.object.isRequired\n        selectedAccountID      : React.PropTypes.string.isRequired\n        selectedAccountLogin   : React.PropTypes.string.isRequired\n        selectedMailboxID      : React.PropTypes.string.isRequired\n        settings               : React.PropTypes.object.isRequired\n        useIntents             : React.PropTypes.bool.isRequired\n        toggleActive           : React.PropTypes.func.isRequired\n\n\n    getInitialState: ->\n        return {\n            composing: @_shouldOpenCompose(@props)\n            composeAction: ''\n            headers: false\n            messageDisplayHTML: @props.settings.get 'messageDisplayHTML'\n            messageDisplayImages: @props.settings.get 'messageDisplayImages'\n            currentMessageID: null\n            prepared: {}\n        }\n\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        should = not(_.isEqual(nextState, @state)) or\n                 not (_.isEqual(nextProps, @props))\n        return should\n\n\n    _shouldOpenCompose: (props) ->\n        # if message is a draft, and not deleted, open the compose component\n        flags     = @props.message.get('flags').slice()\n        trash     = @props.accounts[@props.selectedAccountID]?.trashMailbox\n        isDraft   = flags.indexOf(MessageFlags.DRAFT) > -1\n        isDeleted = @props.message.get('mailboxIDs')[trash]?\n        return isDraft and not isDeleted\n\n\n    _prepareMessage: (message) ->\n        # display full headers\n        fullHeaders = []\n        for key, value of message.get 'headers'\n            if Array.isArray(value)\n                fullHeaders.push \"#{key}: #{value.join('\\n    ')}\"\n            else\n                fullHeaders.push \"#{key}: #{value}\"\n\n        text = message.get 'text'\n        html = message.get 'html'\n        alternatives = message.get 'alternatives'\n        urls = /((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/gim\n        if not text? and not html?\n            # Some calendar invite may contain neither text nor HTML part\n            if alternatives?.length > 0\n                text = t 'calendar unknown format'\n            else\n                text = ''\n\n        # TODO: Do we want to convert text only messages to HTML ?\n        # /!\\ if messageDisplayHTML is set, this method should always return\n        # a value fo html, otherwise the content of the email flashes\n        if text? and not html? and @state.messageDisplayHTML\n            try\n                html = markdown.toHTML text.replace(/(^>.*$)([^>]+)/gm, \"$1\\n$2\")\n                html = \"<div class='textOnly'>#{html}</div>\"\n            catch e\n                html = \"<div class='textOnly'>#{text}</div>\"\n\n        if html? and not text? and not @state.messageDisplayHTML\n            text = toMarkdown html\n\n        mailboxes = message.get 'mailboxIDs'\n        trash = @props.accounts[@props.selectedAccountID]?.trashMailbox\n\n        if text?\n            rich = text.replace urls, '<a href=\"$1\" target=\"_blank\">$1</a>'\n            rich = rich.replace /^>>>>>[^>]?.*$/gim, '<span class=\"quote5\">$&</span>'\n            rich = rich.replace /^>>>>[^>]?.*$/gim, '<span class=\"quote4\">$&</span>'\n            rich = rich.replace /^>>>[^>]?.*$/gim, '<span class=\"quote3\">$&</span>'\n            rich = rich.replace /^>>[^>]?.*$/gim, '<span class=\"quote2\">$&</span>'\n            rich = rich.replace /^>[^>]?.*$/gim, '<span class=\"quote1\">$&</span>'\n\n        flags = @props.message.get('flags').slice()\n        return {\n            attachments: message.get 'attachments'\n            fullHeaders: fullHeaders\n            text       : text\n            rich       : rich\n            html       : html\n            isDraft    : (flags.indexOf(MessageFlags.DRAFT) > -1)\n            isDeleted  : mailboxes[trash]?\n        }\n\n\n    componentWillMount: ->\n        @_markRead(@props.message, @props.active)\n\n\n    componentWillReceiveProps: (props) ->\n        state = {}\n        if props.message.get('id') isnt @props.message.get('id')\n            @_markRead(props.message, props.active)\n            state.messageDisplayHTML   = props.settings.get 'messageDisplayHTML'\n            state.messageDisplayImages = props.settings.get 'messageDisplayImages'\n            state.composing            = @_shouldOpenCompose props\n        @setState state\n\n\n    _markRead: (message, active) ->\n        # Hack to prevent infinite loop if server side mark as read fails\n        messageID = message.get 'id'\n        if @state.currentMessageID isnt messageID\n            state =\n                currentMessageID: messageID\n                prepared: @_prepareMessage message\n            @setState state\n\n            # Only mark as read current active message if unseen\n            flags = message.get('flags').slice()\n            if active and flags.indexOf(MessageFlags.SEEN) is -1\n                setTimeout ->\n                    MessageActionCreator.mark {messageID}, MessageFlags.SEEN\n                , 1\n\n\n    prepareHTML: (html) ->\n        messageDisplayHTML = true\n        parser = new DOMParser()\n        html   = \"\"\"<html><head>\n                <link rel=\"stylesheet\" href=\"/fonts/fonts.css\" />\n                <link rel=\"stylesheet\" href=\"./mail_stylesheet.css\" />\n                <style>body { visibility: hidden; }</style>\n            </head><body>#{html}</body></html>\"\"\"\n        doc    = parser.parseFromString html, \"text/html\"\n        images = []\n\n        if not doc\n            doc = document.implementation.createHTMLDocument(\"\")\n            doc.documentElement.innerHTML = html\n\n        if not doc\n            console.error \"Unable to parse HTML content of message\"\n            messageDisplayHTML = false\n\n        if doc and not @state.messageDisplayImages\n            hideImage = (image) ->\n                image.dataset.src = image.getAttribute 'src'\n                image.removeAttribute 'src'\n            images = doc.querySelectorAll 'IMG[src]'\n            hideImage image for image in images\n\n        for link in doc.querySelectorAll 'a[href]'\n            link.target = '_blank'\n            # convert relative to absolute links in message content\n            href = link.getAttribute 'href'\n            if href isnt '' and not /:\\/\\//.test href\n                link.setAttribute 'href', 'http://' + href\n\n        if doc?\n            @_htmlContent = doc.documentElement.innerHTML\n        else\n            @_htmlContent = html\n\n        return {messageDisplayHTML, images}\n\n\n    render: ->\n        message  = @props.message\n        prepared = @state.prepared\n\n        if @state.messageDisplayHTML and prepared.html?\n            {messageDisplayHTML, images} = @prepareHTML prepared.html\n            imagesWarning = images.length > 0 and\n                            not @state.messageDisplayImages\n        else\n            messageDisplayHTML = false\n            imagesWarning      = false\n\n        isUnread = message.get('flags').slice().indexOf(MessageFlags.SEEN) is -1\n\n        setActive = =>\n            if isUnread and not @props.active\n                messageID = message.get('id')\n                MessageActionCreator.mark {messageID}, MessageFlags.SEEN\n            @props.toggleActive()\n\n        classes = classer\n            message: true\n            active: @props.active\n            isDraft: prepared.isDraft\n            isDeleted: prepared.isDeleted\n            isUnread: isUnread\n\n        article\n            className: classes,\n            key: @props.key,\n            'data-id': message.get('id'),\n                header\n                    onClick: setActive,\n                    @renderHeaders()\n                    @renderToolbox() if @props.active\n                @renderCompose(prepared.isDraft) if @props.active\n                (div className: 'full-headers',\n                    pre null, prepared?.fullHeaders?.join \"\\n\") if @props.active\n                (MessageContent\n                    ref: 'messageContent'\n                    messageID: message.get 'id'\n                    messageDisplayHTML: messageDisplayHTML\n                    html: @_htmlContent\n                    text: prepared.text\n                    rich: prepared.rich\n                    imagesWarning: imagesWarning\n                    composing: @state.composing\n                    displayImages: @displayImages\n                    displayHTML: @displayHTML) if @props.active\n                (footer null,\n                    @renderFooter()\n                    @renderToolbox(false)) if @props.active\n\n\n    renderHeaders: ->\n        MessageHeader\n            message: @props.message\n            isDraft: @state.prepared.isDraft\n            isDeleted: @state.prepared.isDeleted\n            active: @props.active\n            ref: 'header'\n\n\n    renderToolbox: (full = true) ->\n        return if @state.composing\n\n        ToolbarMessage\n            full                 : full\n            message              : @props.message\n            mailboxes            : @props.mailboxes\n            selectedMailboxID    : @props.selectedMailboxID\n            inConversation       : @props.inConversation\n            onReply              : @onReply\n            onReplyAll           : @onReplyAll\n            onForward            : @onForward\n            onDelete             : @onDelete\n            onHeaders            : @onHeaders\n            onMove               : @onMove\n            onMark               : @onMark\n            onConversationDelete : @onConversationDelete\n            onConversationMark   : @onConversationMark\n            onConversationMove   : @onConversationMove\n            ref                  : 'toolbarMessage'\n\n\n    renderFooter: ->\n        MessageFooter\n            message: @props.message\n            ref: 'footer'\n\n\n    renderCompose: (isDraft) ->\n        if @state.composing\n            # If message is a draft, opens it, otherwise create a new message\n            options =\n                accounts             : @props.accounts\n                layout               : 'second'\n                ref                  : 'compose'\n                selectedAccountID    : @props.selectedAccountID\n                selectedAccountLogin : @props.selectedAccountLogin\n                settings             : @props.settings\n                useIntents           : @props.useIntents\n            if isDraft\n                options.action            = null\n                options.inReplyTo         = null\n                options.message           = @props.message\n                options.selectedMailboxID = @props.selectedMailboxID\n            else\n                options.action    =@state.composeAction\n                options.inReplyTo = @props.message\n                options.callback  = (error) =>\n                    if not error?\n                        # component has probably already been unmounted\n                        # due to conversation refresh\n                        if @isMounted()\n                            @setState composing: false\n                options.onCancel = =>\n                    # component has probably already been unmounted\n                    # due to conversation refresh\n                    if @isMounted()\n                        @setState composing: false\n\n            Compose options\n\n\n    toggleHeaders: (e) ->\n        e.preventDefault()\n        e.stopPropagation()\n        state =\n            headers: not @state.headers\n        if @props.inConversation and not @props.active\n            @props.toggleActive()\n        @setState state\n\n\n    toggleActive: (e) ->\n        if @props.inConversation\n            e.preventDefault()\n            e.stopPropagation()\n            @props.toggleActive()\n            @setState headers: false\n\n    onReply: (e) ->\n        e.preventDefault()\n        e.stopPropagation()\n        @setState composing: true, composeAction: ComposeActions.REPLY\n\n\n    onReplyAll: (e) ->\n        e.preventDefault()\n        e.stopPropagation()\n        @setState composing: true, composeAction: ComposeActions.REPLY_ALL\n\n\n    onForward: (e) ->\n        e.preventDefault()\n        e.stopPropagation()\n        @setState composing: true, composeAction: ComposeActions.FORWARD\n\n\n    onDelete: (e) ->\n        e.preventDefault()\n        e.stopPropagation()\n        needConfirmation = @props.settings.get('messageConfirmDelete')\n        messageID = @props.message.get('id')\n        confirmMessage = t 'mail confirm delete',\n            subject: @props.message.get('subject')\n\n        if not needConfirmation\n            MessageActionCreator.delete {messageID}\n        else\n            modal =\n                title       : t 'app confirm delete'\n                subtitle    : confirmMessage\n                closeModal  : ->\n                    LayoutActionCreator.hideModal()\n                closeLabel  : t 'app cancel'\n                actionLabel : t 'app confirm'\n                action      : ->\n                    MessageActionCreator.delete {messageID}\n                    LayoutActionCreator.hideModal()\n            LayoutActionCreator.displayModal modal\n\n    onConversationDelete: ->\n        conversationID = @props.message.get('conversationID')\n        MessageActionCreator.delete {conversationID}\n\n    onMark: (flag) ->\n        messageID = @props.message.get('id')\n        MessageActionCreator.mark {messageID}, flag\n\n    onConversationMark: (flag) ->\n        conversationID = @props.message.get('conversationID')\n        MessageActionCreator.mark {conversationID}, flag\n\n    onMove: (to) ->\n        messageID = @props.message.get('id')\n        from = @props.selectedMailboxID\n        subject = @props.message.get 'subject'\n        MessageActionCreator.move {messageID}, from, to\n\n    onConversationMove: (to) ->\n        conversationID = @props.message.get('conversationID')\n        from = @props.selectedMailboxID\n        subject = @props.message.get 'subject'\n        MessageActionCreator.move {conversationID}, from, to\n\n    onCopy: (args) ->\n        LayoutActionCreator.alertWarning t \"app unimplemented\"\n\n\n    onHeaders: (event) ->\n        event.preventDefault()\n        id = @props.message.get 'id'\n        document.querySelector(\".conversation [data-id='#{id}']\")\n            .classList.toggle('with-headers')\n\n\n    addAddress: (address) ->\n        ContactActionCreator.createContact address\n\n\n    displayImages: (event) ->\n        event.preventDefault()\n        @setState messageDisplayImages: true\n\n\n    displayHTML: (value) ->\n        if not value?\n            value = true\n        @setState messageDisplayHTML: value\n\n\n\nMessageContent = React.createClass\n    displayName: 'MessageContent'\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    render: ->\n        displayHTML= =>\n            @props.displayHTML true\n        if @props.messageDisplayHTML and @props.html\n            div null,\n                if @props.imagesWarning\n                    div\n                        className: \"imagesWarning alert alert-warning content-action\",\n                        ref: \"imagesWarning\",\n                            i className: 'fa fa-shield'\n                            t 'message images warning'\n                            button\n                                className: 'btn btn-xs btn-warning',\n                                type: \"button\",\n                                ref: 'imagesDisplay',\n                                onClick: @props.displayImages,\n                                t 'message images display'\n                iframe\n                    'data-message-id': @props.messageID\n                    name: \"frame-#{@props.messageID}\"\n                    className: 'content',\n                    ref: 'content',\n                    allowTransparency: true,\n                    sandbox: 'allow-same-origin allow-popups',\n                    frameBorder: 0\n        else\n            div className: 'row',\n                div className: 'preview', ref: content,\n                    p dangerouslySetInnerHTML: { __html: @props.rich }\n\n    _initFrame: (type) ->\n        panel = document.querySelector \"#panels > .panel:nth-of-type(2)\"\n        if panel? and not @props.composing\n            panel.scrollTop = 0\n        # - resize the frame to the height of its content\n        # - if images are not displayed, create the function to display them\n        #   and resize the frame\n        if @props.messageDisplayHTML and @refs.content\n            frame = @refs.content.getDOMNode()\n            doc = frame.contentDocument or frame.contentWindow?.document\n            checkResize = false # disabled for now\n            step = 0\n            # Function called on frame load\n            # Inject HTML content of the message inside the frame, then\n            # update frame height to remove scrollbar\n            loadContent = (e) =>\n                step = 0\n                doc = frame.contentDocument or frame.contentWindow?.document\n                if doc?\n                    doc.documentElement.innerHTML = @props.html\n                    window.cozyMails.customEvent \"MESSAGE_LOADED\", @props.messageID\n                    updateHeight = (e) ->\n                        height = doc.documentElement.scrollHeight\n                        if height < 60\n                            frame.style.height = \"60px\"\n                        else\n                            frame.style.height = \"#{height + 60}px\"\n                        step++\n                        # Prevent infinite loop on onresize event\n                        if checkResize and step > 10\n\n                            doc.body.removeEventListener 'load', loadContent\n                            frame.contentWindow?.removeEventListener 'resize'\n\n                    updateHeight()\n                    # some browsers don't fire event when remote fonts are loaded\n                    # so we need to wait a little and check the frame height again\n                    setTimeout updateHeight, 1000\n\n                    # Update frame height on load\n                    doc.body.onload = updateHeight\n\n                    # disabled for now\n                    if checkResize\n                        frame.contentWindow.onresize = updateHeight\n                        window.onresize = updateHeight\n                        frame.contentWindow?.addEventListener 'resize', updateHeight, true\n                else\n                    # try to display text only\n                    @props.displayHTML false\n\n            if type is 'mount' and doc.readyState isnt 'complete'\n                frame.addEventListener 'load', loadContent\n            else\n                loadContent()\n        else\n            window.cozyMails.customEvent \"MESSAGE_LOADED\", @props.messageID\n\n    componentDidMount: ->\n        @_initFrame('mount')\n\n    componentDidUpdate: ->\n        @_initFrame('update')\n","{div, span, ul, li, a, i} = React.DOM\nMessageUtils = require '../utils/message_utils'\n\nAttachmentPreview = require './attachement_preview'\n\n\nmodule.exports = React.createClass\n    displayName: 'MessageFooter'\n\n    propTypes:\n        message: React.PropTypes.object.isRequired\n\n\n    render: ->\n        div className: 'attachments',\n            @renderAttachments()\n\n\n    renderAttachments: ->\n        attachments = @props.message.get('attachments')?.toJS() or []\n        return unless attachments.length\n\n        resources =_.groupBy attachments, (file) ->\n            if MessageUtils.getAttachmentType(file.contentType) is 'image'\n                'preview'\n            else\n                'binary'\n        ul className: null,\n            if resources.preview\n                for file in resources.preview\n                    AttachmentPreview\n                        ref: 'attachmentPreview'\n                        file: file\n                        key: file.checksum\n                        preview: true\n                        previewLink: true\n            if resources.binary\n                for file in resources.binary\n                    AttachmentPreview\n                        ref: 'attachmentPreview'\n                        file: file\n                        key: file.checksum\n                        preview: false\n                        previewLink: true\n","{div, span, i, img} = React.DOM\n{MessageFlags} = require '../constants/app_constants'\n\nPopupMessageDetails     = require './popup_message_details'\nPopupMessageAttachments = require './popup_message_attachments'\nParticipantMixin        = require '../mixins/participant_mixin'\nmessageUtils            = require '../utils/message_utils'\n\n\nmodule.exports = React.createClass\n    displayName: 'MessageHeader'\n\n    propTypes:\n        message: React.PropTypes.object.isRequired\n        isDraft: React.PropTypes.bool\n        isDeleted: React.PropTypes.bool\n\n    mixins: [\n        ParticipantMixin\n    ]\n\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        should = not (_.isEqual(nextProps, @props))\n        return should\n\n    render: ->\n        avatar = messageUtils.getAvatar @props.message\n\n        div key: \"message-header-#{@props.message.get 'id'}\",\n            if avatar\n                div className: 'sender-avatar',\n                    img className: 'media-object', src: avatar\n            div className: 'infos',\n                @renderAddress 'from'\n                @renderAddress 'to' if @props.active\n                @renderAddress 'cc' if @props.active\n                if @props.active\n                    div className: 'metas indicators',\n                        if @props.message.get('attachments').length\n                            PopupMessageAttachments\n                                message: @props.message\n                        if MessageFlags.FLAGGED in @props.message.get('flags')\n                            i className: 'fa fa-star'\n                        if @props.isDraft\n                            i className: 'fa fa-edit'\n                        if @props.isDeleted\n                            i className: 'fa fa-trash'\n                div className: 'metas date',\n                    messageUtils.formatDate @props.message.get 'createdAt'\n                PopupMessageDetails\n                    message: @props.message\n\n\n    renderAddress: (field) ->\n        users = @props.message.get field\n        return unless users.length\n\n        div\n            className: \"addresses #{field}\"\n            key: \"address-#{field}\",\n\n            div className: 'addresses-wrapper',\n                if field isnt 'from'\n                    span null,\n                        t \"mail #{field}\"\n                @formatUsers(users)...\n","module.exports = Modal = React.createClass\n    displayName: 'Modal'\n\n    render: ->\n        contentClass = ''\n        contentClass = 'no-content' if not @props.content\n        React.DOM.div\n            className: \"modal fade in\",\n            role: \"dialog\",\n            style: display: 'block',\n                React.DOM.div className: \"modal-dialog\",\n                    React.DOM.div className: \"modal-content\",\n                        if @props.title?\n                            React.DOM.div className: \"modal-header\",\n                                if @props.closeLabel?\n                                    React.DOM.button\n                                        type: 'button',\n                                        className: 'close',\n                                        onClick: @props.closeModal,\n                                            React.DOM.i className: 'fa fa-times'\n                                React.DOM.h4\n                                    className: \"modal-title\",\n                                    @props.title\n                        React.DOM.div className: \"modal-body #{contentClass}\",\n                            if @props.subtitle?\n                                React.DOM.span null, @props.subtitle\n                            if @props.content?\n                                React.DOM.div ref: 'content',\n                                    @props.content\n                        React.DOM.div className: \"modal-footer\",\n                            if @props.allowCopy\n                                React.DOM.button\n                                    type: 'button',\n                                    className: 'btn btn-cozy',\n                                    onClick: @copyContent\n                                    t 'modal copy content'\n                            if @props.actionLabel? and @props.action\n                                React.DOM.button\n                                    type: 'button',\n                                    className: 'btn btn-cozy',\n                                    onClick: @props.action,\n                                    @props.actionLabel\n                            if @props.closeLabel?\n                                React.DOM.button\n                                    type: 'button',\n                                    className: 'btn btn-cozy-non-default',\n                                    onClick: @props.closeModal,\n                                    @props.closeLabel\n\n    copyContent: ->\n        sel= window.getSelection()\n\n        if sel.rangeCount > 0\n            sel.removeAllRanges()\n\n        range = document.createRange()\n        range.selectNode(@refs.content?.getDOMNode())\n        sel.addRange(range)\n        document.execCommand 'copy'\n\n","AccountConfig  = require './account_config'\nCompose        = require './compose'\nConversation   = require './conversation'\nMessageList    = require './message-list'\nSettings       = require './settings'\n\n# React Mixins\nRouterMixin          = require '../mixins/router_mixin'\nStoreWatchMixin      = require '../mixins/store_watch_mixin'\nTooltipRefesherMixin = require '../mixins/tooltip_refresher_mixin'\n\n# Flux stores\nAccountStore  = require '../stores/account_store'\nMessageStore  = require '../stores/message_store'\nSearchStore   = require '../stores/search_store'\nSettingsStore = require '../stores/settings_store'\n\n{MessageFilter, Dispositions} = require '../constants/app_constants'\n\nmodule.exports = Panel = React.createClass\n    displayName: 'Panel'\n\n    mixins: [\n        StoreWatchMixin [AccountStore, MessageStore, SettingsStore]\n        TooltipRefesherMixin\n        RouterMixin\n    ]\n\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        should = not(_.isEqual(nextState, @state)) or\n                 not (_.isEqual(nextProps, @props))\n        return should\n\n    render: ->\n        # -- Generates a list of messages for a given account and mailbox\n        if @props.action is 'account.mailbox.messages' or\n           @props.action is 'account.mailbox.messages.full' or\n           @props.action is 'search'\n\n            @renderList()\n\n        # -- Generates a configuration window for a given account\n        else if @props.action is 'account.config' or\n                @props.action is 'account.new'\n\n            @renderAccount()\n\n        # -- Generates a conversation\n        else if @props.action is 'message' or\n                @props.action is 'conversation'\n\n            @renderConversation()\n\n        # -- Generates the new message composition form\n        else if @props.action is 'compose' or\n                @props.action is 'edit'\n\n            @renderCompose()\n\n        # -- Display the settings form\n        else if @props.action is 'settings'\n\n            @renderSettings()\n\n        # -- Error case, shouldn't happen. Might be worth to make it pretty.\n        else\n            console.error \"Unknown action #{@props.action}\"\n            window.cozyMails.logInfo \"Unknown action #{@props.action}\"\n            return React.DOM.div null, 'Unknown component'\n\n    renderList: ->\n        if @props.action is 'search'\n            accountID = null\n            mailboxID = null\n            messages  = @state.results\n            messagesCount    = messages.count()\n            emptyListMessage = t 'list empty'\n            counterMessage   = t 'list search count', messagesCount\n        else\n            accountID = @props.accountID\n            mailboxID = @props.mailboxID\n            account   = AccountStore.getByID accountID\n            if account?\n                mailbox   = account.get('mailboxes').get mailboxID\n                messages  = MessageStore.getMessagesByMailbox mailboxID,\n                    @state.settings.get('displayConversation')\n                messagesCount = mailbox?.get('nbTotal') or 0\n                emptyListMessage = switch @state.currentFilter\n                    when MessageFilter.FLAGGED\n                        t 'no flagged message'\n                    when MessageFilter.UNSEEN\n                        t 'no unseen message'\n                    when MessageFilter.ALL\n                        t 'list empty'\n                    else\n                        t 'no filter message'\n                counterMessage   = t 'list count', messagesCount\n            else\n                setTimeout =>\n                    @redirect\n                        direction: \"first\"\n                        action: \"default\"\n                , 1\n                return\n\n        # gets the selected message if any\n\n        if @state.settings.get 'displayConversation'\n            # select first conversation to allow navigation to start\n            conversationID = @state.currentConversationID\n            if not conversationID? and messages.length > 0\n                conversationID = messages.first().get 'conversationID'\n            conversationLengths = MessageStore.getConversationsLength()\n\n        query = _.clone(@state.queryParams)\n        query.accountID = accountID\n        query.mailboxID = mailboxID\n\n        # don't display conversations in Trash and Draft folders\n        conversationDisabledBoxes = [\n            @state.selectedAccount?.get('trashMailbox')\n            @state.selectedAccount?.get('draftMailbox')\n            @state.selectedAccount?.get('junkMailbox')\n        ]\n        if mailboxID in conversationDisabledBoxes\n            displayConversations = false\n        else\n            displayConversations = @state.settings.get 'displayConversation'\n\n        isTrash = conversationDisabledBoxes[0] is mailboxID\n\n        return MessageList\n            key:                  'messageList-' + mailboxID\n            messages:             messages\n            accountID:            accountID\n            mailboxID:            mailboxID\n            messageID:            @state.currentMessageID\n            conversationID:       conversationID\n            login:                account?.get 'login'\n            mailboxes:            @state.mailboxesFlat\n            settings:             @state.settings\n            fetching:             @state.fetching\n            refresh:              @state.refresh\n            query:                query\n            isTrash:              isTrash\n            conversationLengths:  conversationLengths\n            emptyListMessage:     emptyListMessage\n            ref:                  'messageList'\n            displayConversations: displayConversations\n            queryParams:          @state.queryParams\n            filter:               @state.currentFilter\n\n\n    renderAccount: ->\n        if @props.action is 'account.config'\n            options =\n                # don't use @state.selectedAccount\n                ref               : \"accountConfig\"\n                selectedAccount   : AccountStore.getSelected()\n                error             : @state.accountError\n                isWaiting         : @state.accountWaiting\n                mailboxes         : @state.selectedMailboxes\n                favoriteMailboxes : @state.favoriteMailboxes\n                tab               : @props.tab\n            if options.selectedAccount? and\n               not options.error and\n               options.mailboxes.length is 0\n                options.error =\n                    name: 'AccountConfigError'\n                    field: 'nomailboxes'\n\n        else if @props.action is 'account.new'\n            options =\n                ref       : \"accountNew\"\n                error     : @state.accountError\n                isWaiting : @state.accountWaiting\n\n        return AccountConfig options\n\n    renderConversation: ->\n        messageID = @props.messageID\n        mailboxID = @props.mailboxID\n        message   = MessageStore.getByID messageID\n        selectedMailboxID = @props.selectedMailboxID\n        if message?\n            conversationID     = message.get 'conversationID'\n            lengths            = MessageStore.getConversationsLength()\n            conversationLength = lengths.get conversationID\n            conversation       = MessageStore.getConversation conversationID\n            selectedMailboxID ?= Object.keys(message.get('mailboxIDs'))[0]\n\n        # don't display conversations in Trash and Draft folders\n        conversationDisabledBoxes = [\n            @state.selectedAccount?.get('trashMailbox')\n            @state.selectedAccount?.get('draftMailbox')\n            @state.selectedAccount?.get('junkMailbox')\n        ]\n        if mailboxID in conversationDisabledBoxes\n            displayConversations = false\n        else\n            displayConversations = @state.settings.get 'displayConversation'\n\n        prevMessage = MessageStore.getPreviousMessage()\n        nextMessage = MessageStore.getNextMessage()\n\n        # don't display conversation panel when there's no conversation\n        # (happens sometime on deletion or filtering)\n        return null unless conversationID?\n\n        return Conversation\n            key: 'conversation-' + conversationID\n            settings             : @state.settings\n            accounts             : @state.accountsFlat\n            mailboxes            : @state.mailboxesFlat\n            selectedAccountID    : @state.selectedAccount.get 'id'\n            selectedAccountLogin : @state.selectedAccount.get 'login'\n            selectedMailboxID    : selectedMailboxID\n            conversationID       : conversationID\n            conversation         : conversation\n            conversationLength   : conversationLength\n            prevMessageID        : prevMessage?.get 'id'\n            prevConversationID   : prevMessage?.get 'conversationID'\n            nextMessageID        : nextMessage?.get 'id'\n            nextConversationID   : nextMessage?.get 'conversationID'\n            ref                  : 'conversation'\n            displayConversations : displayConversations\n            useIntents           : @props.useIntents\n\n\n    renderCompose: ->\n        options =\n            layout               : 'full'\n            action               : null\n            inReplyTo            : null\n            settings             : @state.settings\n            accounts             : @state.accountsFlat\n            selectedAccountID    : @state.selectedAccount.get 'id'\n            selectedAccountLogin : @state.selectedAccount.get 'login'\n            selectedMailboxID    : @props.selectedMailboxID\n            useIntents           : @props.useIntents\n            ref                  : 'compose'\n\n        if @props.action is 'compose'\n            options.message = null\n        # -- Generates the edit draft composition form\n        else if @props.action is 'edit'\n            options.message = MessageStore.getByID @props.messageID\n\n        return Compose options\n\n\n    renderSettings: ->\n        return Settings\n            ref     : 'settings'\n            settings: @state.settings\n\n\n    getStateFromStores: ->\n\n        selectedAccount = AccountStore.getSelected()\n        # When selecting compose in Menu, we may not have a selected account\n        if not selectedAccount?\n            selectedAccount = AccountStore.getDefault()\n\n\n        # Flat copies of accounts and mailboxes\n        # This prevents components to refresh when properties they don't use are\n        # updated (unread counts, timestamp of last refresh…)\n        accountsFlat = {}\n        AccountStore.getAll().map (account) ->\n            accountsFlat[account.get 'id'] =\n                name:  account.get 'name'\n                label: account.get 'label'\n                login: account.get 'login'\n                trashMailbox: account.get 'trashMailbox'\n                signature: account.get 'signature'\n        .toJS()\n\n        mailboxesFlat = {}\n        AccountStore.getSelectedMailboxes().map (mailbox) ->\n            id = mailbox.get 'id'\n            mailboxesFlat[id] = {}\n            ['id', 'label', 'depth'].map (prop) ->\n                mailboxesFlat[id][prop] = mailbox.get prop\n        .toJS()\n\n        refresh = AccountStore.getMailboxRefresh(@props.mailboxID)\n        conversationID = MessageStore.getCurrentConversationID()\n        conversation = if conversationID\n            MessageStore.getConversation(conversationID)\n        else null\n\n        return {\n            accountsFlat          : accountsFlat\n            selectedAccount       : selectedAccount\n            mailboxesFlat         : mailboxesFlat\n            favoriteMailboxes     : AccountStore.getSelectedFavorites()\n            selectedMailboxes     : AccountStore.getSelectedMailboxes()\n            accountError          : AccountStore.getError()\n            accountWaiting        : AccountStore.isWaiting()\n            refresh               : refresh\n            fetching              : MessageStore.isFetching()\n            queryParams           : MessageStore.getParams()\n            currentMessageID      : MessageStore.getCurrentID()\n            conversation          : conversation\n            currentConversationID : conversationID\n            currentFilter         : MessageStore.getCurrentFilter()\n            results               : SearchStore.getResults()\n            settings              : SettingsStore.get()\n        }\n","{span, a, i} = React.DOM\nMessageUtils   = require '../utils/message_utils'\n\nParticipant = React.createClass\n    displayName: 'Participant'\n\n    render: ->\n        if not @props.address?\n            span null\n        else\n            span\n                className: 'address-item'\n                'data-toggle': \"tooltip\"\n                ref: 'participant'\n                title: @props.address.address,\n                key: @props.key,\n                MessageUtils.displayAddress @props.address\n\n    _initTooltip: ->\n        if @props.tooltip and @refs.participant?\n            MessageUtils.tooltip @refs.participant.getDOMNode(), @props.address, @props.onAdd\n\n    componentDidMount: ->\n        @_initTooltip()\n\n    componentDidUpdate: ->\n        @_initTooltip()\n\nParticipants = React.createClass\n    displayName: 'Participants'\n\n    render: ->\n        span className: 'address-list',\n            if @props.participants\n                for address, key in @props.participants\n                    span key: key, className: null,\n                        Participant\n                            key:     key,\n                            address: address,\n                            onAdd:   @props.onAdd,\n                            tooltip: @props.tooltip\n                        if key < ( @props.participants.length - 1)\n                            span null, ', '\n\nmodule.exports = Participants\n","{div, ul, i} = React.DOM\n{Tooltips} = require '../constants/app_constants'\n\nAttachmentPreview = require './attachement_preview'\n\n\nmodule.exports = React.createClass\n    displayName: 'MessageAttachmentsPopup'\n\n    mixins: [\n        OnClickOutside\n    ]\n\n\n    getInitialState: ->\n        showAttachements: false\n\n\n    toggleAttachments: ->\n        @setState showAttachements: not @state.showAttachements\n\n\n    handleClickOutside: ->\n        @setState showAttachements: false\n\n\n    render: ->\n        attachments = @props.message.get('attachments')?.toJS() or []\n\n        div\n            className: 'attachments'\n            'aria-expanded': @state.showAttachements\n            onClick: (event) -> event.stopPropagation()\n            i\n                className: 'btn fa fa-paperclip'\n                onClick: @toggleAttachments\n                'aria-describedby': Tooltips.OPEN_ATTACHMENTS\n                'data-tooltip-direction': 'left'\n\n            div className: 'popup', 'aria-hidden': not @state.showAttachements,\n                ul className: null,\n                    for file in attachments\n                        AttachmentPreview\n                            ref: 'attachmentPreview'\n                            file: file\n                            key: file.checksum\n                            preview: false\n","{div, table, tbody, tr, td, i} = React.DOM\n\nParticipantMixin = require '../mixins/participant_mixin'\n\n\nmodule.exports = React.createClass\n    displayName: 'PopupMessageDetails'\n\n    mixins: [\n        ParticipantMixin,\n        OnClickOutside\n    ]\n\n\n    getInitialState: ->\n        showDetails: false\n\n\n    toggleDetails: ->\n        @setState showDetails: not @state.showDetails\n\n\n    handleClickOutside: ->\n        @setState showDetails: false\n\n\n    render: ->\n        from = @props.message.get('from')[0]\n        to = @props.message.get 'to'\n        cc = @props.message.get 'cc'\n        reply = @props.message.get('reply-to')?[0]\n\n        row = (id, value, label = false, rowSpan = false) ->\n            items = []\n            if label\n                attrs = className: 'label'\n                attrs.rowSpan = rowSpan if rowSpan\n                items.push td attrs, t label\n            items.push td key: \"cell-#{id}\", value\n            return tr key: \"row-#{id}\", items...\n\n        div\n            className: 'metas details'\n            'aria-expanded': @state.showDetails\n            onClick: (event) -> event.stopPropagation()\n            i className: 'fa fa-caret-down', onClick: @toggleDetails\n            if @state.showDetails\n                div className: 'popup', 'aria-hidden': not @state.showDetails,\n                    table null,\n                        tbody null,\n                            row 'from', @formatUsers(from), 'headers from'\n                            row 'to', @formatUsers(to[0]), 'headers to', to.length if to.length\n                            row \"destTo#{key}\", @formatUsers(dest) for dest, key in to[1..] if to.length\n                            row 'cc', @formatUsers(cc[0]), 'headers cc', cc.length if cc.length\n                            row \"destCc#{key}\", @formatUsers(dest) for dest, key in cc[1..] if cc.length\n                            row 'reply', @formatUsers(reply), 'headers reply-to' if reply?\n                            row 'created', @props.message.get('createdAt'), 'headers date'\n","{div, input, span} = React.DOM\nclasser = React.addons.classSet\n\nSearchActionCreator = require '../actions/search_action_creator'\n\nENTER_KEY = 13\n\nRouterMixin = require '../mixins/router_mixin'\n\nmodule.exports = React.createClass\n    displayName: 'SearchForm'\n\n    mixins: [RouterMixin]\n\n    render: ->\n        div className: 'form-group pull-left',\n            div className: 'input-group',\n                input\n                    className: 'form-control',\n                    type: 'text',\n                    placeholder: t('app search'),\n                    onKeyPress: @onKeyPress,\n                    ref: 'searchInput',\n                    defaultValue: @props.query\n                div\n                    className: 'input-group-addon btn btn-cozy',\n                    onClick: @onSubmit,\n                        span className: 'fa fa-search'\n\n    onSubmit: ->\n        query = encodeURIComponent @refs.searchInput.getDOMNode().value.trim()\n\n        # only submit query if it's longer than 3 characters\n        # @TODO: validate and give feedback to the user\n        if query.length > 3\n            @redirect\n                direction: 'first'\n                action: 'search'\n                parameters: [query]\n\n    onKeyPress: (evt) ->\n        if evt.charCode is ENTER_KEY\n            @onSubmit()\n            evt.preventDefault()\n            return false\n        else\n            query = @refs.searchInput.getDOMNode().value\n            SearchActionCreator.setQuery query\n","{div, h3, form, label, input, button, fieldset, legend, ul, li, a, span, i} = React.DOM\nclasser = React.addons.classSet\n\nLayoutActionCreator   = require '../actions/layout_action_creator'\nSettingsActionCreator = require '../actions/settings_action_creator'\nPluginUtils    = require '../utils/plugin_utils'\nApiUtils       = require '../utils/api_utils'\n{Dispositions} = require '../constants/app_constants'\n\nmodule.exports = React.createClass\n    displayName: 'Settings'\n\n    render: ->\n\n        classLabel  = 'col-sm-5 col-sm-offset-1 control-label'\n        classInput  = 'col-sm-6'\n        layoutStyle = @state.settings.layoutStyle or 'vertical'\n        listStyle   = @state.settings.listStyle   or 'default'\n\n        div id: 'settings',\n            h3 className: null, t \"settings title\"\n\n            if @props.error\n                div className: 'error', @props.error\n\n            form className: 'form-horizontal',\n                #div className: 'form-group',\n                #    label htmlFor: 'settings-mpp', className: classLabel,\n                #        t \"settings label mpp\"\n                #    div className: classInput,\n                #        input\n                #            id: 'settings-mpp',\n                #            value: @state.settings.messagesPerPage,\n                #            onChange: @handleChange,\n                #            'data-target': 'messagesPerPage',\n                #            type: 'number',\n                #            min: 5,\n                #            max: 100,\n                #            step: 5,\n                #            className: 'form-control'\n\n                # Lang\n                #div className: 'form-group',\n                #    label htmlFor: 'settings-mpp', className: classLabel,\n                #        t \"settings lang\"\n                #    div className: classInput,\n                #        div className: \"dropdown\",\n                #            button\n                #                className: \"btn btn-default dropdown-toggle\"\n                #                type: \"button\"\n                #                \"data-toggle\": \"dropdown\",\n                #                t \"settings lang #{@state.settings.lang}\"\n                #            ul className: \"dropdown-menu\", role: \"menu\",\n                #                li\n                #                    role: \"presentation\",\n                #                    'data-target': 'lang',\n                #                    'data-lang': 'en',\n                #                    onClick: @handleChange,\n                #                        a role: \"menuitem\", t \"settings lang en\"\n                #                li\n                #                    role: \"presentation\",\n                #                    'data-target': 'lang',\n                #                    'data-lang': 'fr',\n                #                    onClick: @handleChange,\n                #                        a role: \"menuitem\", t \"settings lang fr\"\n\n                # Layout style\n                div className: 'form-group',\n                    label htmlFor: 'settings-layoutStyle', className: classLabel,\n                        t \"settings label layoutStyle\"\n                    div className: classInput,\n                        div className: \"dropdown\",\n                            button\n                                id: 'settings-layoutStyle'\n                                className: \"btn btn-default dropdown-toggle\"\n                                type: \"button\"\n                                \"data-toggle\": \"dropdown\",\n                                t \"settings label layoutStyle #{layoutStyle}\"\n                            ul className: \"dropdown-menu\", role: \"menu\",\n                                li\n                                    role: \"presentation\",\n                                    'data-target': 'layoutStyle',\n                                    'data-style': Dispositions.VERTICAL,\n                                    onClick: @handleChange,\n                                        a\n                                            role: \"menuitem\",\n                                                t \"settings label layoutStyle vertical\"\n                                li\n                                    role: \"presentation\",\n                                    'data-target': 'layoutStyle',\n                                    'data-style': Dispositions.HORIZONTAL,\n                                    onClick: @handleChange,\n                                        a\n                                            role: \"menuitem\",\n                                            t \"settings label layoutStyle horizontal\"\n                                li\n                                    role: \"presentation\",\n                                    'data-target': 'layoutStyle',\n                                    'data-style': Dispositions.THREE,\n                                    onClick: @handleChange,\n                                        a\n                                            role: \"menuitem\",\n                                            t \"settings label layoutStyle three\"\n\n                # List style\n                div className: 'form-group',\n                    label htmlFor: 'settings-listStyle', className: classLabel,\n                        t \"settings label listStyle\"\n                    div className: classInput,\n                        div className: \"dropdown\",\n                            button\n                                id: 'settings-listStyle'\n                                className: \"btn btn-default dropdown-toggle\"\n                                type: \"button\"\n                                \"data-toggle\": \"dropdown\",\n                                t \"settings label listStyle #{listStyle}\"\n                            ul className: \"dropdown-menu\", role: \"menu\",\n                                li\n                                    role: \"presentation\",\n                                    'data-target': 'listStyle',\n                                    'data-style': 'default',\n                                    onClick: @handleChange,\n                                        a\n                                            role: \"menuitem\",\n                                            t \"settings label listStyle default\"\n                                li\n                                    role: \"presentation\",\n                                    'data-target': 'listStyle',\n                                    'data-style': 'compact',\n                                    onClick: @handleChange,\n                                        a\n                                            role: \"menuitem\",\n                                            t \"settings label listStyle compact\"\n\n            # SETTINGS\n            @_renderOption 'displayConversation'\n            @_renderOption 'composeInHTML'\n            @_renderOption 'composeOnTop'\n            @_renderOption 'messageDisplayHTML'\n            @_renderOption 'messageDisplayImages'\n            @_renderOption 'messageConfirmDelete'\n            @_renderOption 'displayPreview'\n            @_renderOption 'desktopNotifications'\n            @_renderOption 'autosaveDraft'\n\n            fieldset null,\n                legend null, t 'settings plugins'\n                for own pluginName, pluginConf of @state.settings.plugins\n                    form className: 'form-horizontal', key: pluginName,\n                        div className: 'form-group',\n                            label\n                                className: classLabel,\n                                htmlFor: 'settings-plugin-' + pluginName,\n                                t('plugin name ' + pluginConf.name, {_: pluginConf.name})\n                            div className: 'col-sm-1',\n                                if pluginConf.url?\n                                    span\n                                        className: 'clickable'\n                                        onClick: @pluginDel\n                                        'data-plugin': pluginName,\n                                        title: t(\"settings plugin del\"),\n                                            i className: 'fa fa-trash-o'\n                                else\n                                    input\n                                        id: 'settings-plugin-' + pluginName,\n                                        checked: pluginConf.active,\n                                        onChange: @handleChange,\n                                        'data-target': 'plugin',\n                                        'data-plugin': pluginName,\n                                        type: 'checkbox'\n                            if window.plugins[pluginName].onHelp\n                                div className: 'col-sm-1 plugin-help',\n                                    span\n                                        className: 'clickable'\n                                        onClick: @pluginHelp\n                                        'data-plugin': pluginName,\n                                        title: t(\"settings plugin help\"),\n                                            i className: 'fa fa-question-circle'\n                form className: 'form-horizontal', key: pluginName,\n                    div className: 'form-group',\n                        div className: 'col-xs-4',\n                            input\n                                id: 'newpluginName',\n                                name: 'newpluginName',\n                                ref: 'newpluginName',\n                                type: 'text',\n                                className: 'form-control',\n                                placeholder: t \"settings plugin new name\"\n                        div className: 'col-xs-6',\n                            input\n                                id: 'newpluginUrl',\n                                name: 'newpluginUrl',\n                                ref: 'newpluginUrl',\n                                type: 'text',\n                                className: 'form-control',\n                                placeholder: t \"settings plugin new url\"\n                        span\n                            className: \"col-xs-1 clickable\"\n                            onClick: @pluginAdd\n                            title: t(\"settings plugin add\"),\n                                i className: 'fa fa-plus'\n\n    _renderOption: (option) ->\n        classLabel = 'col-sm-5 col-sm-offset-1 control-label'\n        classInput = 'col-sm-6'\n        form className: 'form-horizontal',\n            div className: 'form-group',\n                label\n                    htmlFor: 'settings-' + option,\n                    className: classLabel,\n                    t \"settings label \" + option\n                div className: classInput,\n                    input\n                        id: 'settings-' + option,\n                        checked: @state.settings[option],\n                        onChange: @handleChange,\n                        'data-target': option,\n                        type: 'checkbox'\n\n    handleChange: (event) ->\n        event.preventDefault()\n        target = event.currentTarget\n        switch target.dataset.target\n            #when 'messagesPerPage'\n            #    settings = @state.settings\n            #    settings.messagesPerPage = target.value\n            #    @setState({settings: settings})\n            #    SettingsActionCreator.edit settings\n            # SETTINGS\n            when 'autosaveDraft'\n            ,    'composeInHTML'\n            ,    'composeOnTop'\n            ,    'desktopNotifications'\n            ,    'displayConversation'\n            ,    'displayPreview'\n            ,    'messageConfirmDelete'\n            ,    'messageDisplayHTML'\n            ,    'messageDisplayImages'\n                settings = @state.settings\n                settings[target.dataset.target] = target.checked\n                @setState({settings: settings})\n                SettingsActionCreator.edit settings\n                if window.Notification? and settings.desktopNotifications\n                    Notification.requestPermission (status) ->\n                        # This allows to use Notification.permission with Chrome/Safari\n                        if Notification.permission isnt status\n                            Notification.permission = status\n\n            when 'layoutStyle'\n                settings = @state.settings\n                settings.layoutStyle = target.dataset.style\n                LayoutActionCreator.setDisposition settings.layoutStyle\n                @setState({settings: settings})\n                SettingsActionCreator.edit settings\n            when 'listStyle'\n                settings = @state.settings\n                settings.listStyle = target.dataset.style\n                @setState({settings: settings})\n                SettingsActionCreator.edit settings\n            when 'plugin'\n                name = target.dataset.plugin\n                settings = @state.settings\n                if target.checked\n                    PluginUtils.activate name\n                else\n                    PluginUtils.deactivate name\n                for own pluginName, pluginConf of settings.plugins\n                    pluginConf.active = window.plugins[pluginName].active\n                @setState({settings: settings})\n                SettingsActionCreator.edit settings\n\n    pluginAdd: ->\n        name = @refs.newpluginName.getDOMNode().value.trim()\n        url  = @refs.newpluginUrl.getDOMNode().value.trim()\n        PluginUtils.loadJS url, =>\n            PluginUtils.activate name\n            settings = @state.settings\n            settings.plugins[name] =\n                name: name\n                active: true\n                url: url\n            @setState({settings: settings})\n            SettingsActionCreator.edit settings\n\n    pluginDel: (event) ->\n        event.preventDefault()\n        target = event.currentTarget\n        pluginName = target.dataset.plugin\n        settings = @state.settings\n        PluginUtils.deactivate pluginName\n        delete settings.plugins[pluginName]\n        @setState({settings: settings})\n        SettingsActionCreator.edit settings\n\n    pluginHelp: (event) ->\n        event.preventDefault()\n        target = event.currentTarget\n        pluginName = target.dataset.plugin\n        window.plugins[pluginName].onHelp()\n\n    registerMailto: ->\n        loc = window.location\n        window.navigator.registerProtocolHandler \"mailto\",\n            \"#{loc.origin}#{loc.pathname}#compose?mailto=%s\",\n            \"Cozy\"\n\n\n    getInitialState: (forceDefault) ->\n        settings = @props.settings.toObject()\n        return {\n            settings: @props.settings.toObject()\n        }\n","{a, h4,  pre, div, button, span, strong, i} = React.DOM\nSocketUtils     = require '../utils/socketio_utils'\nAppDispatcher   = require '../app_dispatcher'\nStoreWatchMixin = require '../mixins/store_watch_mixin'\nLayoutStore      = require '../stores/layout_store'\nLayoutActionCreator = require '../actions/layout_action_creator'\n{ActionTypes, AlertLevel} = require '../constants/app_constants'\n{CSSTransitionGroup} = React.addons\n\nclasser = React.addons.classSet\n\n\n# The toast is a notification widget displayed on the top right of the screen.\n# It stays temporarly and is dismissed just after a few seconds.\n# This Component can be used to display informative modals.\nmodule.exports = Toast = React.createClass\n\n    displayName: 'Toast'\n\n\n    # A toast is composed of several elements:\n    # * message, the displayed text.\n    # * close button, to dismiss the toast before the timeout ends.\n    # * action button, to enable actions like undoing\n    #\n    # If there are errors attached to the toast, a modal is displayed instead\n    # of a toast. The modal give stacktrace so the user can communicate it\n    # to the Cozy team.\n    render: ->\n        toast = @props.toast.toJS()\n        hasErrors = toast.errors? and toast.errors.length\n        classes = classer\n            toast: true\n            'alert-dismissible': toast.finished\n            'toast-error': toast.level is AlertLevel.ERROR\n\n        if hasErrors\n            showModal = @showModal.bind this, toast.errors\n\n        div className: classes, role: \"alert\", key: @props.key,\n\n            if toast.message\n                div className: \"message\", toast.message\n\n            if toast.finished or hasErrors\n                button\n                    type: \"button\",\n                    className: \"close\",\n                    onClick: @acknowledge,\n                        span 'aria-hidden': \"true\", \"×\"\n                        span className: \"sr-only\", t \"app alert close\"\n\n            if toast.actions?\n                className = \"btn btn-cancel btn-cozy-non-default btn-xs\"\n                div className: 'toast-actions',\n                    toast.actions.map (action, id) ->\n                        button\n                            className: className,\n                            type: \"button\",\n                            key: id\n                            onClick: action.onClick,\n                            action.label\n\n            if hasErrors\n                className = \"btn btn-cancel btn-cozy-non-default btn-xs\"\n                div className: 'toast-actions',\n                    button\n                        className: className,\n                        type: \"button\",\n                        key: 'errors'\n                        onClick: showModal,\n                        t 'there were errors', smart_count: toast.errors.length\n\n\n    showModal: (errors) ->\n        modal =\n            title       : t 'modal please contribute'\n            subtitle    : t 'modal please report'\n            closeModal  : ->\n                LayoutActionCreator.hideModal()\n            closeLabel  : t 'app alert close'\n            content     : React.DOM.pre\n                style: \"max-height\": \"300px\",\n                \"word-wrap\": \"normal\",\n                    errors.join \"\\n\\n\"\n        LayoutActionCreator.displayModal modal\n\n\n    acknowledge: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_TASK_DELETE\n            value: @props.toast.get 'id'\n\n","{div} = React.DOM\nToast           = require './toast'\nStoreWatchMixin = require '../mixins/store_watch_mixin'\nLayoutStore      = require '../stores/layout_store'\nLayoutActionCreator = require '../actions/layout_action_creator'\n{CSSTransitionGroup} = React.addons\n\nclasser = React.addons.classSet\n\n\n# Main container in wich toasts are displayed.\nmodule.exports = ToastContainer =  React.createClass\n    displayName: 'ToastContainer'\n\n    mixins: [\n        StoreWatchMixin [LayoutStore]\n    ]\n\n\n    getStateFromStores: ->\n        return {\n            toasts: LayoutStore.getToasts()\n            hidden: not LayoutStore.isShown()\n        }\n\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        isNextState = _.isEqual nextState, @state\n        isNextProps = _.isEqual nextProps, @props\n        return not(isNextState and isNextProps)\n\n\n    render: ->\n        toasts = @state.toasts.map (toast, id) ->\n            Toast {toast, key: id}\n        .toVector().toJS()\n\n        classes = classer\n            'toasts-container': true\n            'action-hidden': @state.hidden\n            'has-toasts': toasts.length isnt 0\n\n        div className: classes,\n            CSSTransitionGroup transitionName: \"toast\",\n                toasts\n\n\n    toggleHidden: ->\n        if @state.hidden\n            LayoutActionCreator.toastsShow()\n        else\n            LayoutActionCreator.toastsHide()\n\n    # Clear hidden toasts on a regular basis.\n    _clearToasts: ->\n        setTimeout ->\n            toasts = document.querySelectorAll('.toast-enter')\n            Array.prototype.forEach.call toasts, (e) ->\n                e.classList.add 'hidden'\n        , 10000\n\n\n    closeAll: ->\n        LayoutActionCreator.clearToasts()\n\n\n    componentDidMount: ->\n        @_clearToasts()\n\n\n    componentDidUpdate: ->\n        @_clearToasts()\n\n","{nav, div, button, a} = React.DOM\n{Tooltips}            = require '../constants/app_constants'\nclasser               = React.addons.classSet\n\nLayoutStore = require '../stores/layout_store'\n\nLayoutActionCreator = require '../actions/layout_action_creator'\n\nRouterMixin     = require '../mixins/router_mixin'\nStoreWatchMixin = require '../mixins/store_watch_mixin'\n\n\nmodule.exports = React.createClass\n    displayName: 'ToolbarConversation'\n\n    mixins: [\n        RouterMixin\n        StoreWatchMixin [LayoutStore]\n    ]\n\n    propTypes:\n        nextMessageID       : React.PropTypes.string\n        nextConversationID  : React.PropTypes.string\n        prevMessageID       : React.PropTypes.string\n        prevConversationID  : React.PropTypes.string\n        settings            : React.PropTypes.object.isRequired\n\n    getStateFromStores: ->\n        fullscreen: LayoutStore.isPreviewFullscreen()\n\n\n    getParams: (messageID, conversationID) ->\n        if @props.settings.get 'displayConversation' and conversationID?\n            action: 'conversation'\n            parameters:\n                messageID: messageID\n                conversationID: conversationID\n        else\n            action: 'message'\n            parameters:\n                messageID: messageID\n\n\n    render: ->\n        nav className: 'toolbar toolbar-conversation btn-toolbar',\n            div className: 'btn-group',\n                @renderNav 'prev'\n                @renderNav 'next'\n            @renderFullscreen()\n\n\n    renderNav: (direction) ->\n        return unless @props[\"#{direction}MessageID\"]?\n\n        messageID = @props[\"#{direction}MessageID\"]\n        conversationID = @props[\"#{direction}ConversationID\"]\n\n        if direction is 'prev'\n            tooltipID = Tooltips.PREVIOUS_CONVERSATION\n            angle = 'left'\n        else\n            tooltipID = Tooltips.NEXT_CONVERSATION\n            angle = 'right'\n\n        params = @getParams messageID, conversationID\n        urlParams =\n            direction: 'second'\n            action: params.action\n            parameters: params.parameters\n        url =  @buildUrl urlParams\n\n        a\n            className: \"btn btn-default fa fa-chevron-#{angle}\"\n            onClick: => @redirect urlParams\n            href: url\n            'aria-describedby': tooltipID\n            'data-tooltip-direction': 'left'\n\n\n    renderFullscreen: ->\n        button\n            onClick: LayoutActionCreator.toggleFullscreen\n            className: classer\n                clickable:     true\n                btn:           true\n                'btn-default': true\n                fa:            true\n                fullscreen:    true\n                'fa-compress': @state.fullscreen\n                'fa-expand':   not @state.fullscreen\n","{nav, div, button, a} = React.DOM\n\n{MessageFlags, FlagsConstants, Tooltips} = require '../constants/app_constants'\n\nToolboxActions = require './toolbox_actions'\nToolboxMove    = require './toolbox_move'\n\nLayoutActionCreator       = require '../actions/layout_action_creator'\nalertError                = LayoutActionCreator.alertError\nalertSuccess              = LayoutActionCreator.notify\n\n# Shortcuts for buttons classes\ncBtnGroup = 'btn-group btn-group-sm pull-right'\ncBtn      = 'btn btn-default fa'\n\n\nmodule.exports = React.createClass\n    displayName: 'ToolbarMessage'\n\n    propTypes:\n        message            : React.PropTypes.object.isRequired\n        mailboxes          : React.PropTypes.object.isRequired\n        selectedMailboxID  : React.PropTypes.string.isRequired\n        onReply            : React.PropTypes.func.isRequired\n        onReplyAll         : React.PropTypes.func.isRequired\n        onForward          : React.PropTypes.func.isRequired\n        onDelete           : React.PropTypes.func.isRequired\n        onMove             : React.PropTypes.func.isRequired\n        onHeaders          : React.PropTypes.func.isRequired\n\n\n    render: ->\n        nav\n            className: 'toolbar toolbar-message btn-toolbar'\n            onClick: (event) -> event.stopPropagation()\n            # inverted order due to `pull-right` class\n            div(className: cBtnGroup,\n                @renderToolboxMove()\n                @renderToolboxActions()) if @props.full\n            @renderQuickActions() if @props.full\n            @renderReply()\n\n\n    renderReply: ->\n        div className: cBtnGroup,\n            button\n                className: \"#{cBtn} fa-mail-reply mail-reply\"\n                onClick: @props.onReply\n                'aria-describedby': Tooltips.REPLY\n                'data-tooltip-direction': 'top'\n            button\n                className: \"#{cBtn} fa-mail-reply-all mail-reply-all\"\n                onClick: @props.onReplyAll\n                'aria-describedby': Tooltips.REPLY_ALL\n                'data-tooltip-direction': 'top'\n            button\n                className: \"#{cBtn} fa-mail-forward mail-forward\"\n                onClick: @props.onForward\n                'aria-describedby': Tooltips.FORWARD\n                'data-tooltip-direction': 'top'\n\n\n    renderQuickActions: ->\n        div className: cBtnGroup,\n            button\n                className: \"#{cBtn} fa-trash\"\n                onClick: @props.onDelete\n                'aria-describedby': Tooltips.REMOVE_MESSAGE\n                'data-tooltip-direction': 'top'\n\n\n    renderToolboxActions: ->\n        flags = @props.message.get('flags') or []\n        isFlagged = FlagsConstants.FLAGGED in flags\n        isSeen    = FlagsConstants.SEEN in flags\n\n        ToolboxActions\n            ref:            'toolboxActions'\n            mailboxes:      @props.mailboxes\n            inConversation: @props.inConversation\n            isSeen:         isSeen\n            isFlagged:      isFlagged\n            messageID:      @props.message.get 'id'\n            message:        @props.message\n            onMark:         @props.onMark\n            onHeaders:      @props.onHeaders\n            onConversationMark: @props.onConversationMark\n            onConversationMove: @props.onConversationMove\n            onConversationDelete: @props.onConversationMove\n            direction:      'right'\n            displayConversations: false # to display messages actions\n\n\n    renderToolboxMove: ->\n        ToolboxMove\n            ref:       'toolboxMove'\n            mailboxes: @props.mailboxes\n            onMove:    @props.onMove\n            direction: 'right'\n\n","{aside, i, button} = React.DOM\nclasser = React.addons.classSet\n\nFiltersToolbarMessagesList = require './toolbar_messageslist_filters'\nSearchToolbarMessagesList  = require './toolbar_messageslist_search'\nActionsToolbarMessagesList = require './toolbar_messageslist_actions'\n\nLayoutActionCreator  = require '../actions/layout_action_creator'\n\n\nmodule.exports = ToolbarMessagesList = React.createClass\n    displayName: 'ToolbarMessagesList'\n\n    propTypes:\n        settings:             React.PropTypes.object.isRequired\n        accountID:            React.PropTypes.string.isRequired\n        mailboxID:            React.PropTypes.string.isRequired\n        mailboxes:            React.PropTypes.object.isRequired\n        messages:             React.PropTypes.object.isRequired\n        edited:               React.PropTypes.bool.isRequired\n        selected:             React.PropTypes.object.isRequired\n        allSelected:          React.PropTypes.bool.isRequired\n        displayConversations: React.PropTypes.bool.isRequired\n        toggleEdited:         React.PropTypes.func.isRequired\n        toggleAll:            React.PropTypes.func.isRequired\n        afterAction:          React.PropTypes.func\n\n\n    render: ->\n        aside role: 'toolbar',\n            # Drawer toggler\n            button\n                className: 'drawer-toggle'\n                onClick:   LayoutActionCreator.drawerToggle\n                title:     t 'menu toggle'\n\n                i className: 'fa fa-navicon'\n\n            # Select all Checkbox\n            button\n                role:                     'menuitem'\n                'aria-selected':          @props.edited\n                onClick:                  @props.toggleAll\n\n                i className: classer\n                    fa:                  true\n                    'fa-square-o':       not @props.edited\n                    'fa-check-square-o': @props.allSelected\n                    'fa-minus-square-o': @props.edited and\n                                         not @props.allSelected\n\n            if @props.edited\n                ActionsToolbarMessagesList\n                    settings:             @props.settings\n                    mailboxID:            @props.mailboxID\n                    mailboxes:            @props.mailboxes\n                    messages:             @props.messages\n                    selected:             @props.selected\n                    displayConversations: @props.displayConversations\n                    afterAction:          @props.afterAction\n            unless @props.edited\n                FiltersToolbarMessagesList\n                    accountID:   @props.accountID\n                    mailboxID:   @props.mailboxID\n                    queryParams: @props.queryParams\n                    filter:      @props.filter\n            unless @props.edited\n                SearchToolbarMessagesList\n                    accountID:   @props.accountID\n                    mailboxID:   @props.mailboxID\n                    queryParams: @props.queryParams\n                    filter:      @props.filter\n","{div, i, button} = React.DOM\n{Tooltips}       = require '../constants/app_constants'\n\nToolboxActions = require './toolbox_actions'\nToolboxMove    = require './toolbox_move'\n\nLayoutActionCreator  = require '../actions/layout_action_creator'\nMessageActionCreator = require '../actions/message_action_creator'\n\n\nmodule.exports = ActionsToolbarMessagesList = React.createClass\n    displayName: 'ActionsToolbarMessagesList'\n\n    propTypes:\n        settings:             React.PropTypes.object.isRequired\n        mailboxID:            React.PropTypes.string.isRequired\n        mailboxes:            React.PropTypes.object.isRequired\n        messages:             React.PropTypes.object.isRequired\n        selected:             React.PropTypes.object.isRequired\n        displayConversations: React.PropTypes.bool.isRequired\n        afterAction:          React.PropTypes.func\n\n\n    _hasSelection: ->\n        Object.keys(@props.selected).length > 0\n\n\n    _getSelectedAndMode: (applyToConversation) ->\n        selected = Object.keys @props.selected\n        count = selected.length\n        applyToConversation = Boolean applyToConversation\n        applyToConversation ?= @props.displayConversations\n        if selected.length is 0\n            LayoutActionCreator.alertError t 'list mass no message'\n            return false\n\n        else if not applyToConversation\n            return {count, messageIDs: selected, applyToConversation}\n\n        else\n            conversationIDs = selected.map (id) =>\n                @props.messages.get(id).get('conversationID')\n\n            return {count, conversationIDs, applyToConversation}\n\n\n    render: ->\n        div role: 'group',\n            button\n                role:                     'menuitem'\n                onClick:                  @onDelete\n                'aria-disabled':          @_hasSelection()\n                'aria-describedby':       Tooltips.DELETE_SELECTION\n                'data-tooltip-direction': 'bottom'\n\n                i className: 'fa fa-trash-o'\n\n            unless @props.displayConversations\n                ToolboxMove\n                    ref:       'listToolboxMove'\n                    mailboxes: @props.mailboxes\n                    onMove:    @onMove\n                    direction: 'left'\n\n            ToolboxActions\n                ref:                  'listToolboxActions'\n                direction:            'left'\n                mailboxes:            @props.mailboxes\n                inConversation      : true\n                displayConversations: @props.displayConversations\n                onMark:               @onMark\n                onConversationDelete: @onConversationDelete\n                onConversationMark:   @onConversationMark\n                onConversationMove:   @onConversationMove\n\n\n    onDelete: (applyToConversation) ->\n        return unless options = @_getSelectedAndMode(applyToConversation)\n\n        if options.applyToConversation\n            msg = t 'list delete conv confirm', smart_count: options.count\n        else\n            msg = t 'list delete confirm', smart_count: options.count\n\n        doDelete = =>\n            MessageActionCreator.delete options, =>\n                if options.count > 0 and @props.messages.count() > 0\n                    firstMessageID = @props.messages.first().get('id')\n                    MessageActionCreator.setCurrent firstMessageID, true\n            if @props.afterAction?\n                @props.afterAction()\n\n        noConfirm = not @props.settings.get('messageConfirmDelete')\n        if noConfirm\n            doDelete()\n        else\n            modal =\n                title       : t 'app confirm delete'\n                subtitle    : msg\n                closeModal  : ->\n                    LayoutActionCreator.hideModal()\n                closeLabel  : t 'app cancel'\n                actionLabel : t 'app confirm'\n                action      : ->\n                    doDelete()\n                    LayoutActionCreator.hideModal()\n            LayoutActionCreator.displayModal modal\n\n\n    onMove: (to, applyToConversation) ->\n        return unless options = @_getSelectedAndMode(applyToConversation)\n\n        from = @props.mailboxID\n\n        MessageActionCreator.move options, from, to, =>\n            if options.count > 0 and @props.messages.count() > 0\n                firstMessageID = @props.messages.first().get('id')\n                MessageActionCreator.setCurrent firstMessageID, true\n        if @props.afterAction?\n            @props.afterAction()\n\n\n    onMark: (flag, applyToConversation) ->\n        return unless options = @_getSelectedAndMode(applyToConversation)\n        MessageActionCreator.mark options, flag\n\n\n    onConversationDelete: ->\n        @onDelete true\n\n\n    onConversationMove: (to) ->\n        @onMove to, true\n\n\n    onConversationMark: (flag) ->\n        @onMark flag, true\n","{div, span, i, button} = React.DOM\n{MessageFilter, Tooltips} = require '../constants/app_constants'\n\nLayoutActionCreator = require '../actions/layout_action_creator'\n\nDateRangePicker = require './date_range_picker'\n\n\nmodule.exports = FiltersToolbarMessagesList = React.createClass\n    displayName: 'FiltersToolbarMessagesList'\n\n    propTypes:\n        accountID: React.PropTypes.string.isRequired\n        mailboxID: React.PropTypes.string.isRequired\n\n    getInitialState: ->\n        expanded:  false\n\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        should = not(_.isEqual(nextState, @state)) or\n            not (_.isEqual(nextProps, @props))\n        return should\n\n\n    showList: (filter, params) ->\n        sort =\n            order:  '-'\n            field:  'date'\n        if params?\n            # always close message preview before filtering\n            window.cozyMails.messageClose()\n            [sort.before, sort.after] = params\n        else\n            sort.after = sort.before = ''\n        LayoutActionCreator.showFilteredList filter, sort\n\n\n    onDateFilter: (start, end) ->\n        if !!start and !!end\n            params = [start, end]\n        else\n            params = false\n\n        @showList '-', params\n\n\n    toggleFilters: (name) ->\n        if @props.filter is name\n            filter = '-'\n        else\n            filter = name\n\n        @showList filter, null\n\n\n    render: ->\n        dateFiltered = @props.queryParams.before isnt '-' and\n                       @props.queryParams.before isnt '1970-01-01T00:00:00.000Z' and\n                       @props.queryParams.before isnt undefined and\n                       @props.queryParams.after isnt undefined and\n                       @props.queryParams.after isnt '-'\n        div\n            role:            'group'\n            className:       'filters'\n            'aria-expanded': @state.expanded\n\n            i\n                role:      'presentation'\n                className: 'fa fa-filter'\n                onClick:   @toggleExpandState\n\n            button\n                role:                     'menuitem'\n                'aria-selected':          @props.filter is MessageFilter.UNSEEN\n                onClick:                  @toggleFilters.bind(@, MessageFilter.UNSEEN)\n                'aria-describedby':       Tooltips.FILTER_ONLY_UNREAD\n                'data-tooltip-direction': 'bottom'\n\n                i className: 'fa fa-circle'\n                span className: 'btn-label', t 'filters unseen'\n\n            button\n                role:                     'menuitem'\n                'aria-selected':          @props.filter is MessageFilter.FLAGGED\n                onClick:                  @toggleFilters.bind(@, MessageFilter.FLAGGED)\n                'aria-describedby':       Tooltips.FILTER_ONLY_IMPORTANT\n                'data-tooltip-direction': 'bottom'\n\n                i className: 'fa fa-star'\n                span className: 'btn-label', t 'filters flagged'\n\n            button\n                role:                     'menuitem'\n                'aria-selected':          @props.filter is MessageFilter.ATTACH\n                onClick:                  @toggleFilters.bind(@, MessageFilter.ATTACH)\n                'aria-describedby':       Tooltips.FILTER_ONLY_WITH_ATTACHMENT\n                'data-tooltip-direction': 'bottom'\n\n                i className: 'fa fa-paperclip'\n                span className: 'btn-label', t 'filters attach'\n\n            DateRangePicker\n                active: dateFiltered\n                onDateFilter: @onDateFilter\n\n\n    toggleExpandState: ->\n        @setState expanded: not @state.expanded\n","{div, i, button, input, form} = React.DOM\n{Dropdown} = require './basic_components'\n{MessageFilter, Tooltips} = require '../constants/app_constants'\n\nLayoutActionCreator = require '../actions/layout_action_creator'\n\nfilters =\n    from: t \"list filter from\"\n    dest: t \"list filter dest\"\n\n\nmodule.exports = SearchToolbarMessagesList = React.createClass\n    displayName: 'SearchToolbarMessagesList'\n\n    propTypes:\n        accountID: React.PropTypes.string.isRequired\n        mailboxID: React.PropTypes.string.isRequired\n\n    getInitialState: ->\n        type:    'from'\n        value:   ''\n        isEmpty: true\n\n\n    showList: ->\n        filter = MessageFilter.ALL\n        sort =\n            order:  '-'\n            before: @state.value\n        if @state.value? and @state.value isnt ''\n            # always close message preview before filtering\n            window.cozyMails.messageClose()\n            sort.field = @state.type\n            sort.after = \"#{@state.value}\\uFFFF\"\n        else\n            # reset, use default filter\n            sort.field = 'date'\n            sort.after = ''\n\n        LayoutActionCreator.showFilteredList filter, sort\n\n\n    onTypeChange: (filter) ->\n        @setState type: filter\n\n\n    onChange: (event) ->\n        @setState\n            value:   event.target.value\n            isEmpty: event.target.value.length is 0\n\n\n    onKeyUp: (event) ->\n        @showList() if event.key is \"Enter\" or @state.isEmpty\n\n\n    reset: ->\n        @setState @getInitialState(), @showList\n\n\n    render: ->\n        form role: 'group', className: 'search',\n            Dropdown\n                value:    @state.type\n                values:   filters\n                onChange: @onTypeChange\n\n            div role: 'search',\n                input\n                    ref:         'searchterms'\n                    type:        'text'\n                    placeholder: t 'filters search placeholder'\n                    value:       @state.value\n                    onChange:    @onChange\n                    onKeyUp:     @onKeyUp\n                    name:        'searchterm'\n\n                unless @state.isEmpty\n                    div className: 'btn-group',\n                        button\n                            className: 'btn fa fa-check'\n                            onClick: (e) =>\n                                e.preventDefault()\n                                e.stopPropagation()\n                                @showList()\n\n                        button\n                            className: 'btn fa fa-close'\n                            onClick: (e) =>\n                                e.preventDefault()\n                                e.stopPropagation()\n                                @reset()\n","{div, ul, li, span, a, button} = React.DOM\n{MenuHeader, MenuItem, MenuDivider} = require './basic_components'\n{FlagsConstants} = require '../constants/app_constants'\n\n\nmodule.exports = ToolboxActions = React.createClass\n    displayName: 'ToolboxActions'\n\n\n    propTypes:\n\n        direction            : React.PropTypes.string.isRequired\n        displayConversations : React.PropTypes.bool.isRequired\n        isFlagged            : React.PropTypes.bool\n        isSeen               : React.PropTypes.bool\n        mailboxes            : React.PropTypes.object.isRequired\n        message              : React.PropTypes.object\n        messageID            : React.PropTypes.string\n        onConversationDelete : React.PropTypes.func.isRequired\n        onConversationMark   : React.PropTypes.func.isRequired\n        onConversationMove   : React.PropTypes.func.isRequired\n        onHeaders            : React.PropTypes.func\n        onMark               : React.PropTypes.func.isRequired\n\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n               not(_.isEqual(nextProps, @props))\n\n\n    render: ->\n        direction = if @props.direction is 'right' then 'right' else 'left'\n        div className: 'menu-action btn-group btn-group-sm',\n            button\n                className: 'btn btn-default dropdown-toggle fa fa-cog'\n                type: 'button'\n                'data-toggle': 'dropdown'\n                ' '\n                    span className: 'caret'\n            ul\n                className: \"dropdown-menu dropdown-menu-#{direction}\"\n                role: 'menu',\n                    # in conversation mode, only shows actions on conversation\n                    if not @props.displayConversations\n                        @renderMarkActions()\n                    if not @props.displayConversations\n                        MenuDivider()\n                    @renderRawActions()...\n                    if @props.inConversation\n                        @renderConversationActions()\n                    if @props.inConversation\n                        MenuDivider key: 'divider'\n                    if @props.inConversation\n                        MenuHeader key: 'header-move',\n                            t 'mail action conversation move'\n                    if @props.inConversation\n                        @renderMailboxes()\n\n\n    renderMarkActions: ->\n        items = [\n            MenuHeader key: 'header-mark', t 'mail action mark'\n\n            if not @props.isSeen? or not @props.isSeen\n                MenuItem\n                    key: 'action-mark-seen'\n                    onClick: => @props.onMark FlagsConstants.SEEN\n                    t 'mail mark read'\n            if not @props.isSeen? or @props.isSeen\n                MenuItem\n                    key: 'action-mark-unseen'\n                    onClick: => @props.onMark FlagsConstants.UNSEEN\n                    t 'mail mark unread'\n\n            if not @props.isFlagged? or @props.isFlagged\n                MenuItem\n                    key: 'action-mark-noflag'\n                    onClick: => @props.onMark FlagsConstants.NOFLAG\n                    t 'mail mark nofav'\n            if not @props.isFlagged? or not @props.isFlagged\n                MenuItem\n                    key: 'action-mark-flagged'\n                    onClick: => @props.onMark FlagsConstants.FLAGGED\n                    t 'mail mark fav'\n\n        ]\n\n        # remove undefined values from the array\n        return items.filter (child) -> Boolean child\n\n\n    renderRawActions: ->\n        items = [\n\n            if not @props.displayConversations\n                MenuHeader key: 'header-more', t 'mail action more'\n\n            if @props.messageID?\n                MenuItem\n                    key: 'action-headers'\n                    onClick: @props.onHeaders,\n                    t 'mail action headers'\n\n            if @props.message?\n                MenuItem\n                    key: 'action-raw'\n                    href:   \"raw/#{@props.message.get 'id'}\"\n                    target: '_blank'\n                    t 'mail action raw'\n        ]\n\n        # remove undefined values from the array\n        return items.filter (child) -> Boolean child\n\n    renderConversationActions: ->\n        items = [\n            MenuItem\n                key: 'conv-delete'\n                onClick: @props.onConversationDelete,\n                t 'mail action conversation delete'\n\n            MenuItem\n                key: 'conv-seen'\n                onClick: => @props.onConversationMark FlagsConstants.SEEN\n                t 'mail action conversation seen'\n\n            MenuItem\n                key: 'conv-unseen'\n                onClick: => @props.onConversationMark FlagsConstants.UNSEEN\n                t 'mail action conversation unseen'\n\n            MenuItem\n                key: 'conv-flagged'\n                onClick: => @props.onConversationMark FlagsConstants.FLAGGED\n                t 'mail action conversation flagged'\n\n            MenuItem\n                key: 'conv-noflag'\n                onClick: => @props.onConversationMark FlagsConstants.NOFLAG\n                t 'mail action conversation noflag'\n        ]\n\n        return items\n\n\n    renderMailboxes: ->\n        for id, mbox of @props.mailboxes when id isnt @props.selectedMailboxID\n            # bind id\n            do (id) =>\n                MenuItem\n                    key: id\n                    className: \"pusher pusher-#{mbox.depth}\"\n                    onClick: => @props.onConversationMove id\n                    mbox.label\n","{div, ul, li, span, i, p, a, button} = React.DOM\n{MenuHeader, MenuItem} = require './basic_components'\n\n\nmodule.exports = ToolboxMove = React.createClass\n    displayName: 'ToolboxMove'\n\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n               not(_.isEqual(nextProps, @props))\n\n    render: ->\n        direction = if @props.direction is 'right' then 'right' else 'left'\n\n        div className: 'menu-move btn-group btn-group-sm',\n            button\n                className: 'btn btn-default dropdown-toggle fa fa-folder-open'\n                type: 'button'\n                'data-toggle': 'dropdown'\n                ' '\n                    span className: 'caret'\n            ul\n                className: \"dropdown-menu dropdown-menu-#{direction}\"\n                role: 'menu',\n                    MenuHeader null, t 'mail action move'\n                    @renderMailboxes()\n\n\n    renderMailboxes: ->\n        for id, mbox of @props.mailboxes when id isnt @props.selectedMailboxID\n            do (id) => # bind id to each mailbox\n                MenuItem\n                    key: id\n                    className: \"pusher pusher-#{mbox.depth}\"\n                    onClick: => @props.onMove id\n                    mbox.label\n","###\nThis component must be used to declare tooltips.\nThey can't be then referenced from the other components.\n\nSee https://github.com/m4dz/aria-tips#use\n###\n\n{Tooltips} = require '../constants/app_constants'\n{div, p} = React.DOM\n\nmodule.exports = React.createClass\n    displayName: 'TooltipManager'\n\n    # The tooltip's content should not change so we prevent any refresh.\n    shouldComponentUpdate: -> return false\n\n    render: ->\n\n        # Mounts all existing tooltips so they can be referenced by other\n        # components at any time.\n        div null,\n            @getTooltip Tooltips.REPLY, t('tooltip reply')\n            @getTooltip Tooltips.REPLY_ALL, t('tooltip reply all')\n            @getTooltip Tooltips.FORWARD, t('tooltip forward')\n            @getTooltip Tooltips.REMOVE_MESSAGE, t('tooltip remove message')\n            @getTooltip Tooltips.OPEN_ATTACHMENTS, t('tooltip open attachments')\n            @getTooltip Tooltips.OPEN_ATTACHMENT, t('tooltip open attachment')\n            @getTooltip Tooltips.DOWNLOAD_ATTACHMENT, t('tooltip download attachment')\n            @getTooltip Tooltips.PREVIOUS_CONVERSATION, t('tooltip previous conversation')\n            @getTooltip Tooltips.NEXT_CONVERSATION, t('tooltip next conversation')\n            @getTooltip Tooltips.FILTER_ONLY_UNREAD, t('tooltip filter only unread')\n            @getTooltip Tooltips.FILTER_ONLY_IMPORTANT, t('tooltip filter only important')\n            @getTooltip Tooltips.FILTER_ONLY_WITH_ATTACHMENT, t('tooltip filter only attachment')\n            @getTooltip Tooltips.ACCOUNT_PARAMETERS, t('tooltip account parameters')\n            @getTooltip Tooltips.DELETE_SELECTION, t('tooltip delete selection')\n            @getTooltip Tooltips.FILTER, t('tooltip filter')\n            @getTooltip Tooltips.QUICK_FILTER, t('tooltip display filters')\n            @getTooltip Tooltips.EXPUNGE_MAILBOX, t('tooltip expunge mailbox')\n\n\n    # Generate default markup for a tooltip.\n    getTooltip: (id, content) ->\n        return p\n            id: id\n            role: \"tooltip\"\n            'aria-hidden': \"true\",\n            content\n\n\n\n\n","module.exports =\n\n    ActionTypes:\n        # Account\n        'ADD_ACCOUNT'               : 'ADD_ACCOUNT'\n        'REMOVE_ACCOUNT'            : 'REMOVE_ACCOUNT'\n        'EDIT_ACCOUNT'              : 'EDIT_ACCOUNT'\n        'SELECT_ACCOUNT'            : 'SELECT_ACCOUNT'\n        'NEW_ACCOUNT_WAITING'       : 'NEW_ACCOUNT_WAITING'\n        'NEW_ACCOUNT_ERROR'         : 'NEW_ACCOUNT_ERROR'\n\n        # Mailbox\n        'MAILBOX_ADD'               : 'MAILBOX_ADD'\n        'MAILBOX_CREATE'            : 'MAILBOX_CREATE'\n        'MAILBOX_UPDATE'            : 'MAILBOX_UPDATE'\n        'MAILBOX_DELETE'            : 'MAILBOX_DELETE'\n        'MAILBOX_EXPUNGE'           : 'MAILBOX_EXPUNGE'\n\n        # Message\n        'RECEIVE_RAW_MESSAGE'       : 'RECEIVE_RAW_MESSAGE'\n        'RECEIVE_RAW_MESSAGES'      : 'RECEIVE_RAW_MESSAGES'\n        'RECEIVE_RAW_MESSAGE_REALTIME' : 'RECEIVE_RAW_MESSAGE_REALTIME'\n        'MESSAGE_SEND'              : 'MESSAGE_SEND'\n        'LAST_ACTION'               : 'LAST_ACTION'\n        'MESSAGE_CURRENT'           : 'MESSAGE_CURRENT'\n        'RECEIVE_MESSAGE_DELETE'    : 'RECEIVE_MESSAGE_DELETE'\n        'RECEIVE_MAILBOX_UPDATE'    : 'RECEIVE_MAILBOX_UPDATE'\n\n        'MESSAGE_TRASH_REQUEST'     : 'MESSAGE_TRASH_REQUEST'\n        'MESSAGE_TRASH_SUCCESS'     : 'MESSAGE_TRASH_SUCCESS'\n        'MESSAGE_TRASH_FAILURE'     : 'MESSAGE_TRASH_FAILURE'\n        'MESSAGE_MOVE_REQUEST'     : 'MESSAGE_MOVE_REQUEST'\n        'MESSAGE_MOVE_SUCCESS'     : 'MESSAGE_MOVE_SUCCESS'\n        'MESSAGE_MOVE_FAILURE'     : 'MESSAGE_MOVE_FAILURE'\n        'MESSAGE_FLAGS_REQUEST'     : 'MESSAGE_FLAGS_REQUEST'\n        'MESSAGE_FLAGS_SUCCESS'     : 'MESSAGE_FLAGS_SUCCESS'\n        'MESSAGE_FLAGS_FAILURE'     : 'MESSAGE_FLAGS_FAILURE'\n        'MESSAGE_FETCH_REQUEST'     : 'MESSAGE_FETCH_REQUEST'\n        'MESSAGE_FETCH_SUCCESS'     : 'MESSAGE_FETCH_SUCCESS'\n        'MESSAGE_FETCH_FAILURE'     : 'MESSAGE_FETCH_FAILURE'\n        'MESSAGE_UNDO_REQUEST'     : 'MESSAGE_UNDO_REQUEST'\n        'MESSAGE_UNDO_SUCCESS'     : 'MESSAGE_UNDO_SUCCESS'\n        'MESSAGE_UNDO_FAILURE'     : 'MESSAGE_UNDO_FAILURE'\n        'MESSAGE_UNDO_TIMEOUT'     : 'MESSAGE_UNDO_TIMEOUT'\n\n        'CONVERSATION_FETCH_REQUEST'     : 'CONVERSATION_FETCH_REQUEST'\n        'CONVERSATION_FETCH_SUCCESS'     : 'CONVERSATION_FETCH_SUCCESS'\n        'CONVERSATION_FETCH_FAILURE'     : 'CONVERSATION_FETCH_FAILURE'\n\n\n        'MESSAGE_RECOVER_REQUEST'     : 'MESSAGE_RECOVER_REQUEST'\n        'MESSAGE_RECOVER_SUCCESS'     : 'MESSAGE_RECOVER_SUCCESS'\n        'MESSAGE_RECOVER_FAILURE'     : 'MESSAGE_RECOVER_FAILURE'\n\n        # Search\n        'SET_SEARCH_QUERY'          : 'SET_SEARCH_QUERY'\n        'RECEIVE_RAW_SEARCH_RESULTS': 'RECEIVE_RAW_SEARCH_RESULTS'\n        'CLEAR_SEARCH_RESULTS'      : 'CLEAR_SEARCH_RESULTS'\n\n        # Contacts\n        'SET_CONTACT_QUERY'          : 'SET_CONTACT_QUERY'\n        'RECEIVE_RAW_CONTACT_RESULTS': 'RECEIVE_RAW_CONTACT_RESULTS'\n        'CLEAR_CONTACT_RESULTS'      : 'CLEAR_CONTACT_RESULTS'\n        'CONTACT_LOCAL_SEARCH'       : 'CONTACT_LOCAL_SEARCH'\n\n        # Layout\n        'SET_DISPOSITION'           : 'SET_DISPOSITION'\n        'RESIZE_PREVIEW_PANE'       : 'RESIZE_PREVIEW_PANE'\n        'MAXIMIZE_PREVIEW_PANE'     : 'MAXIMIZE_PREVIEW_PANE'\n        'MINIMIZE_PREVIEW_PANE'     : 'MINIMIZE_PREVIEW_PANE'\n        'DISPLAY_MODAL'             : 'DISPLAY_MODAL'\n        'HIDE_MODAL'                : 'HIDE_MODAL'\n        'REFRESH'                   : 'REFRESH'\n        'INTENT_AVAILABLE'          : 'INTENT_AVAILABLE'\n\n        # Settings\n        'SETTINGS_UPDATED'          : 'SETTINGS_UPDATED'\n\n        # Tasks\n        'RECEIVE_TASK_UPDATE'       : 'RECEIVE_TASK_UPDATE'\n        'RECEIVE_TASK_DELETE'       : 'RECEIVE_TASK_DELETE'\n        'CLEAR_TOASTS'              : 'CLEAR_TOASTS'\n\n        # Refreshes\n        'RECEIVE_REFRESH_UPDATE'       : 'RECEIVE_REFRESH_UPDATE'\n        'RECEIVE_REFRESH_STATUS'       : 'RECEIVE_REFRESH_STATUS'\n        'RECEIVE_REFRESH_DELETE'       : 'RECEIVE_REFRESH_DELETE'\n        'RECEIVE_REFRESH_NOTIF'        : 'RECEIVE_REFRESH_NOTIF'\n\n        'REFRESH_REQUEST'              : 'REFRESH_REQUEST'\n        'REFRESH_SUCCESS'              : 'REFRESH_SUCCESS'\n        'REFRESH_FAILURE'              : 'REFRESH_FAILURE'\n\n        # List\n        'LIST_FILTER'               : 'LIST_FILTER'\n        'LIST_SORT'                 : 'LIST_SORT'\n\n        # Toasts\n        'TOASTS_SHOW'               : 'TOASTS_SHOW'\n        'TOASTS_HIDE'               : 'TOASTS_HIDE'\n\n        # Drawer\n        'DRAWER_SHOW':   'DRAWER_SHOW'\n        'DRAWER_HIDE':   'DRAWER_HIDE'\n        'DRAWER_TOGGLE': 'DRAWER_TOGGLE'\n\n\n    PayloadSources:\n        'VIEW_ACTION'   : 'VIEW_ACTION'\n        'SERVER_ACTION' : 'SERVER_ACTION'\n\n    ComposeActions:\n        'REPLY'         : 'REPLY'\n        'REPLY_ALL'     : 'REPLY_ALL'\n        'FORWARD'       : 'FORWARD'\n\n    AlertLevel:\n        'SUCCESS'      : 'SUCCESS'\n        'INFO'         : 'INFO'\n        'WARNING'      : 'WARNING'\n        'ERROR'        : 'ERROR'\n\n    MessageFlags:\n        'FLAGGED'      : '\\\\Flagged'\n        'SEEN'         : '\\\\Seen'\n        'DRAFT'        : '\\\\Draft'\n\n    MessageFilter:\n        'ALL'          : 'all'\n        'ATTACH'       : 'attach'\n        'FLAGGED'      : 'flagged'\n        'UNSEEN'       : 'unseen'\n\n    MailboxFlags:\n        'DRAFT'   :  '\\\\Drafts'\n        'SENT'    :  '\\\\Sent'\n        'TRASH'   :  '\\\\Trash'\n        'ALL'     :  '\\\\All'\n        'SPAM'    :  '\\\\Junk'\n        'FLAGGED' :  '\\\\Flagged'\n\n    FlagsConstants:\n        SEEN   : '\\\\Seen'\n        UNSEEN : 'Unseen'\n        FLAGGED: '\\\\Flagged'\n        NOFLAG : 'Noflag'\n\n    Dispositions:\n        COL:  'column'\n        ROW:  'row'\n        RROW: 'row-reverse'\n\n    SpecialBoxIcons:\n        inboxMailbox: 'fa-inbox'\n        draftMailbox: 'fa-file-text-o'\n        sentMailbox: 'fa-send-o'\n        trashMailbox: 'fa-trash-o'\n        junkMailbox: 'fa-fire'\n        allMailbox: 'fa-archive'\n\n    Tooltips:\n        REPLY                       : 'TOOLTIP_REPLY'\n        REPLY_ALL                   : 'TOOLTIP_REPLY_ALL'\n        FORWARD                     : 'TOOLTIP_FORWARD'\n        REMOVE_MESSAGE              : 'TOOLTIP_REMOVE_MESSAGE'\n        OPEN_ATTACHMENTS            : 'TOOLTIP_OPEN_ATTACHMENTS'\n        OPEN_ATTACHMENT             : 'TOOLTIP_OPEN_ATTACHMENT'\n        DOWNLOAD_ATTACHMENT         : 'TOOLTIP_DOWNLOAD_ATTACHMENT'\n        PREVIOUS_CONVERSATION       : 'TOOLTIP_PREVIOUS_CONVERSATION'\n        NEXT_CONVERSATION           : 'TOOLTIP_NEXT_CONVERSATION'\n        FILTER_ONLY_UNREAD          : 'TOOLTIP_FILTER_ONLY_UNREAD'\n        FILTER_ONLY_IMPORTANT       : 'TOOLTIP_FILTER_ONLY_IMPORTANT'\n        FILTER_ONLY_WITH_ATTACHMENT : 'TOOLTIP_FILTER_ONLY_WITH_ATTACHMENT'\n        ACCOUNT_PARAMETERS          : 'TOOLTIP_ACCOUNT_PARAMETERS'\n        DELETE_SELECTION            : 'TOOLTIP_DELETE_SELECTION'\n        FILTER                      : 'TOOLTIP_FILTER'\n        QUICK_FILTER                : 'TOOLTIP_QUICK_FILTER'\n        COMPOSE_IMAGE               : 'TOOLTIP_COMPOSE_IMAGE'\n        COMPOSE_MOCK                : 'TOOLTIP_COMPOSE_MOCK'\n        EXPUNGE_MAILBOX             : 'TOOLTIP_EXPUNGE_MAILBOX'\n\n\n\n\n","# expose an API for performance\n# performance is not defined in phantomJS\ninitPerformances = ->\n    referencePoint = 0\n    window.start = ->\n        referencePoint = performance.now() if performance?.now?\n        React.addons.Perf.start()\n    window.stop = ->\n        console.log performance.now() - referencePoint if performance?.now?\n        React.addons.Perf.stop()\n    window.printWasted = ->\n        stop()\n        React.addons.Perf.printWasted()\n    window.printInclusive = ->\n        stop()\n        React.addons.Perf.printInclusive()\n    window.printExclusive = ->\n        stop()\n        React.addons.Perf.printExclusive()\n\nlogPerformances = ->\n    timing = window.performance?.timing\n    now = Math.ceil window.performance?.now()\n    if timing?\n        message = \"\"\"\nResponse at #{timing.responseEnd - timing.navigationStart}ms\nOnload at #{timing.loadEventStart - timing.navigationStart}ms\nPage loaded in #{now}ms\n\"\"\"\n        window.cozyMails.logInfo message\n\n# Init Web Intents\ninitIntent = ->\n    IntentManager = require \"./utils/intent_manager\"\n    window.intentManager = new IntentManager()\n    window.intentManager.send 'nameSpace',\n        type: 'ping'\n        from: 'mails'\n    .then (message) ->\n        LayoutActionCreator.intentAvailability true\n    , (error) ->\n        LayoutActionCreator.intentAvailability false\n\n# init plugins\ninitPlugins = ->\n    PluginUtils = require \"./utils/plugin_utils\"\n    if not window.settings.plugins?\n        window.settings.plugins = {}\n    PluginUtils.merge window.settings.plugins\n    PluginUtils.init()\n\n# Send client side errors to server\nwindow.onerror = (msg, url, line, col, error) ->\n    console.error msg, url, line, col, error, error?.stack\n    exception = error?.toString() or msg\n    if exception isnt window.lastError\n        data =\n            data:\n                type: 'error'\n                error:\n                    msg: msg\n                    full: exception\n                    stack: error?.stack\n                url: url\n                line: line\n                col: col\n                href: window.location.href\n        xhr = new XMLHttpRequest()\n        xhr.open 'POST', 'activity', true\n        xhr.setRequestHeader \"Content-Type\", \"application/json;charset=UTF-8\"\n        xhr.send JSON.stringify(data)\n        window.lastError = exception\n\n# Waits for the DOM to be ready\nwindow.onload = ->\n\n    try\n        window.__DEV__ = window.location.hostname is 'localhost'\n\n        initPerformances()\n\n        # expose an API\n        window.cozyMails = require './utils/api_utils'\n\n        # use Cozy instance locale or navigator language or \"en\" by default\n        if not window.settings?\n            window.settings = {}\n        locale =\n            #window.settings.lang or\n            window.locale or\n            window.navigator.language or\n            \"en\"\n\n        window.cozyMails.setLocale locale\n        LayoutActionCreator = require './actions/layout_action_creator/'\n        LayoutActionCreator.setDisposition window.settings.layoutStyle\n\n        # init plugins\n        PluginUtils = require \"./utils/plugin_utils\"\n        if not window.settings.plugins?\n            window.settings.plugins = {}\n        PluginUtils.merge window.settings.plugins\n        PluginUtils.init()\n\n        window.cozyMails.setSetting 'plugins', window.settings.plugins\n\n        # Init Web Intents\n        initIntent()\n\n        # Flux initialization (must be called at the begining)\n        AccountStore  = require './stores/account_store'\n        ContactStore  = require './stores/contact_store'\n        LayoutStore   = require './stores/layout_store'\n        MessageStore  = require './stores/message_store'\n        SearchStore   = require './stores/search_store'\n        SettingsStore = require './stores/settings_store'\n\n        # Routing management\n        Router = require './router'\n        @router = new Router()\n        window.router = @router\n\n        # Binds the router and flux to the React application\n        Application = require './components/application'\n        application = Application router: @router\n        window.rootComponent = React.renderComponent application, document.body\n\n        # Starts the application by initializing the router\n        Backbone.history.start()\n\n        # begin realtime\n        require './utils/socketio_utils'\n\n        # Desktop notifications\n        if window.settings.desktopNotifications and window.Notification?\n            Notification.requestPermission (status) ->\n                # This allows to use Notification.permission with Chrome/Safari\n                if Notification.permission isnt status\n                    Notification.permission = status\n\n        logPerformances()\n\n        window.cozyMails.customEvent \"APPLICATION_LOADED\"\n\n    catch e\n        console.error e\n        exception = e.toString()\n        if exception isnt window.lastError\n            # Send client side errors to server\n            data =\n                data:\n                    type: 'error'\n                    exception: exception\n            xhr = new XMLHttpRequest()\n            xhr.open 'POST', 'activity', true\n            xhr.setRequestHeader \"Content-Type\",\n                \"application/json;charset=UTF-8\"\n            xhr.send JSON.stringify(data)\n            window.lastError = exception\n","###\n\n    -- Coffee port of Facebook's flux dispatcher. It was in ES6 and I haven't\n    been successful in adding a transpiler. --\n\n    Copyright (c) 2014, Facebook, Inc.\n    All rights reserved.\n\n    This source code is licensed under the BSD-style license found in the\n    LICENSE file in the root directory of this source tree. An additional grant\n    of patent rights can be found in the PATENTS file in the same directory.\n ###\n\ninvariant = require '../invariant'\n\n_lastID = 1\n_prefix = 'ID_'\n\nmodule.exports = Dispatcher = class Dispatcher\n    constructor: ->\n        this._callbacks = {}\n        this._isPending = {}\n        this._isHandled = {}\n        this._isDispatching = false\n        this._pendingPayload = null\n\n    ###\n        Registers a callback to be invoked with every dispatched payload.\n        Returns a token that can be used with `waitFor()`.\n\n        @param {function} callback\n        @return {string}\n    ###\n    register: (callback) ->\n        id = _prefix + _lastID++\n        this._callbacks[id] = callback\n        return id\n\n    ###\n        Removes a callback based on its token.\n\n        @param {string} id\n    ###\n    unregister: (id) ->\n        message = 'Dispatcher.unregister(...): `%s` does not map to a ' + \\\n                  'registered callback.'\n        invariant(\n            this._callbacks[id],\n            message,\n            id\n        )\n        delete this._callbacks[id]\n\n    ###\n        Waits for the callbacks specified to be invoked before continuing\n        execution of the current callback. This method should only be used by a\n        callback in response to a dispatched payload.\n\n        @param {array<string>} ids\n    ###\n    waitFor: (ids) ->\n        invariant(\n            this._isDispatching,\n            'Dispatcher.waitFor(...): Must be invoked while dispatching.'\n        )\n        message = 'Dispatcher.waitFor(...): Circular dependency detected ' + \\\n                  'while waiting for `%s`.'\n        message2 = 'Dispatcher.waitFor(...): `%s` does not map to a ' + \\\n                   'registered callback.'\n        for ii in [0..ids.length - 1] by 1\n            id = ids[ii]\n            if this._isPending[id]\n                invariant(\n                    this._isHandled[id],\n                    message,\n                    id\n                )\n                continue\n\n            invariant(\n                this._callbacks[id],\n                message2,\n                id\n            )\n            this._invokeCallback id\n\n    ###\n        Dispatches a payload to all registered callbacks.\n\n        @param {object} payload\n    ###\n    dispatch: (payload) ->\n        console.log \"DIS\", payload.action.type, payload.action.value\n        message = 'Dispatch.dispatch(...): Cannot dispatch in the middle ' + \\\n                  'of a dispatch.'\n        invariant(\n            not this._isDispatching,\n            message\n        )\n        this._startDispatching(payload)\n        try\n            for id of this._callbacks\n                if this._isPending[id]\n                    continue\n                this._invokeCallback id\n        finally\n            this._stopDispatching()\n\n    ###\n        Is this Dispatcher currently dispatching.\n\n        @return {boolean}\n    ###\n    isDispatching: -> return this._isDispatching\n\n    ###\n        Call the callback stored with the given id. Also do some internal\n        bookkeeping.\n\n        @param {string} id\n        @internal\n    ###\n    _invokeCallback: (id) ->\n        this._isPending[id] = true\n        this._callbacks[id](this._pendingPayload)\n        this._isHandled[id] = true\n\n    ###\n        Set up bookkeeping needed when dispatching.\n\n        @param {object} payload\n        @internal\n    ###\n    _startDispatching: (payload) ->\n        for id of this._callbacks\n            this._isPending[id] = false\n            this._isHandled[id] = false\n\n        this._pendingPayload = payload\n        this._isDispatching = true\n\n    ###\n        Clear bookkeeping used for dispatching.\n\n        @internal\n    ###\n    _stopDispatching: ->\n        this._pendingPayload = null\n        this._isDispatching = false\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n\"use strict\";\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (__DEV__) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;","AppDispatcher = require '../../../app_dispatcher'\n\n\nmodule.exports = class Store extends EventEmitter\n\n    uniqID: null\n\n    # this variable will be shared with all subclasses so we store the items\n    # by subclass we don't use `@constructor.name` because it breaks when\n    # mangled\n    _nextUniqID = 0\n    _handlers = {}\n    _addHandlers = (type, callback) ->\n\n        _handlers[@uniqID] = {} unless _handlers[@uniqID]?\n        _handlers[@uniqID][type] = callback\n\n    # Registers the store's callbacks to the dispatcher\n    _processBinding = ->\n        @dispatchToken = AppDispatcher.register (payload) =>\n            {type, value} = payload.action\n            if (callback = _handlers[@uniqID][type])?\n                callback.call @, value\n\n\n    constructor: ->\n        super()\n        # set a uniq ID\n        @uniqID = _nextUniqID++\n        @__bindHandlers _addHandlers.bind @\n        _processBinding.call @\n\n    # Must be overriden by each store\n    __bindHandlers: (handle) ->\n        if __DEV__\n            message = \"The store #{@constructor.name} must define a \" + \\\n                      \"`__bindHandlers` method\"\n            throw new Error message\n\n","###\n    Routing component. We let Backbone handling browser stuff\n    and we format the varying parts of the layout.\n\n    URLs are built in the following way:\n        - a first part that represents the first panel\n        - a second part that represents the second panel\n        - if there is just one part, it represents a full width panel\n\n    Since Backbone.Router only handles one part, routes initialization mechanism\n    is overriden so we can post-process the second part of the URL.\n\n    Example: a defined pattern will generates two routes.\n        - `mailbox/a/path/:id`\n        - `mailbox/a/path/:id/*secondPanel`\n\n        Each pattern is actually the pattern itself plus the pattern itself and\n        another pattern.\n###\n\nLayoutActionCreator = require '../actions/layout_action_creator'\n\nmodule.exports = class Router extends Backbone.Router\n\n    patterns: {}\n\n    # default route\n    routes: {}\n\n    previous: null\n    current: null\n\n    # we store a regexified version of each patterns\n    cachedPatterns: []\n\n    initialize: (options) ->\n\n        # defines the routes from the patterns\n        for key, route of @patterns\n\n            # caches each regex' pattern to avoid to recalculate them each time\n            @cachedPatterns.push\n                key: key\n                pattern: @_routeToRegExp route.pattern\n\n            # each pattern has two routes: full-width or with a second panel\n            @routes[route.pattern] = key\n            @routes[\"#{route.pattern}/*secondPanel\"] = key\n\n        # Backbone's magic\n        @_bindRoutes()\n\n        # Updates the LayoutStore for each matched request\n        @on 'route', (name, args) =>\n\n            if name is 'default'\n                name = LayoutActionCreator.getDefaultRoute()\n                args = [null]\n\n            [firstPanelInfo, secondPanelInfo] = @_processSubRouting name, args\n\n            firstAction = @fluxActionFactory firstPanelInfo\n            secondAction = @fluxActionFactory secondPanelInfo\n\n            @previous = @current\n            @current = firstPanel: firstPanelInfo, secondPanel: secondPanelInfo\n\n            if firstAction?\n                firstAction firstPanelInfo, 'first'\n\n            if secondAction?\n                secondAction secondPanelInfo, 'second'\n            @trigger 'fluxRoute', @current\n\n\n    ###\n        Gets the Flux action to execute given a panel info.\n    ###\n    fluxActionFactory: (panelInfo) ->\n\n        fluxAction = null\n        pattern = @patterns[panelInfo?.action]\n\n        if pattern?\n            fluxAction = LayoutActionCreator[pattern.fluxAction]\n\n            if not fluxAction?\n                console.warn \"`#{pattern.fluxAction}` method not found in \" + \\\n                             \"layout actions.\"\n\n            return fluxAction\n\n\n    ###\n        Extracts and matches the second part of the URl if it exists.\n    ###\n    _processSubRouting: (name, args) ->\n        # removes the last argument which is always `null`, not sure why\n        args.pop()\n\n        # next comes the secondPanel url if it exists\n        # or a firstPanel parameter if there is not secondPanel\n        secondPanelString = args.pop()\n\n        # if first panel number of expected params is bigger what is first\n        # it means there are no second panel and that what we got before was a\n        # parameter of the first panel\n        params = @patterns[name].pattern.match(/:[\\w]+/g) or []\n        if params.length > args.length and secondPanelString?\n            args.push secondPanelString\n            secondPanelString = null\n\n        firstPanelParameters = @_arrayToNamedParameters name, args\n\n        # checks all the routes for the second part of the URL\n        route = _.first _.filter @cachedPatterns, (element) ->\n            return element.pattern.test secondPanelString\n\n        # if a route has been found, we retrieve the params' value and format it\n        if route?\n            args = @_extractParameters route.pattern, secondPanelString\n            # remove the last argument which is alway `null`, not sure why\n            args.pop()\n\n            # normalizes the secondPanelInfo and adds default parameters if\n            # needed\n            secondPanelInfo = @_mergeDefaultParameter\n                action: route.key\n                parameters: @_arrayToNamedParameters route.key, args\n        else\n            secondPanelInfo = null\n\n        # normalizes the firstPanelInfo and adds default parameters, if needed\n        firstPanelInfo = @_mergeDefaultParameter\n            action: name\n            parameters: firstPanelParameters\n\n        return [firstPanelInfo, secondPanelInfo]\n\n\n    ###\n        Turns a parameters array into an object of named parameters\n    ###\n    _arrayToNamedParameters: (patternName, parametersArray) ->\n\n        namedParameters = {}\n        parametersName = @patterns[patternName].pattern.match(/:[\\w]+/g) or []\n        for paramName, index in parametersName\n            # Removes the initial \":\"\n            unPrefixedParamName = paramName.substr 1\n            namedParameters[unPrefixedParamName] = parametersArray[index]\n\n        return namedParameters\n\n\n    ###\n        Turns a parameters array into an object of named parameters\n    ###\n    _namedParametersToArray: (patternName, namedParameters) ->\n        parametersArray = []\n        parametersName = @patterns[patternName].pattern.match(/:[\\w]+/g) or []\n        for paramName, index in parametersName\n            # Removes the initial \":\"\n            unPrefixedParamName = paramName.substr 1\n            parametersArray.push namedParameters[paramName]\n\n        return parametersArray\n\n\n    ###\n        Builds a route from panel information.\n        Two modes:\n            - options has firstPanel and/or secondPanel attributes with the\n              panel(s) information.\n            - options has the panel information along a `direction` attribute\n              that can be `first` or `second`. It's the short version.\n    ###\n    buildUrl: (options) ->\n        # Loads the panel from the options or the current router status to keep\n        # track of current URLs\n        if options.firstPanel? or options.secondPanel?\n            firstPanelInfo = options.firstPanel or @current.firstPanel\n            secondPanelInfo = options.secondPanel or @current.secondPanel\n        else\n            # Handles short version\n            if options.direction?\n                if options.direction is 'first'\n                    firstPanelInfo = options\n                    secondPanelInfo = @current.secondPanel\n                else if options.direction is 'second'\n                    firstPanelInfo = @current.firstPanel\n                    secondPanelInfo = options\n                else\n                    console.warn '`direction` should be `first`, `second`.'\n            else\n                console.warn '`direction` parameter is mandatory when ' + \\\n                             'using short call.'\n\n        # if the `fullWidth` parameter is set, it ignores the second panel info\n        isFirstDirection = options.firstPanel? or options.direction is 'first'\n        if isFirstDirection and options.fullWidth\n            if options.secondPanel? and options.direction is 'second'\n                console.warn \"You shouldn't use the fullWidth option with \" + \\\n                             \"a second panel\"\n            secondPanelInfo = null\n\n        # Actual building\n        firstPart = @_getURLFromRoute firstPanelInfo\n        secondPart = @_getURLFromRoute secondPanelInfo\n\n        url = \"##{firstPart}\"\n        if secondPart? and secondPart.length > 0\n            url = \"#{url}/#{secondPart}\"\n\n        return url\n\n\n    ###\n        Closes a panel given a direction. If a full-width panel is closed,\n        the URL points to the default route.\n    ###\n    buildClosePanelUrl: (direction) ->\n\n        # If a first panel is closed, the second panel becomes full-width.\n        # If a full-width panel is closed, `@current.secondPanel` is null and\n        # the default route is loaded.\n        if direction is 'first' or direction is 'full'\n            panelInfo = _.clone @current.secondPanel\n        else\n            panelInfo = _.clone @current.firstPanel\n\n        if panelInfo?\n            panelInfo.direction = 'first'\n            panelInfo.fullWidth = true\n            return @buildUrl panelInfo\n        else\n            return '#' # loads the default route\n\n\n    # Builds the URL string from a route.\n    _getURLFromRoute: (panel) ->\n\n        # Clones the parameter because we are going to mutate it\n        panel = _.clone panel\n        if panel?.parameters?\n            # _.clone doesn't perform a deep copy\n            panel.parameters = _.clone panel.parameters\n\n        if panel?\n            pattern = @patterns[panel.action].pattern\n\n            # if the parameter is alone, we turn it into an array\n            if panel.parameters? and not (panel.parameters instanceof Array) \\\n            and not (panel.parameters instanceof Object)\n                panel.parameters = [panel.parameters]\n\n            # to ensures BC, if it's an array, we turn it into an object of\n            # named parameters\n            if panel.parameters? and panel.parameters instanceof Array\n                {action, parameters} = panel\n                panel.parameters = @_arrayToNamedParameters action, parameters\n\n            panel = @_mergeDefaultParameter panel\n\n            # we default to empty array if there is no parameter in the route\n            parametersInPattern = pattern.match(/:[\\w]+/gi) or []\n\n            # the pattern is progressively filled with values\n            filledPattern = pattern\n            if panel.parameters\n                for paramInPattern in parametersInPattern\n                    key = paramInPattern.substr 1\n                    paramValue = panel.parameters[key]\n                    filledPattern = filledPattern.replace paramInPattern, \\\n                                                                    paramValue\n\n            return filledPattern\n        else\n            return ''\n\n\n    # Merges defaut parameters into a panel info if there are missing parameters\n    _mergeDefaultParameter: (panelInfo) ->\n        panelInfo = _.clone panelInfo\n        parameters = _.clone panelInfo.parameters or {}\n        # gets default values, if there are\n        if (defaultParameters = @_getDefaultParameters panelInfo.action)?\n\n            # merges the parameters in the relevant place\n            for key, defaultParameter of defaultParameters\n                if not parameters[key]?\n                    parameters[key] = defaultParameter\n\n        panelInfo.parameters = parameters\n\n        return panelInfo\n","module.exports =\n\n      # Application\n      \"app loading\"             : \"Laden…\"\n      \"app back\"                : \"Zurück\"\n      \"app cancel\"              : \"Abbrechen\"\n      \"app menu\"                : \"Menü\"\n      \"app search\"              : \"Suchen…\"\n      \"app alert close\"         : \"Schließen\"\n      \"app unimplemented\"       : \"Noch nicht implementiert\"\n      \"app error\"               : \"Argh, Ich bin nicht fähig diese Aktion auszuführen,\n                                    bitte probieren Sie es wieder\"\n\n      # Compose window\n      \"compose\"                   : \"Neue E-Mail erstellen\"\n      \"compose default\"           : 'Hallo, wie geht es Ihnen Heute?'\n      \"compose from\"              : \"Von\"\n      \"compose to\"                : \"An\"\n      \"compose to help\"           : \"Empfänger Liste\"\n      \"compose cc\"                : \"Cc\"\n      \"compose cc help\"           : \"Kopie Liste\"\n      \"compose bcc\"               : \"Bcc\"\n      \"compose bcc help\"          : \"Verborgene Kopie Liste\"\n      \"compose subject\"           : \"Betreff\"\n      \"compose content\"           : \"Inhalt\"\n      \"compose subject help\"      : \"Nachrichten Betreff\"\n      \"compose reply prefix\"      : \"Re: \"\n      \"compose reply separator\"   : \"\\n\\nOn %{date}, %{sender} hat geschrieben \\n\"\n      \"compose forward prefix\"    : \"Fwd: \"\n      \"compose forward separator\" : \"\\n\\nOn %{date}, %{sender} hat geschrieben \\n\"\n      \"compose action draft\"      : \"Entwurf speichern\"\n      \"compose action send\"       : \"Senden\"\n      \"compose action delete\"     : \"Entwurf löschen\"\n      \"compose action sending\"    : \"Sendet\"\n      \"compose toggle cc\"         : \"Cc\"\n      \"compose toggle bcc\"        : \"Bcc\"\n      \"compose error no dest\"     : \"Sie können keine Nachricht an Niemanden senden\"\n      \"compose error no subject\"  : \"Bitte vergeben Sie einen Betreff\"\n      \"compose confirm keep draft\": \"Nachricht wurde nicht gesandet, Entwurft behalten?\"\n      \"compose wrong email format\": \"Die vergebene E-Mail Adresse hat kein geeignes Format: %{address}.\"\n      \"compose forward header\"    : \"Gesendete Nachricht\"\n      \"compose forward subject\"   : \"Betreff:\"\n      \"compose forward date\"      : \"Datum:\"\n      \"compose forward from\"      : \"Von:\"\n      \"compose forward to\"        : \"An:\"\n\n      # Menu\n      \"menu show\"               : \"Menü anzeigen\"\n      \"menu compose\"            : \"Erstellen\"\n      \"menu account new\"        : \"Neues Konto\"\n      \"menu settings\"           : \"Parameter\"\n      \"menu mailbox total\"      : \"%{smart_count} Nachricht |||| %{smart_count} Nachrichten\"\n      \"menu mailbox unread\"     : \", %{smart_count} ungelesene Nachricht ||||, %{smart_count} ungelesene Nachrichten \"\n      \"menu mailbox new\"        : \" und %{smart_count} neue Nachricht |||| und %{smart_count} neue Nachrichten \"\n      \"menu favorites on\"       : \"Favoriten\"\n      \"menu favorites off\"      : \"Alle\"\n      \"menu toggle\"             : \"Menü umschalten\"\n\n      \"menu refresh label\"      : \"Refresh\"\n      \"menu refreshing\"         : \"Refreshing...\"\n\n      # List\n      \"list empty\"              : \"Keine E-Mail in diesem Postfach.\"\n      \"no flagged message\"      : \"Keine wichtige E-Mail in diesem Postfach.\"\n      \"no unseen message\"       : \"Alle E-Mails in dieser Box wurden gelesen\"\n      \"no attach message\"       : \"Keine Nachrichten mit Anhängen\"\n      \"no filter message\"       : \"Keine E-Mail für diesen Filter.\"\n      \"list fetching\"           : \"Laden…\"\n      \"list search empty\"       : \"Keine Ergebnis für diese Regel gefundnen \\\"%{query}\\\".\"\n      \"list count\"              : \"%{smart_count} Nachricht in diesem Postfach |||| %{smart_count} NAchrichten in diesem Postfach\"\n      \"list search count\"       : \"%{smart_count} result found. ||||\n                                    %{smart_count} results found.\"\n      \"list filter\"               : \"Filter\"\n      \"list filter all\"           : \"Alle\"\n      \"list filter unseen\"        : \"Ungelesen\"\n      \"list filter flagged\"       : \"Wichtig\"\n      \"list filter attach\"        : \"Anhänge\"\n      \"list sort\"                 : \"Sortieren\"\n      \"list sort date\"            : \"Datum\"\n      \"list sort subject\"         : \"Betreff\"\n      \"list option compact\"       : \"Kompact\"\n      \"list next page\"            : \"Mehr Nachrichten\"\n      \"list end\"                  : \"Das ist das Ende der Liste\"\n      \"list mass no message\"      : \"Keine Nachrichten ausgewählt\"\n      \"list delete confirm\"       : \"\"\"\n                                    Möchten Sie wirklich diese Nachricht löschen ? ||||\n                                    Möchten Sie wirklich diese %{smart_count} Nachrichten löschen ?\n                                    \"\"\"\n      \"list delete conv confirm\"  : \"\"\"\n                                    Möchten Sie wirklich diese Unterhaltung löschen ? ||||\n                                    Möchten Sie wirklich diese %{smart_count} Unterhaltungen löschen?\n                                    \"\"\"\n\n      # Mail\n      \"mail to\"                 : \"An: \"\n      \"mail cc\"                 : \"Cc: \"\n      \"headers from\"            : \"Von\"\n      \"headers to\"              : \"An\"\n      \"headers cc\"              : \"Cc\"\n      \"headers reply-to\"        : \"Antwort an\"\n      \"headers date\"            : \"Datum\"\n      \"headers subject\"         : \"Betreff\"\n      \"length bytes\"            : \"Bytes\"\n      \"length kbytes\"           : \"kB\"\n      \"length mbytes\"           : \"MB\"\n      \"mail action reply\"       : \"Anworten\"\n      \"mail action reply all\"   : \"Allen antworten\"\n      \"mail action forward\"     : \"Weiterleiten\"\n      \"mail action delete\"      : \"Löschen\"\n      \"mail action mark\"        : \"Markieren als\"\n      \"mail action copy\"        : \"Kopie\"\n      \"mail action move\"        : \"Verschieben\"\n      \"mail action more\"        : \"Mehr\"\n      \"mail action headers\"     : \"Headers\"\n      \"mail action raw\"         : \"Roh Nachricht\"\n      \"mail mark spam\"          : \"Spam\"\n      \"mail mark nospam\"        : \"Kein Spam\"\n      \"mail mark fav\"           : \"wichtig\"\n      \"mail mark nofav\"         : \"Nicht wichtig\"\n      \"mail mark read\"          : \"Gelesen\"\n      \"mail mark unread\"        : \"Ungelesen\"\n      \"mail confirm delete\"     : \"Möchten Sie wirklich die Nachricht löschen “%{subject}”?\"\n      \"mail confirm delete nosubject\" : \"Möchten Sie wirklich diese Nachricht löschen?\"\n      \"mail action conversation delete\" : \"Unterhaltung löschen\"\n      \"mail action conversation move\"   : \"Unterhaltung verschieben\"\n      \"mail action conversation seen\"   : \"Unterhaltung als gelesen markieren\"\n      \"mail action conversation unseen\" : \"Unterhaltung als ungelesen markieren\"\n      \"mail conversation length\": \"\"\"\n            %{smart_count} Nachricht in Unterhaltung. ||||\n            %{smart_count} Nachrichten in Unterhaltung.\n      \"\"\"\n\n      # Account\n      \"account new\"                 : \"Neues Konto\"\n      \"account edit\"                : \"Konto bearbeiten\"\n      \"account add\"                 : \"Hinzufügen\"\n      \"account save\"                : \"Speichern\"\n      \"account saving\"              : \"Speicherung\"\n      \"account check\"               : \"Verbindung prüfen\"\n      \"account accountType short\"   : \"IMAP\"\n      \"account accountType\"         : \"Konto Typ\"\n      \"account imapPort short\"      : \"993\"\n      \"account imapPort\"            : \"Port\"\n      \"account imapSSL\"             : \"SSL verwenden\"\n      \"account imapServer short\"    : \"imap.provider.tld\"\n      \"account imapServer\"          : \"IMAP Server\"\n      \"account imapTLS\"             : \"TLS verwenden\"\n      \"account label short\"         : \"Ein kurzer Postfach Name\"\n      \"account label\"               : \"Konto Name\"\n      \"account login short\" : \"Ihre E-Mail Addresse\"\n      \"account login\"             : \"E-Mail Addresse\"\n      \"account name short\"       : \"Ihr Name, dieser wird angezeigt\"\n      \"account name\"           : \"Ihr Name\"\n      \"account password\"            : \"Passwort\"\n      \"account receiving server\"    : \"Postausgang Server\"\n      \"account sending server\"      : \"Posteingang Server\"\n      \"account smtpLogin short\"     : \"SMTP Benutzer\"\n      \"account smtpLogin\"           : \"SMTP Benutzer (wenn abweichend vom Haupt Login)\"\n      \"account smtpMethod\"          : \"Authentifizierungsmethode\"\n      \"account smtpMethod NONE\"     : \"Keine\"\n      \"account smtpMethod PLAIN\"    : \"Plain\"\n      \"account smtpMethod LOGIN\"    : \"Login\"\n      \"account smtpMethod CRAM-MD5\" : \"Cram-MD5\"\n      \"account smtpPassword short\"  : \"SMTP Passwort\"\n      \"account smtpPassword\"        : \"SMTP Passwort (wenn abweichend vom Haupt Passwort)\"\n      \"account smtpPort short\"      : \"465\"\n      \"account smtpPort\"            : \"Port\"\n      \"account smtpSSL\"             : \"SSL verwenden\"\n      \"account smtpServer short\"    : \"smtp.provider.tld\"\n      \"account smtpServer\"          : \"SMTP Server\"\n      \"account smtpTLS\"             : \"STARTTLS verwenden\"\n      \"account remove\"              : \"Konto löschen\"\n      \"account remove confirm\"      : \"Möchten Sie dieses Konto wirklich löschen?\"\n      \"account draft mailbox\"       : \"Entwurffach\"\n      \"account sent mailbox\"        : \"Posteingang\"\n      \"account trash mailbox\"       : \"Papierkorb\"\n      \"account mailboxes\"           : \"Ordner\"\n      \"account special mailboxes\"   : \"Specielle Postfächer\"\n      \"account newmailbox label\"    : \"Neuer Ordner\"\n      \"account newmailbox placeholder\" : \"Name\"\n      \"account newmailbox parent\"   : \"Parent:\"\n      \"account confirm delbox\"      : \"Möchten Sie wirklich alle Nachrichtenn in diesem Postfach löschen?\"\n      \"account tab account\"         : \"Konto\"\n      \"account tab mailboxes\"       : \"Ordner\"\n      \"account errors\"              : \"Einige Daten fehlen oder sind ungültig\"\n      \"account type\"                : \"Konto Typ\"\n      \"account updated\"             : \"Konto aktualisiert\"\n      \"account checked\"             : \"Parameter ok\"\n      \"account creation ok\"         : \"Yeah! Das Konot wurde erfolgreich erstellt. Wählen Sie nun die Postfächer, die Sie im Menü sehen möchten\"\n      \"account refreshed\"           : \"Konto aktualisiert\"\n      \"account refresh error\"       : \"Fehler beim aktualisieren der Konten, Parameter prüfen\"\n      \"account identifiers\"         : \"Identifikation\"\n      \"account actions\"             : \"Aktionen\"\n      \"account danger zone\"         : \"Danger Zone\"\n      \"account no special mailboxes\": \"Bitte konfigurieren Sie erst spezielle Ordner\"\n      \"account smtp hide advanced\"  : \"Erweiterte Parameter verbergen\"\n      \"account smtp show advanced\"  : \"Erweiterte Parameter anzeigen\"\n      \"mailbox create ok\"           : \"Ordner erstellt\"\n      \"mailbox create ko\"           : \"Fehler beim Ordner erstellen\"\n      \"mailbox update ok\"           : \"Ordner aktualisiert\"\n      \"mailbox update ko\"           : \"Fehler beim Ordner aktualisieren\"\n      \"mailbox delete ok\"           : \"Ordner gelöscht\"\n      \"mailbox delete ko\"           : \"Fehler beim Ordner löschen\"\n      \"mailbox expunge ok\"          : \"Papierkorb geleeren\"\n      \"mailbox expunge ko\"          : \"Fehler beim Papierkorb leeren\"\n      \"mailbox title edit\"          : \"Ordner umbennen\"\n      \"mailbox title delete\"        : \"Ordner löschen\"\n      \"mailbox title edit save\"     : \"Speichern\"\n      \"mailbox title edit cancel\"   : \"Abbrechen\"\n      \"mailbox title add\"           : \"Neuen Ordner hinzufügen\"\n      \"mailbox title add cancel\"    : \"Abbrechen\"\n      \"mailbox title favorite\"      : \"Ordner wird angezeigt\"\n      \"mailbox title not favorite\"  : \"Ordner wird nicht angezeigt\"\n      \"mailbox title total\"         : \"Zusammen\"\n      \"mailbox title unread\"        : \"Ungelesen\"\n      \"mailbox title new\"           : \"Neu\"\n      \"config error auth\"           : \"Falsche Verbindungsparameter\"\n      \"config error imapPort\"       : \"Falscher IMAP Port\"\n      \"config error imapServer\"     : \"Falscher IMAP Server\"\n      \"config error imapTLS\"        : \"Falscher IMAP TLS\"\n      \"config error smtpPort\"       : \"Falscher SMTP Port\"\n      \"config error smtpServer\"     : \"Falscher SMTP Server\"\n      \"config error nomailboxes\"    : \"Kein Ordner in diesem Konto, bitte erstellen Sie einen\"\n\n      # Message Action\n      \"message action sent ok\"      : \"Nachricht senden\"\n      \"message action sent ko\"      : \"Fehler beim Nachricht senden: \"\n      \"message action draft ok\"     : \"Nachricht gespeichert\"\n      \"message action draft ko\"     : \"Fehler beim Nachricht speichern: \"\n      \"message delete ok\"    : \"Nachricht “%{subject}” gelöscht\"\n      \"message delete ko\"    : \"Fehler bei Nachricht löschen: \"\n      \"message move ok\"      : \"Nachricht “%{subject}” wurde verschoben\"\n      \"message move ko\"      : \"Fehler beim verschieben von Nachricht “%{subject}”: \"\n      \"message mark ok\"      : \"Nachricht markiert\"\n      \"message mark ko\"      : \"Fehler beim Nachricht markieren: \"\n      \"conversation move ok\"        : \"Unterhaltung “%{subject}” wurde verschoben\"\n      \"conversation move ko\"        : \"Fehler beim verschieben der Unterhaltung “%{subject}”\"\n      \"conversation delete ok\"      : \"Unterhaltung “%{subject}” wurde gelöscht\"\n      \"conversation delete ko\"      : \"Fehler beim löschen der Unterhaltung\"\n      \"conversation seen ok\"        : \"Unterhaltung markiert als gelesen\"\n      \"conversation seen ko\"        : \"Fehler beim gelesen markieren\"\n      \"conversation unseen ok\"      : \"Conversation marked as unread\"\n      \"conversation unseen ko\"      : \"Fehler beim ungelesen markieren\"\n      \"undo last action\"            : \"Rückgänig\"\n      \"message images warning\"      : \"Anzeige von Bildern innerhalb der Nachricht wurde geblockt\"\n      \"message images display\"      : \"Bilder anzeigen\"\n      \"message html display\"        : \"HTML anzeigen\"\n      \"message delete no trash\"     : \"Bitte wählen Sie einen Ordner als Papierkorb\"\n      \"message delete already\"      : \"Nachricht bereits im Papierkorb\"\n      \"message move already\"        : \"Nachricht bereits in diesem Ordner\"\n      \"undo ok\"                     : \"Nachrichten wieder hergestellt\"\n      \"undo ko\"                     : \"Fehler beim Nachrichten Wiederherstellen\"\n      \"undo unavalable\"             : \"Rückgängig Nachrichten löschen nicht möglich\"\n      \"message preview title\"       : \"Anhänge ansehen\"\n\n      # Settings\n      \"settings title\"             : \"Einstellungen\"\n      \"settings button save\"       : \"Speichern\"\n      #\"settings label mpp\"         : \"Nachrichten pro Seite\"\n      \"settings plugins\"           : \"Plugins\"\n      \"settings plugins\"           : \"Ergänzende Module\"\n      \"settings plugin add\"        : \"Hinzufügen\"\n      \"settings plugin del\"        : \"Löschen\"\n      \"settings plugin help\"       : \"Hilfe\"\n      \"settings plugin new name\"   : \"Plugin Name\"\n      \"settings plugin new url\"    : \"Plugin URL\"\n      # SETTINGS\n      \"settings label composeInHTML\"        : \"Rich Nachrichten Editor\"\n      \"settings label composeOnTop\"         : \"Antwort am Anfang der Nachricht\"\n      \"settings label desktopNotifications\" : \"Mitteilungen\"\n      \"settings label displayConversation\"  : \"Unterhaltungen anzeigen\"\n      \"settings label displayPreview\"       : \"Nachrichten Vorschau anzeigen\"\n      \"settings label messageDisplayHTML\"   : \"Nachricht in HTML anzeigen\"\n      \"settings label messageDisplayImages\" : \"Bilder in der Nachrichten anzeigen\"\n      \"settings label messageConfirmDelete\" : \"Bestätigung bevor Nachricht löschen\"\n      \"settings label layoutStyle\"            : \"Layout anzeigen\"\n      \"settings label layoutStyle horizontal\" : \"Horizontal\"\n      \"settings label layoutStyle vertical\"   : \"Vertikal\"\n      \"settings label layoutStyle three\"      : \"Drei Spalten\"\n      \"settings label listStyle\"            : \"Nachrichten Listen Stil\"\n      \"settings label listStyle default\"    : \"Normal\"\n      \"settings label listStyle compact\"    : \"Kompact\"\n      \"settings lang\"             : \"Sprache\"\n      \"settings lang en\"          : \"English\"\n      \"settings lang fr\"          : \"Français\"\n      \"settings lang de\"          : \"Deutsch\"\n      \"settings save error\"       : \"Einstellungen können nicht gespeichert werden, bitte propieren Sie es erneut\"\n\n      # File picker\n      \"picker drop here\"           : \"Dateien hier ablegen\"\n\n      # Mailbox List\n      \"mailbox pick one\"           : \"Eine auswählen\"\n      \"mailbox pick null\"          : \"Kein Postfach dafür\"\n\n      # Tasks\n      \"task account-fetch\"         : 'Holen %{account}'\n      \"task box-fetch\"             : 'Holen %{box}'\n      \"task apply-diff-fetch\"      : 'Holen Nachrichtenn aus %{box} von %{account}'\n      \"task apply-diff-remove\"     : 'Löschen Nachrichten aus %{box} von %{account}'\n      \"task recover-uidvalidity\"   : 'Analysiere'\n      \"there were errors\"          : '%{smart_count} Fehler. |||| %{smart_count}\n                                        Fehler.'\n      \"modal please report\"        : \"Bitte übertragen Sie diese Information zum Cozy.\"\n      \"modal please contribute\"    : \"Bitte beitragen\"\n\n      # Validation\n      \"validate must not be empty\" : \"Pflichtfeld\"\n\n      # Toast\n      \"toast hide\"      : \"Alarme verbergen\"\n      \"toast show\"      : \"Alarme anzeigen\"\n      \"toast close all\" : \"Alle Alarme schließen\"\n\n      # Notifications\n      \"notif new title\": 'CozyEmail'\n      \"notif new\": \"\"\"\n        %{smart_count} Nachricht nicht gelesen in Konto %{account}||||\n        %{smart_count} Nachrichten nicht gelesen in Konto %{account}\n      \"\"\"\n      \"notif complete\": \"\n            Import des Kontos %{account} abgeschlossen.\n      \"\n\n      # Contacts\n      \"contact form\"             : \"Kontakte auswählen\"\n      \"contact form placeholder\" : \"Kontakt Name\"\n      \"contact create success\"   : \"%{contact} wurden zu Ihren Kontakten hinzu gefügt\"\n      \"contact create error\"     : \"Fehler beim Hinzufügen Ihrer Kontakte : {error}\"\n\n      # GMail security\n      \"gmail security tile\": \"Über GMAIL Sicherheit\"\n      \"gmail security body\": \"\"\"\n            GMAIL betrachtet Verbindungen die Benutzername und Passwort verwenden nicht als sicher.\n            Bitte klicken Sie auf den folgenden Link, Stellen Sie sicher das\n            Sie sich mit Ihrem Konto %{login} angemelden und geben Sie Apps mit geringerer Sicherheit frei.\n      \"\"\"\n      \"gmail security link\": \"Freigabe für Apps mit geringerer Sicherheit.\"\n\n      # Plugins\n      'plugin name Gallery'            : 'Anhang Gallerie'\n      'plugin name medium-editor'      : 'Medium Editor'\n      'plugin name MiniSlate'          : 'MiniSlate Editor'\n      'plugin name Sample JS'          : 'Beispiel'\n      'plugin name Keyboard shortcuts' : 'Tastaturkombinationen'\n      'plugin name VCard'              : 'Kontact VCards'\n      'plugin modal close'             : 'Schließen'\n\n      # Misc\n      'calendar unknown format' : \"\"\"\n            Diese Nachricht enthält eine Einladung für ein Ereignis in einem derzeitig unbekannten Format.\n            \"\"\"\n\n      # Tooltips\n      \"tooltip reply\": \"Answer\"\n      \"tooltip reply all\": \"Answer to all\"\n      \"tooltip forward\": \"Forward\"\n      \"tooltip remove message\": \"Remove\"\n      \"tooltip open attachments\": \"Open attachment list\"\n      \"tooltip open attachment\": \"Open attachment\"\n      \"tooltip download attachment\": \"Download the attachment\"\n      \"tooltip previous conversation\": \"Go to previous conversation\"\n      \"tooltip next conversation\": \"Go to next conversation\"\n      \"tooltip filter only unread\": \"Nur ungelesene Nachrichten anzeigen\"\n      \"tooltip filter only important\": \"Nur wichtige Nachrichten anzeigen\"\n      \"tooltip filter only attachment\": \"Nur Nachrichten mit Anhängen anzeigen\"\n      \"tooltip account parameters\": \"Account parameters\"\n      \"tooltip delete selection\": \"Delete all selected messages\"\n\n","module.exports =\n\n      # Application\n      \"app loading\"             : \"Loading…\"\n      \"app back\"                : \"Back\"\n      \"app cancel\"              : \"Cancel\"\n      \"app confirm\"             : \"Confirm\"\n      \"app menu\"                : \"Menu\"\n      \"app search\"              : \"Search…\"\n      \"app alert close\"         : \"Close\"\n      \"app unimplemented\"       : \"Not implemented yet\"\n      \"app error\"               : \"Argh, I'm unable to perform this action,\n                                    please try again\"\n      \"app confirm delete\"      : \"Confirm delete\"\n\n      # Compose window\n      \"compose\"                   : \"Compose new email\"\n      \"compose default\"           : 'Hello, how are you doing today?'\n      \"compose from\"              : \"From\"\n      \"compose to\"                : \"To\"\n      \"compose to help\"           : \"Recipients list\"\n      \"compose cc\"                : \"Cc\"\n      \"compose cc help\"           : \"Copy list\"\n      \"compose bcc\"               : \"Bcc\"\n      \"compose bcc help\"          : \"Hidden copy list\"\n      \"compose subject\"           : \"Subject\"\n      \"compose content\"           : \"Content\"\n      \"compose subject help\"      : \"Subject\"\n      \"compose reply prefix\"      : \"Re: \"\n      \"compose reply separator\"   : \"\\n\\nOn %{date}, %{sender} wrote \\n\"\n      \"compose forward prefix\"    : \"Fwd: \"\n      \"compose forward separator\" : \"\\n\\nOn %{date}, %{sender} wrote \\n\"\n      \"compose action draft\"      : \"Save draft\"\n      \"compose action send\"       : \"Send\"\n      \"compose action delete\"     : \"Delete draft\"\n      \"compose action sending\"    : \"Sending\"\n      \"compose toggle cc\"         : \"Cc\"\n      \"compose toggle bcc\"        : \"Bcc\"\n      \"compose error no dest\"     : \"You can not send a message to nobody\"\n      \"compose error no subject\"  : \"Please set a subject\"\n      \"compose confirm keep draft\": \"Message not sent, keep the draft?\"\n      \"compose confirm draft keep\"  : \"Keep draft\"\n      \"compose confirm draft delete\": \"Delete draft\"\n      \"compose wrong email format\": \"The given email is unproperly formatted: %{address}.\"\n      \"compose forward header\"    : \"Forwarded message\"\n      \"compose forward subject\"   : \"Subject:\"\n      \"compose forward date\"      : \"Date:\"\n      \"compose forward from\"      : \"From:\"\n      \"compose forward to\"        : \"To:\"\n\n      # Menu\n      \"menu show\"               : \"Show menu\"\n      \"menu compose\"            : \"Write\"\n      \"menu account new\"        : \"New Mailbox\"\n      \"menu settings\"           : \"Parameters\"\n      \"menu mailbox total\"      : \"%{smart_count} message|||| %{smart_count} messages\"\n      \"menu mailbox unread\"     : \", %{smart_count} unread message ||||, %{smart_count} unread messages \"\n      \"menu mailbox new\"        : \" and %{smart_count} new message|||| and %{smart_count} new messages \"\n      \"menu favorites on\"       : \"Favorites\"\n      \"menu favorites off\"      : \"All\"\n      \"menu toggle\"             : \"Toggle Menu\"\n\n      \"menu refresh label\"      : \"Refresh\"\n      \"menu refreshing\"         : \"Refreshing...\"\n\n      # List\n      \"list empty\"              : \"No email in this box.\"\n      \"no flagged message\"      : \"No Important email in this box.\"\n      \"no unseen message\"       : \"All emails have been read in this box\"\n      \"no attach message\"       : \"No message with attachments\"\n      \"no filter message\"       : \"No email for this filter.\"\n      \"list fetching\"           : \"Loading…\"\n      \"list search empty\"       : \"No result found for the query \\\"%{query}\\\".\"\n      \"list count\"              : \"%{smart_count} message in this\n                                  box |||| %{smart_count} messages in this box\"\n      \"list search count\"       : \"%{smart_count} result found. ||||\n                                    %{smart_count} results found.\"\n      \"list filter\"               : \"Filter\"\n      \"list filter all\"           : \"All\"\n      \"list filter unseen\"        : \"Unseen\"\n      \"list filter flagged\"       : \"Important\"\n      \"list filter attach\"        : \"Attachments\"\n      \"list filter from\"          : \"Sender is\"\n      \"list filter date\"          : \"Date in\"\n      \"list filter date placeholder\": \"DD/MM/YYYY\"\n      \"list filter dest\"          : \"Recipient is\"\n      \"list filter subject\"       : \"Subject starts with…\"\n      \"list sort\"                 : \"Sort\"\n      \"list sort date\"            : \"Date\"\n      \"list sort subject\"         : \"Subject\"\n      \"list option compact\"       : \"Compact\"\n      \"list next page\"            : \"More messages\"\n      \"list end\"                  : \"This is the end of the road\"\n      \"list mass no message\"      : \"No message selected\"\n      \"list delete confirm\"       : \"\"\"\n                                    Do you really want to delete this message ? ||||\n                                    Do you really want to delete %{smart_count} messages?\n                                    \"\"\"\n      \"list delete conv confirm\"  : \"\"\"\n                                    Do you really want to delete this conversation ? ||||\n                                    Do you really want to delete %{smart_count} conversation?\n                                    \"\"\"\n\n      # Mail\n      \"mail to\"                 : \"To: \"\n      \"mail cc\"                 : \"Cc: \"\n      \"headers from\"            : \"From\"\n      \"headers to\"              : \"To\"\n      \"headers cc\"              : \"Cc\"\n      \"headers reply-to\"        : \"Reply to\"\n      \"headers date\"            : \"Date\"\n      \"headers subject\"         : \"Subject\"\n      \"load more messages\"      : \"Load %{smart_count} more message |||| load %{smart_count} more messages\"\n      \"length bytes\"            : \"bytes\"\n      \"length kbytes\"           : \"Kb\"\n      \"length mbytes\"           : \"Mb\"\n      \"mail action reply\"       : \"Reply\"\n      \"mail action reply all\"   : \"Reply all\"\n      \"mail action forward\"     : \"Forward\"\n      \"mail action delete\"      : \"Delete\"\n      \"mail action mark\"        : \"Mark as\"\n      \"mail action copy\"        : \"Copy\"\n      \"mail action move\"        : \"Move\"\n      \"mail action more\"        : \"More\"\n      \"mail action headers\"     : \"Headers\"\n      \"mail action raw\"         : \"Raw message\"\n      \"mail mark spam\"          : \"Spam\"\n      \"mail mark nospam\"        : \"No spam\"\n      \"mail mark fav\"           : \"Important\"\n      \"mail mark nofav\"         : \"Not important\"\n      \"mail mark read\"          : \"Read\"\n      \"mail mark unread\"        : \"Unread\"\n      \"mail confirm delete title\"       : \"Delete message\"\n      \"mail confirm delete\"             : \"Do you really want to delete message “%{subject}”?\"\n      \"mail confirm delete nosubject\"   : \"Do you really want to delete this message?\"\n      \"mail confirm delete cancel\"      : \"Cancel\"\n      \"mail confirm delete delete\"      : \"Delete\"\n      \"mail action conversation delete\" : \"Delete conversation\"\n      \"mail action conversation move\"   : \"Move conversation\"\n      \"mail action conversation seen\"   : \"Mark conversation as read\"\n      \"mail action conversation unseen\" : \"Mark conversation as unread\"\n      \"mail action conversation flagged\": \"Mark conversation as important\"\n      \"mail action conversation noflag\" : \"Mark conversation as normal\"\n      \"mail conversation length\": \"\"\"\n            %{smart_count} message dans cette conversation. ||||\n            %{smart_count} messages dans cette conversation.\n      \"\"\"\n\n      # Account\n      \"account new\"                 : \"New account\"\n      \"account edit\"                : \"Edit account\"\n      \"account add\"                 : \"Add\"\n      \"account save\"                : \"Save\"\n      \"account saving\"              : \"Saving\"\n      \"account check\"               : \"Check connection\"\n      \"account accountType short\"   : \"IMAP\"\n      \"account accountType\"         : \"Account type\"\n      \"account imapPort short\"      : \"993\"\n      \"account imapPort\"            : \"Port\"\n      \"account imapSSL\"             : \"Use SSL\"\n      \"account imapServer short\"    : \"imap.provider.tld\"\n      \"account imapServer\"          : \"IMAP server\"\n      \"account imapTLS\"             : \"Use TLS\"\n      \"account imapLogin short\"     : \"IMAP user\"\n      \"account imapLogin\"           : \"IMAP user (if different from email address)\"\n      \"account label short\"         : \"A short mailbox name\"\n      \"account label\"               : \"Account label\"\n      \"account login short\" : \"Your email address\"\n      \"account login\"               : \"Email address\"\n      \"account name short\"          : \"Your name, as it will be displayed\"\n      \"account name\"                : \"Your name\"\n      \"account oauth\"               : \"This accoutn uses Google OAuth\"\n      \"account password\"            : \"Password\"\n      \"account receiving server\"    : \"Receiving server\"\n      \"account sending server\"      : \"Sending server\"\n      \"account smtpLogin short\"     : \"SMTP user\"\n      \"account smtpLogin\"           : \"SMTP user (if different from email address)\"\n      \"account smtpMethod\"          : \"Authentification method\"\n      \"account smtpMethod NONE\"     : \"None\"\n      \"account smtpMethod PLAIN\"    : \"Plain\"\n      \"account smtpMethod LOGIN\"    : \"Login\"\n      \"account smtpMethod CRAM-MD5\" : \"Cram-MD5\"\n      \"account smtpPassword short\"  : \"SMTP password\"\n      \"account smtpPassword\"        : \"SMTP password (if different from IMAP password)\"\n      \"account smtpPort short\"      : \"465\"\n      \"account smtpPort\"            : \"Port\"\n      \"account smtpSSL\"             : \"Use SSL\"\n      \"account smtpServer short\"    : \"smtp.provider.tld\"\n      \"account smtpServer\"          : \"SMTP server\"\n      \"account smtpTLS\"             : \"Use STARTTLS\"\n      \"account remove\"              : \"Remove this account\"\n      \"account removed\"             : \"Account removed\"\n      \"account remove confirm\"      : \"Do you really want to remove account “%{label}” ?\"\n      \"account draft mailbox\"       : \"Draft box\"\n      \"account sent mailbox\"        : \"Sent box\"\n      \"account trash mailbox\"       : \"Trash\"\n      \"account mailboxes\"           : \"Folders\"\n      \"account special mailboxes\"   : \"Special mailboxes\"\n      \"account newmailbox label\"    : \"New Folder\"\n      \"account newmailbox placeholder\" : \"Name\"\n      \"account newmailbox parent\"   : \"Parent:\"\n      \"account confirm delbox\"      : \"Do you really want to delete all\n                                        messages in this box?\"\n      \"account tab account\"         : \"Account\"\n      \"account tab mailboxes\"       : \"Folders\"\n      \"account errors\"              : \"Some data are missing or invalid\"\n      \"account type\"                : \"Account type\"\n      \"account updated\"             : \"Account updated\"\n      \"account checked\"             : \"Parameters ok\"\n      \"account creation ok\"         : \"Yeah! The account has been successfully\n        created. Now select the mailboxes you want to see in the menu\"\n      \"account refreshed\"           : \"Account refreshed\"\n      \"account refresh error\"       : \"Error refreshing accounts, check parameters\"\n      \"account identifiers\"         : \"Identification\"\n      \"account actions\"             : \"Actions\"\n      \"account danger zone\"         : \"Danger Zone\"\n      \"account no special mailboxes\": \"Please configure special folders first\"\n      \"account imap hide advanced\"  : \"Hide advanced parameters\"\n      \"account imap show advanced\"  : \"Show advanced parameters\"\n      \"account smtp hide advanced\"  : \"Hide advanced parameters\"\n      \"account smtp show advanced\"  : \"Show advanced parameters\"\n      \"account tab signature\"       : \"Signature\"\n      \"account signature short\"     : \"Type here the text that will be added to the bottom of all your emails.\"\n      \"account signature\"           : \"Email Signature\"\n      \"account signature save\"      : \"Save\"\n      \"mailbox create ok\"           : \"Folder created\"\n      \"mailbox create ko\"           : \"Error creating folder\"\n      \"mailbox update ok\"           : \"Folder updated\"\n      \"mailbox update ko\"           : \"Error updating folder\"\n      \"mailbox delete ok\"           : \"Folder deleted\"\n      \"mailbox delete ko\"           : \"Error deleting folder\"\n      \"mailbox expunge ok\"          : \"Folder expunged\"\n      \"mailbox expunge ko\"          : \"Error expunging folder\"\n      \"mailbox title edit\"          : \"Rename folder\"\n      \"mailbox title delete\"        : \"Delete folder\"\n      \"mailbox title edit save\"     : \"Save\"\n      \"mailbox title edit cancel\"   : \"Cancel\"\n      \"mailbox title add\"           : \"Add new folder\"\n      \"mailbox title add cancel\"    : \"Cancel\"\n      \"mailbox title favorite\"      : \"Folder is displayed\"\n      \"mailbox title not favorite\"  : \"Folder not displayed\"\n      \"mailbox title total\"         : \"Total\"\n      \"mailbox title unread\"        : \"Unread\"\n      \"mailbox title new\"           : \"New\"\n      \"config error auth\"           : \"Wrong connection parameters\"\n      \"config error imapPort\"       : \"Wrong IMAP parameters\"\n      \"config error imapServer\"     : \"Wrong IMAP server\"\n      \"config error imapTLS\"        : \"Wrong IMAP TLS\"\n      \"config error smtpPort\"       : \"Wrong SMTP Port\"\n      \"config error smtpServer\"     : \"Wrong SMTP Server\"\n      \"config error nomailboxes\"    : \"No folder in this account, please create one\"\n\n      # Message Action\n      \"action undo\"                 : \"Undo\"\n      \"action undo ok\"              : \"Action cancelled\"\n      \"action undo ko\"              : \"Unable to undo action\"\n      \"message action sent ok\"      : \"Message sent\"\n      \"message action sent ko\"      : \"Error sending message: \"\n      \"message action draft ok\"     : \"Message saved\"\n      \"message action draft ko\"     : \"Error saving message: \"\n      \"message delete ok\"           : \"Message “%{subject}” deleted\"\n      \"message delete ko\"           : \"Error deleting message: \"\n      \"message move ok\"             : \"Message “%{subject}” moved\"\n      \"message move ko\"             : \"Error moving message “%{subject}”: \"\n      \"message mark ok\"             : \"Message marked\"\n      \"message mark ko\"             : \"Error marking message: \"\n      \"draft delete ok\"             : \"Draft “%{subject}” deleted\"\n      \"draft delete ko\"             : \"Error deleting draft: \"\n      \"draft move ok\"               : \"Draft “%{subject}” moved\"\n      \"draft move ko\"               : \"Error moving draft “%{subject}”: \"\n      \"draft mark ok\"               : \"Draft marked\"\n      \"draft mark ko\"               : \"Error marking message: \"\n      \"conversation move ok\"        : \"Conversation “%{subject}” moved\"\n      \"conversation move ko\"        : \"Error moving conversation “%{subject}”\"\n      \"conversation delete ok\"      : \"Conversation “%{subject}” deleted\"\n      \"conversation delete ko\"      : \"Error deleting conversation\"\n      \"conversation seen ok\"        : \"Conversation marked as read\"\n      \"conversation seen ko\"        : \"Error\"\n      \"conversation unseen ok\"      : \"Conversation marked as unread\"\n      \"conversation unseen ko\"      : \"Error\"\n      \"undo last action\"            : \"Undo last action\"\n      \"conversation flagged ko\"     : \"Error\"\n      \"conversation noflag ko\"      : \"Error\"\n      \"conversations move ok\"        : \"\"\"\n            %{smart_count} conversation moved||||\n            %{smart_count} conversations moved\"\"\"\n      \"conversations move ko\"        : \"\"\"\n            Error moving %{smart_count} conversation||||\n            Error moving %{smart_count} conversations\"\"\"\n      \"conversations delete ok\"      : \"\"\"\n            %{smart_count} conversation deleted||||\n            %{smart_count} conversations deleted\n      \"\"\"\n      \"conversations delete ko\"      : \"\"\"\n            Error deleting %{smart_count} conversation ||||\n            Error deleting %{smart_count} conversations\n      \"\"\"\n      \"conversations seen ok\"        : \"\"\"\n            %{smart_count} conversation moved||||\n            %{smart_count} conversations moved\n      \"\"\"\n      \"conversations seen ko\"        : \"\"\"\n            Error marking %{smart_count} as read||||\n            Error marking %{smart_count} as read\n      \"\"\"\n      \"conversations unseen ok\"      : \"\"\"\n            %{smart_count} conversation marked as unread||||\n            %{smart_count} conversations marked as unread\n      \"\"\"\n      \"conversations unseen ko\"      : \"\"\"\n            Error marking %{smart_count} conversations as unread||||\n            Error marking %{smart_count} conversations as unread\n      \"\"\"\n      \"conversations flagged ko\"     : \"\"\"\n            Error marking %{smart_count} conversation as flagged||||\n            Error marking %{smart_count} conversations as flagged\n      \"\"\"\n      \"conversations noflag ko\"      : \"\"\"\n            %{smart_count} conversation unflagged||||\n            %{smart_count} conversations unflagged\n      \"\"\"\n      \"message images warning\"      : \"Display of images inside message has\n                                        been blocked\"\n      \"message images display\"      : \"Display images\"\n      \"message html display\"        : \"Display HTML\"\n      \"message delete no trash\"     : \"Please select a Trash folder\"\n      \"message delete already\"      : \"Message already in trash folder\"\n      \"message move already\"        : \"Message already in this folder\"\n      \"undo ok\"         : \"Undone\"\n      \"undo ko\"         : \"Error undoing some action\"\n      \"undo unavailable\": \"Undo not available\"\n      \"message preview title\"       : \"View attachments\"\n\n      # Settings\n      \"settings title\"             : \"Settings\"\n      \"settings button save\"       : \"Save\"\n      #\"settings label mpp\"         : \"Messages per page\"\n      \"settings plugins\"           : \"Add ons\"\n      \"settings plugins\"           : \"Modules complémentaires\"\n      \"settings plugin add\"        : \"Add\"\n      \"settings plugin del\"        : \"Delete\"\n      \"settings plugin help\"       : \"Help\"\n      \"settings plugin new name\"   : \"Plugin Name\"\n      \"settings plugin new url\"    : \"Plugin URL\"\n      # SETTINGS\n      \"settings label autosaveDraft\"        : \"Save draft message while composing\"\n      \"settings label composeInHTML\"        : \"Rich message editor\"\n      \"settings label composeOnTop\"         : \"Reply on top of message\"\n      \"settings label desktopNotifications\" : \"Notifications\"\n      \"settings label displayConversation\"  : \"Display conversations\"\n      \"settings label displayPreview\"       : \"Display message preview\"\n      \"settings label messageDisplayHTML\"   : \"Display message in HTML\"\n      \"settings label messageDisplayImages\" : \"Display images inside messages\"\n      \"settings label messageConfirmDelete\" : \"Confirm before deleting a message\"\n      \"settings label layoutStyle\"            : \"Display Layout\"\n      \"settings label layoutStyle horizontal\" : \"Horizontal\"\n      \"settings label layoutStyle vertical\"   : \"Vertical\"\n      \"settings label layoutStyle three\"      : \"Three cols\"\n      \"settings label listStyle\"            : \"Message list style\"\n      \"settings label listStyle default\"    : \"Normal\"\n      \"settings label listStyle compact\"    : \"Compact\"\n      \"settings lang\"             : \"Language\"\n      \"settings lang en\"          : \"English\"\n      \"settings lang fr\"          : \"Français\"\n      \"settings lang de\"          : \"Deutsch\"\n      \"settings save error\"       : \"Unable to save settings, please try again\"\n\n      # File picker\n      \"picker drop here\"           : \"Drop files here or Choose local files\"\n\n      # Mailbox List\n      \"mailbox pick one\"           : \"Pick one\"\n      \"mailbox pick null\"          : \"No box for this\"\n\n      # Tasks\n      \"task account-fetch\"         : 'Refreshing %{account}'\n      \"task box-fetch\"             : 'Refreshing %{box}'\n      \"task apply-diff-fetch\"      : 'Fetching mails from %{box} of %{account}'\n      \"task apply-diff-remove\"     : 'Deleting mails from %{box} of %{account}'\n      \"task recover-uidvalidity\"   : 'Analysing'\n      \"there were errors\"          : '%{smart_count} error. |||| %{smart_count}\n                                        errors.'\n      \"modal please report\"        : \"Please transmit this information to cozy.\"\n      \"modal please contribute\"    : \"Please contribute\"\n      \"modal copy content\"         : \"Copy information into clipboard\"\n\n      # Validation\n      \"validate must not be empty\" : \"This field is required\"\n\n      # Toast\n      \"toast hide\"      : \"Hide alerts\"\n      \"toast show\"      : \"Display alerts\"\n      \"toast close all\" : \"Close all alerts\"\n\n      # Notifications\n      \"notif new title\": 'CozyEmail'\n      \"notif new\": \"\"\"\n        %{smart_count} message not read in account %{account}||||\n        %{smart_count} messages not read in account %{account}\n      \"\"\"\n      \"notif complete\": \"\n            Importation of account %{account} complete.\n      \"\n\n      # Contacts\n      \"contact form\"             : \"Select contacts\"\n      \"contact form placeholder\" : \"contact name\"\n      \"contact button label\"     : \"Add to addressbook\"\n      \"contact create success\"   : \"%{contact} has been added to your contacts\"\n      \"contact create error\"     : \"Error adding to your contacts : {error}\"\n      \"message contact creation title\": \"Add a contact\"\n      \"message contact creation\"      : \"Do you want to create a contact for %{contact}?\"\n\n      # GMail security\n      \"gmail security tile\": \"About Gmail security\"\n      \"gmail security body\": \"\"\"\n            Gmail considers connection using username and password not safe.\n            Please click on the following link, make sure\n            you are connected with your %{login} account and enable access for\n            less secure apps.\n      \"\"\"\n      \"gmail security link\": \"Enable access for less secure apps.\"\n\n      # Plugins\n      'plugin name Gallery'            : 'Attachment gallery'\n      'plugin name medium-editor'      : 'Medium editor'\n      'plugin name MiniSlate'          : 'MiniSlate editor'\n      'plugin name Sample JS'          : 'Sample'\n      'plugin name Keyboard shortcuts' : 'Keyboard shortcuts'\n      'plugin name VCard'              : 'Contacts VCards'\n      'plugin modal close'             : 'Close'\n\n      # Misc\n      'calendar unknown format' : \"\"\"\n            This message contains an invite to an event in a currently unknown format.\n            \"\"\"\n\n      # Tooltips\n      \"tooltip reply\": \"Answer\"\n      \"tooltip reply all\": \"Answer to all\"\n      \"tooltip forward\": \"Forward\"\n      \"tooltip remove message\": \"Remove\"\n      \"tooltip open attachments\": \"Open attachment list\"\n      \"tooltip open attachment\": \"Open attachment\"\n      \"tooltip download attachment\": \"Download the attachment\"\n      \"tooltip previous conversation\": \"Go to previous conversation\"\n      \"tooltip next conversation\": \"Go to next conversation\"\n      \"tooltip filter only unread\": \"Show only unread messages\"\n      \"tooltip filter only important\": \"Show only important messages\"\n      \"tooltip filter only attachment\": \"Show only messages with attachment\"\n      \"tooltip account parameters\": \"Account parameters\"\n      \"tooltip delete selection\": \"Delete all selected messages\"\n      'tooltip filter': 'Filter'\n      'tooltip display filters': 'Display filters'\n      'tooltip expunge mailbox': 'Expunge mailbox'\n\n      # Filters\n      'filters unseen': 'unread'\n      'filters flagged': 'stared'\n      'filters attach': 'attachments'\n      'filters search placeholder': 'Search...'\n      'daterangepicker placeholder': 'by date'\n      'daterangepicker presets yesterday': 'yesterday'\n      'daterangepicker presets last week': 'last week'\n      'daterangepicker presets last month': 'last month'\n      'daterangepicker clear': 'clear'\n","module.exports =\n\n      # Application\n      \"app loading\"             : \"Chargement…\"\n      \"app back\"                : \"Retour\"\n      \"app cancel\"              : \"Annuler\"\n      \"app confirm\"             : \"Oui\"\n      \"app menu\"                : \"Menu\"\n      \"app search\"              : \"Rechercher…\"\n      \"app alert close\"         : \"Fermer\"\n      \"app unimplemented\"       : \"Non implémenté\"\n      \"app error\"               : \"Oups, une erreur est survenue,\n                                    veuillez réessayer\"\n      \"app confirm delete\"      : \"Confirmation de suppression\"\n\n      # Compose window\n      \"compose\"                   : \"Écrire un nouveau message\"\n      \"compose default\"           : \"Bonjour, comment ça va ?\"\n      \"compose from\"              : \"De\"\n      \"compose to\"                : \"À\"\n      \"compose to help\"           : \"Liste des destinataires principaux\"\n      \"compose cc\"                : \"Cc\"\n      \"compose cc help\"           : \"Liste des destinataires en copie\"\n      \"compose bcc\"               : \"Cci\"\n      \"compose bcc help\"          : \"Liste des destinataires en copie cachée\"\n      \"compose subject\"           : \"Objet\"\n      \"compose content\"           : \"Contenu\"\n      \"compose subject help\"      : \"Objet du message\"\n      \"compose reply prefix\"      : \"Re: \"\n      \"compose reply separator\"   : \"\\n\\nLe %{date}, %{sender} a écrit \\n\"\n      \"compose forward prefix\"    : \"Fwd: \"\n      \"compose forward separator\" : \"\\n\\nLe %{date}, %{sender} a écrit \\n\"\n      \"compose action draft\"      : \"Enregistrer\"\n      \"compose action send\"       : \"Envoyer\"\n      \"compose action sending\"    : \"Envoi…\"\n      \"compose action delete\"     : \"Supprimer\"\n      \"compose toggle cc\"         : \"Copie à\"\n      \"compose toggle bcc\"        : \"Copie cachée à\"\n      \"compose error no dest\"     : \"Vous n'avez pas saisi de destinataires\"\n      \"compose error no subject\"  : \"Vous n'avez pas saisi de sujet\"\n      \"compose confirm keep draft\": \"Vous n'avez pas envoyé le message, voulez-vous conserver le brouillon ?\"\n      \"compose confirm draft keep\"  : \"Conserver le brouillon\"\n      \"compose confirm draft delete\": \"Supprimer le brouillon\"\n      \"compose wrong email format\": \"L'addresse mail donnée n'est pas bien formattée : %{address}.\"\n      \"compose forward header\"    : \"Message transféré\"\n      \"compose forward subject\"   : \"Sujet :\"\n      \"compose forward date\"      : \"Date :\"\n      \"compose forward from\"      : \"De :\"\n      \"compose forward to\"        : \"Pour :\"\n\n      # Menu\n      \"menu show\"               : \"Montrer le menu\"\n      \"menu compose\"            : \"Écrire\"\n      \"menu account new\"        : \"Ajouter un compte\"\n      \"menu settings\"           : \"Paramètres\"\n      \"menu mailbox total\"      : \"%{smart_count} message |||| %{smart_count} messages \"\n      \"menu mailbox unread\"     : \" dont %{smart_count} non lu |||| dont %{smart_count} non lus \"\n      \"menu mailbox new\"        : \" et %{smart_count} nouveaux |||| et %{smart_count} nouveaux \"\n      \"menu favorites on\"       : \"Favoris\"\n      \"menu favorites off\"      : \"Toutes\"\n      \"menu toggle\"             : \"Menu\"\n\n      \"menu refresh label\"      : \"Rafraîchir\"\n      \"menu refreshing\"         : \"Rafraîchissement en cours...\"\n\n\n      # List\n      \"list empty\"              : \"Pas d'email dans cette boîte..\"\n      \"no flagged message\"      : \"Pas d'email important dans cette boîte.\"\n      \"no unseen message\"       : \"Pas d'email non-lu dans cette boîte.\"\n      \"no attach message\"       : \"Pas d'email avec des pièces jointes.\"\n      \"no filter message\"       : \"Pas d'email pour ce filtre.\"\n      \"list fetching\"           : \"Chargement…\"\n      \"list search empty\"       : \"Aucun résultat trouvé pour la requête\n                                    \\\"%{query}\\\".\"\n      \"list count\"              : \"%{smart_count} message dans cette boite ||||\n                                    %{smart_count} messages dans cette boite\"\n      \"list search count\"       : \"%{smart_count} résultat trouvé. ||||\n                                    %{smart_count} résultats trouvés.\"\n      \"list filter\"               : \"Filtrer\"\n      \"list filter all\"           : \"Tous\"\n      \"list filter unseen\"        : \"Non lus\"\n      \"list filter flagged\"       : \"Importants\"\n      \"list filter attach\"        : \"Pièces jointes\"\n      \"list filter from\"          : \"Expédié par\"\n      \"list filter date\"          : \"Date entre\"\n      \"list filter date placeholder\": \"JJ/MM/AAAA\"\n      \"list filter dest\"          : \"Destiné à\"\n      \"list filter subject\"       : \"Sujet commence par…\"\n      \"list sort\"                 : \"Trier\"\n      \"list sort date\"            : \"Date\"\n      \"list sort subject\"         : \"Sujet\"\n      \"list option compact\"       : \"Compact\"\n      \"list next page\"            : \"Davantage de messages\"\n      \"list end\"                  : \"FIN\"\n      \"list mass no message\"      : \"Aucun message sélectionné\"\n      \"list delete confirm\"       : \"\"\"\n                                    Voulez-vous vraiment supprimer ce message ?||||\n                                    Voulez-vous vraiment supprimer %{smart_count} messages ?\n                                    \"\"\"\n      \"list delete conv confirm\"  : \"\"\"\n                                    Voulez-vous vraiment supprimer cette conversation ?||||\n                                    Voulez-vous vraiment supprimer %{smart_count} conversations ?\n                                    \"\"\"\n\n      # Mail\n      \"mail to\"                 : \"À \"\n      \"mail cc\"                 : \"Copie \"\n      \"headers from\"            : \"De\"\n      \"headers to\"              : \"À\"\n      \"headers cc\"              : \"Copie\"\n      \"headers reply-to\"        : \"Répondre à\"\n      \"headers date\"            : \"Date\"\n      \"headers subject\"         : \"Objet\"\n      \"load more messages\"      : \"afficher %{smart_count} message supplémentaire |||| afficher %{smart_count} messages supplémentaires\"\n      \"length bytes\"            : \"octets\"\n      \"length kbytes\"           : \"ko\"\n      \"length mbytes\"           : \"Mo\"\n      \"mail action reply\"       : \"Répondre\"\n      \"mail action reply all\"   : \"Répondre à tous\"\n      \"mail action forward\"     : \"Transférer\"\n      \"mail action delete\"      : \"Supprimer\"\n      \"mail action mark\"        : \"Marquer comme\"\n      \"mail action copy\"        : \"Copier\"\n      \"mail action move\"        : \"Déplacer\"\n      \"mail action more\"        : \"Plus\"\n      \"mail action headers\"     : \"Entêtes\"\n      \"mail action raw\"         : \"Message brut\"\n      \"mail mark spam\"          : \"Pourriel\"\n      \"mail mark nospam\"        : \"Légitime\"\n      \"mail mark fav\"           : \"Important\"\n      \"mail mark nofav\"         : \"Normal\"\n      \"mail mark read\"          : \"Lu\"\n      \"mail mark unread\"        : \"Non lu\"\n      \"mail confirm delete title\"       : \"Supprimer le message\"\n      \"mail confirm delete\"             : \"Voulez-vous vraiment supprimer le message\n                                         « %{subject} » ?\"\n      \"mail confirm delete nosubject\"   : \"Voulez-vous vraiment supprimer ce message\"\n      \"mail confirm delete cancel\"      : \"Annuler\"\n      \"mail confirm delete delete\"      : \"Supprimer\"\n      \"mail action conversation delete\" : \"Supprimer la conversation\"\n      \"mail action conversation move\"   : \"Déplacer la conversation\"\n      \"mail action conversation seen\"   : \"Marquer la conversation comme lue\"\n      \"mail action conversation unseen\" : \"Marquer la conversation comme\n                                            non lue\"\n      \"mail action conversation flagged\": \"Marquer la conversation comme importante\"\n      \"mail action conversation noflag\" : \"Marquer la conversation comme normale\"\n      \"mail conversation length\": \"\"\"\n            %{smart_count} message dans cette conversation. ||||\n            %{smart_count} messages dans cette conversation.\n      \"\"\"\n\n      # Account\n      \"account new\"                 : \"Nouveau compte\"\n      \"account edit\"                : \"Modifier le compte\"\n      \"account add\"                 : \"Créer\"\n      \"account save\"                : \"Enregistrer\"\n      \"account saving\"              : \"En cours…\"\n      \"account check\"               : \"Tester la connexion\"\n      \"account accountType short\"   : \"IMAP\"\n      \"account accountType\"         : \"Type de compte\"\n      \"account imapPort short\"      : \"993\"\n      \"account imapPort\"            : \"Port\"\n      \"account imapSSL\"             : \"Utiliser SSL\"\n      \"account imapServer short\"    : \"imap.fournisseur.tld\"\n      \"account imapServer\"          : \"Serveur IMAP\"\n      \"account imapTLS\"             : \"Utiliser STARTTLS\"\n      \"account imapLogin short\"     : \"Utilisateur IMAP\"\n      \"account imapLogin\"           : \"Utilisateur IMAP (s'il est différent de l'adresse mail)\"\n      \"account label short\"         : \"Nom abrégé\"\n      \"account label\"               : \"Nom du compte\"\n      \"account login short\"         : \"Votre adresse électronique\"\n      \"account login\"               : \"Adresse\"\n      \"account name short\"          : \"Votre nom, tel qu'il sera affiché\"\n      \"account name\"                : \"Votre nom\"\n      \"account oauth\"               : \"Ce compte est lié à un compte Google via OAuth\"\n      \"account password\"            : \"Mot de passe\"\n      \"account receiving server\"    : \"Serveur de réception\"\n      \"account sending server\"      : \"Serveur d'envoi\"\n      \"account smtpLogin short\"     : \"Utilisateur SMTP\"\n      \"account smtpLogin\"           : \"Utilisateur SMTP (s'il est différent de l'adresse Mail)\"\n      \"account smtpMethod\"          : \"Méthode d'authentification\"\n      \"account smtpMethod NONE\"     : \"Aucune\"\n      \"account smtpMethod PLAIN\"    : \"Simple\"\n      \"account smtpMethod LOGIN\"    : \"Login\"\n      \"account smtpMethod CRAM-MD5\" : \"Cram-MD5\"\n      \"account smtpPassword short\"  : \"Mot de passe SMTP\"\n      \"account smtpPassword\"        : \"Mot de passe SMTP (s'il est différent de celui du serveur IMAP)\"\n      \"account smtpPort short\"      : \"465\"\n      \"account smtpPort\"            : \"Port\"\n      \"account smtpSSL\"             : \"Utiliser SSL\"\n      \"account smtpServer short\"    : \"smtp.fournisseur.tld\"\n      \"account smtpServer\"          : \"Serveur sortant\"\n      \"account smtpTLS\"             : \"Utiliser STARTTLS\"\n      \"account remove\"              : \"Supprimer ce compte\"\n      \"account removed\"             : \"Compte supprimé\"\n      \"account remove confirm\"      : \"Voulez-vous vraiment supprimer le compte « %{label} » ?\"\n      \"account draft mailbox\"       : \"Enregistrer les brouillons dans\"\n      \"account sent mailbox\"        : \"Enregistrer les messages envoyés dans\"\n      \"account trash mailbox\"       : \"Corbeille\"\n      \"account mailboxes\"           : \"Dossiers\"\n      \"account special mailboxes\"   : \"Dossiers spéciaux\"\n      \"account newmailbox label\"    : \"Nouveaux dossier\"\n      \"account newmailbox placeholder\" : \"Nom\"\n      \"account newmailbox parent\"   : \"Créer sous\"\n      \"account confirm delbox\"      : \"Voulez-vous vraiment supprimer\n                                        tous les messages de la corbeille ?\"\n      \"account tab account\"         : \"Compte\"\n      \"account tab mailboxes\"       : \"Dossiers\"\n      \"account errors\"              : \"Certaines informations manquent ou\n                                        sont incorrectes\"\n      \"account type\"                : \"Type de compte\"\n      \"account updated\"             : \"Modification enregistrée\"\n      \"account checked\"             : \"Paramètres corrects\"\n      \"account refreshed\"           : \"Actualisé\"\n      \"account refresh error\"       : \"Une erreur est survenue, vérifiez les paramètres de connexion aux comptes\"\n      \"account creation ok\"         : \"Youpi, le compte a été créé !\n        Sélectionnez à présent les dossiers que vous voulez voir\n        apparaitre dans le menu\"\n      \"account identifiers\"         : \"Identification\"\n      \"account danger zone\"         : \"Zone dangereuse\"\n      \"account actions\"             : \"Actions\"\n      \"account no special mailboxes\": \"Vous n'avez pas configuré les dossiers spéciaux\"\n      \"account imap hide advanced\"  : \"Masquer les paramètres avancés\"\n      \"account imap show advanced\"  : \"Afficher les paramètres avancés\"\n      \"account smtp hide advanced\"  : \"Masquer les paramètres avancés\"\n      \"account smtp show advanced\"  : \"Afficher les paramètres avancés\"\n      \"account tab signature\"       : \"Signature\"\n      \"account signature short\"     : \"Saisissez ici le texte qui sera ajouté à la fin de vos courriers.\"\n      \"account signature\"           : \"Signature des courriers\"\n      \"account signature save\"      : \"Enregistrer\"\n      \"mailbox create ok\"           : \"Dossier créé\"\n      \"mailbox create ko\"           : \"Erreur de création du dossier\"\n      \"mailbox update ok\"           : \"Dossier mis à jour\"\n      \"mailbox update ko\"           : \"Erreur de mise à jour\"\n      \"mailbox delete ok\"           : \"Dossier supprimé\"\n      \"mailbox delete ko\"           : \"Erreur de suppression du dossier\"\n      \"mailbox expunge ok\"          : \"Corbeille vidée\"\n      \"mailbox expunge ko\"          : \"Erreur de suppression des messages\"\n      \"mailbox title edit\"          : \"Renommer le dossier\"\n      \"mailbox title delete\"        : \"Supprimer le dossier\"\n      \"mailbox title edit save\"     : \"Enregistrer\"\n      \"mailbox title edit cancel\"   : \"Annuler\"\n      \"mailbox title add\"           : \"Créer un dossier\"\n      \"mailbox title add cancel\"    : \"Annuler\"\n      \"mailbox title favorite\"      : \"Dossier affiché\"\n      \"mailbox title not favorite\"  : \"Dossier non affiché\"\n      \"mailbox title total\"         : \"Total\"\n      \"mailbox title unread\"        : \"Non lus\"\n      \"mailbox title new\"           : \"Nouveaux\"\n      \"config error auth\"           : \"Impossible de se connecter avec ces\n                                        paramètres\"\n      \"config error imapPort\"       : \"Paramètres du serveur IMAP invalides\"\n      \"config error imapServer\"     : \"Serveur IMAP invalide\"\n      \"config error imapTLS\"        : \"Erreur IMAP TLS\"\n      \"config error smtpPort\"       : \"Port du serveur d'envoi invalide\"\n      \"config error smtpServer\"     : \"Serveur d'envoi invalide\"\n      \"config error nomailboxes\"    : \"Ce compte n'a pas encore de dossier,\n                                        commencez par en créer\"\n\n      # Message Action\n      \"action undo\"                 : \"Annuler\"\n      \"action undo ok\"              : \"Action Annulée\"\n      \"action undo ko\"              : \"Impossible d'annuler l'action\"\n      \"message action sent ok\"      : \"Message envoyé !\"\n      \"message action sent ko\"      : \"Une erreur est survenue : \"\n      \"message action draft ok\"     : \"Message sauvegardé !\"\n      \"message action draft ko\"     : \"Une erreur est survenue : \"\n      \"message delete ok\"           : \"Message « %{subject} » supprimé\"\n      \"message delete ko\"           : \"Impossible de supprimer le message : \"\n      \"message move ok\"             : \"Message « %{subject} » déplacé\"\n      \"message move ko\"             : \"Le déplacement de « %{subject} » a échoué\"\n      \"message mark ok\"             : \"Le message a été mis à jour\"\n      \"message mark ko\"             : \"L'opération a échoué\"\n      \"draft delete ok\"             : \"Le brouillon « %{subject} » a été supprimé\"\n      \"draft delete ko\"             : \"Erreur lors de la suppression du brouillon « %{subject} » : \"\n      \"draft move ok\"               : \"Le brouillon a été « %{subject} » déplacé\"\n      \"draft move ko\"               : \"Erreur lors du déplacement du brouillon « %{subject} » : \"\n      \"draft mark ok\"               : \"Brouillon « %{subject} » mis à jour\"\n      \"draft mark ko\"               : \"Erreur de mise à jour du brouillon « %{subject} » : \"\n      \"conversation move ok\"        : \"Conversation « %{subject} » déplacée\"\n      \"conversation move ko\"        : \"Le déplacement de « %{subject} » a échoué\"\n      \"conversation delete ok\"      : \"Conversation « %{subject} » supprimée\"\n      \"conversation delete ko\"      : \"L'opération a échoué\"\n      \"conversation seen ok\"        : \"Ok\"\n      \"conversation seen ko\"        : \"L'opération a échoué\"\n      \"conversation unseen ok\"      : \"Ok\"\n      \"conversation unseen ko\"      : \"L'opération a échoué\"\n      \"undo last action\"            : \"Annuler\"\n      \"conversation flagged ko\"     : \"L'opération a échoué\"\n      \"conversation noflag ko\"      : \"L'opération a échoué\"\n      \"conversations move ok\"        : \"\"\"\n            %{smart_count} conversation déplacée||||\n            %{smart_count} conversations déplacées\"\"\"\n      \"conversations move ko\"        : \"\"\"\n            Erreur au déplacement de %{smart_count} conversation||||\n            Error au déplacement de %{smart_count} conversations\"\"\"\n      \"conversations delete ok\"      : \"\"\"\n            %{smart_count} conversation supprimée||||\n            %{smart_count} conversations supprimées\n      \"\"\"\n      \"conversations delete ko\"      : \"\"\"\n            Erreur de suppression de %{smart_count} conversation ||||\n            Erreur de suppression de %{smart_count} conversations\n      \"\"\"\n      \"conversations seen ok\"        : \"\"\"\n            %{smart_count} conversation marquée lue||||\n            %{smart_count} conversations marquées lues\n      \"\"\"\n      \"conversations seen ko\"        : \"\"\"\n            Erreur en marquant %{smart_count} conversation lue||||\n            Erreur en marquant %{smart_count} conversations lues\n      \"\"\"\n      \"conversations unseen ok\"      : \"\"\"\n            %{smart_count} conversation marquée non-lue||||\n            %{smart_count} conversations marquées non-lues\n      \"\"\"\n      \"conversations unseen ko\"      : \"\"\"\n            Erreur en marquant %{smart_count} conversation non-lue||||\n            Erreur en marquant %{smart_count} conversations non-lues\n      \"\"\"\n      \"conversations flagged ko\"     : \"\"\"\n            Erreur en marquant %{smart_count} conversation importante||||\n            Erreur en marquant %{smart_count} conversations importantes\n      \"\"\"\n      \"conversations noflag ko\"      : \"\"\"\n            Erreur en marquant %{smart_count} conversation non importante||||\n            Erreur en marquant %{smart_count} conversations non importantes\n      \"\"\"\n      \"message images warning\"      : \"L'affichage des images du message a été\n                                        bloqué\"\n      \"message images display\"      : \"Afficher les images\"\n      \"message html display\"        : \"Afficher en HTML\"\n      \"message delete no trash\"     : \"Choisissez d'abord un dossier Corbeille\"\n      \"message delete already\"      : \"Ce message est déjà dans la corbeille\"\n      \"message move already\"        : \"Ce message est déjà dans ce dossier\"\n      \"undo ok\"                     : \"Action annulée\"\n      \"undo ko\"                     : \"Impossible d'annuler l'action\"\n      \"undo unavailable\"            : \"Impossible d'annuler l'action\"\n      \"message preview title\"       : \"Voir les pièces jointes\"\n\n      # Settings\n      \"settings title\"             : \"Paramètres\"\n      \"settings button save\"       : \"Enregistrer\"\n      # \"settings label mpp\"         : \"Nombre de messages par page\"\n      \"settings plugins\"           : \"Modules complémentaires\"\n      \"settings plugin add\"        : \"Ajouter\"\n      \"settings plugin del\"        : \"Supprimer\"\n      \"settings plugin help\"       : \"Documentation\"\n      \"settings plugin new name\"   : \"Nom du plugin\"\n      \"settings plugin new url\"    : \"Url du plugin\"\n      # SETTINGS\n      \"settings label autosaveDraft\"        : \"Enregistrer périodiquement les brouillons\"\n      \"settings label composeInHTML\"        : \"Éditeur riche\"\n      \"settings label composeOnTop\"         : \"Répondre au-dessus du message\"\n      \"settings label desktopNotifications\" : \"Notifications\"\n      \"settings label displayConversation\"  : \"Afficher les conversations\"\n      \"settings label displayPreview\"       : \"Prévisualiser les messages\"\n      \"settings label messageDisplayHTML\"   : \"Afficher les messages en HTML\"\n      \"settings label messageDisplayImages\" : \"Afficher les images\"\n      \"settings label messageConfirmDelete\" : \"Demander confirmation avant\n                                                de supprimer un message\"\n      \"settings label layoutStyle\"            : \"Affichage\"\n      \"settings label layoutStyle horizontal\" : \"Message sous la liste\"\n      \"settings label layoutStyle vertical\"   : \"Message à côté de la liste\"\n      \"settings label layoutStyle three\"      : \"Trois colonnes\"\n      \"settings label listStyle\"            : \"Affichage de la liste des messages\"\n      \"settings label listStyle default\"    : \"Normal\"\n      \"settings label listStyle compact\"    : \"Compact\"\n      \"settings lang\"             : \"Langue\"\n      \"settings lang en\"          : \"English\"\n      \"settings lang fr\"          : \"Français\"\n      \"settings lang de\"          : \"Deutsch\"\n      \"settings save error\"       : \"Erreur d'enregistrement des paramètres, veuillez réessayer\"\n\n      # File picker\n      \"picker drop here\"           : \"Déposer les fichiers ici ou chercher des fichiers locaux\"\n\n      # Mailbox List\n      \"mailbox pick one\"           : \"Choisissez une boîte\"\n      \"mailbox pick null\"          : \"Pas de boîte pour ça\"\n\n      # Tasks\n      \"task account-fetch\"         : 'Rafraîchissement %{account}'\n      \"task box-fetch\"             : 'Rafraîchissement %{box}'\n      \"task apply-diff-fetch\"      : 'Téléchargement des messages du dossier\n                                        %{box} de %{account}'\n      \"task apply-diff-remove\"     : 'Suppression des messages du dossier\n                                        %{box} de %{account}'\n      \"task recover-uidvalidity\"   : 'Analyse du compte'\n      \"there were errors\"          : '%{smart_count} erreur. ||||\n                                        %{smart_count} erreurs.'\n      \"modal please report\"        : \"Merci de bien vouloir transmettre ces\n                                        informations à cozy.\"\n      \"modal please contribute\"    : \"Merci de contribuer\"\n      \"modal copy content\"         : \"Copier ces informations dans le presse papier\"\n\n      # Validation\n      \"validate must not be empty\" : \"Ce champ doit être renseigné\"\n\n      # Toast\n      \"toast hide\"      : \"Masquer les alertes\"\n      \"toast show\"      : \"Afficher les alertes\"\n      \"toast close all\" : \"Fermer toutes les alertes\"\n\n      # Notifications\n      \"notif new title\": 'Messagerie Cozy'\n      \"notif new\": \"\"\"\n        %{smart_count} message non-lu dans le compte %{account}||||\n        %{smart_count} messages non-lus dans le compte  %{account}\n      \"\"\"\n      \"notif complete\": \"\n            Importation du compte %{account} finie.\n      \"\n\n      # Contacts\n      #\n      \"contact form\"             : \"Sélectionnez des contacts\"\n      \"contact form placeholder\" : \"Nom\"\n      \"contact button label\"     : \"Ajouter au carnet d'adresse\"\n      \"contact create success\"   : \"%{contact} a été ajouté(e) à vos contacts\"\n      \"contact create error\"     : \"L'ajout à votre carnet d'adresses a\n                                        échoué : {error}\"\n      \"message contact creation title\": \"Ajouter un contact\"\n      \"message contact creation\"      : \"Voulez vous ajouter %{contact} à votre carnet d'adresse ?\"\n\n      # GMail security\n      \"gmail security tile\": \"Sécurité Gmail\"\n      \"gmail security body\": \"\"\"\n            Gmail considère les connexions par nom d'utilisateur et mot de passe\n            comme non sécurisées. Veuillez cliquer sur le lien ci-dessous, assurez-vous\n            d'être connecté avec le compte %{login} et activez l'accès\n            pour les applications moins sécurisées.\n      \"\"\"\n      \"gmail security link\": \"\"\"\n            Activer l'accès pour les applications moins sécurisées\n      \"\"\"\n\n      # Plugins\n      'plugin name Gallery'            : 'Galerie de pièces jointes'\n      'plugin name medium-editor'      : 'Éditeur Medium'\n      'plugin name MiniSlate'          : 'Éditeur MiniSlate'\n      'plugin name Sample JS'          : 'Exemple'\n      'plugin name Keyboard shortcuts' : 'Raccourcis clavier'\n      'plugin name VCard'              : 'Affichage de VCard'\n      'plugin modal close'             : 'Fermer'\n\n      # Misc\n      'calendar unknown format' : \"\"\"\n            Ce message contient une invitation à un évènement\n            dans un format actuellement non pris en charge.\n            \"\"\"\n\n      # Tooltips\n      \"tooltip reply\": \"Répondre\"\n      \"tooltip reply all\": \"Répondre à tous\"\n      \"tooltip forward\": \"Transférer\"\n      \"tooltip remove message\": \"Supprimer\"\n      \"tooltip open attachments\": \"Ouvrir la liste des pièces jointes\"\n      \"tooltip open attachment\": \"Ouvrir la pièce jointe\"\n      \"tooltip download attachment\": \"Télécharger la pièce jointe\"\n      \"tooltip previous conversation\": \"Aller à la conversation précédente\"\n      \"tooltip next conversation\": \"Aller à la conversation suivante\"\n      \"tooltip filter only unread\": \"Montrer seulement les messages non lus\"\n      \"tooltip filter only important\": \"Montrer seulement les messages importants\"\n      \"tooltip filter only attachment\": \"Montrer seulement les messages avec pièce jointe\"\n      \"tooltip account parameters\": \"Paramètres du compte\"\n      \"tooltip delete selection\": \"Supprimer les messages sélectionnés\"\n      'tooltip filter': 'Filtrer'\n      'tooltip display filters': 'Afficher les filtres'\n      'tooltip expunge mailbox': 'Vider la boite'\n\n\n      # Filters\n      'filters unseen': 'non-lus'\n      'filters flagged': 'favoris'\n      'filters attach': 'pièces jointes'\n      'filters search placeholder': 'rechercher…'\n      'daterangepicker placeholder': 'par date'\n      'daterangepicker presets yesterday': 'hier'\n      'daterangepicker presets last week': 'semaine dernière'\n      'daterangepicker presets last month': 'mois dernier'\n      'daterangepicker clear': 'effacer'\n","###\n    Participant mixin.\n###\n{span, a, i} = React.DOM\n\nContactStore = require '../stores/contact_store'\nContactLabel = require '../components/contact_label'\n\n\nmodule.exports =\n    formatUsers: (users) ->\n        return unless users?\n\n        if _.isArray users\n            items = []\n            for user in users\n                items.push ContactLabel\n                    contact: user\n                    tooltip: true\n\n                items.push \", \" if user isnt _.last users\n            return items\n        else\n            return ContactLabel\n                contact: users\n                tooltip: true\n","###\n    Router mixin.\n    Aliases `buildUrl` and `buildClosePanelUrl`\n###\n\nrouter = window.router\n\nmodule.exports =\n\n\n    buildUrl: (options) ->\n        router.buildUrl.call router, options\n\n\n    buildClosePanelUrl: (direction) ->\n        router.buildClosePanelUrl.call router, direction\n\n\n    # Builds the URL (based on options) and redirect to it.\n    # If `options` is a string, it will be considered as the target URL.\n    redirect: (options) ->\n        url = if typeof options is \"string\" then options else @buildUrl options\n        router.navigate url, true\n\n","module.exports = StoreWatchMixin = (stores) ->\n\n\n    # Update state when linked store emit changes.\n    componentDidMount: ->\n        stores.forEach (store) =>\n            store.on 'change', @_setStateFromStores\n\n\n    # Stop listening to the linked stores when the component is unmounted.\n    componentWillUnmount: ->\n        stores.forEach (store) =>\n            store.removeListener 'change', @_setStateFromStores\n\n\n    # Build initial state from store values.\n    getInitialState: ->\n        return @getStateFromStores()\n\n\n    # Update state with store values.\n    _setStateFromStores: ->\n        if @isMounted()\n            @setState @getStateFromStores()\n\n","module.exports = TooltipRefresherMixin =\n\n\n    # AriaTips must bind the elements declared as tooltip to their\n    # respective tooltip when the component is mounted (DOM elements exist).\n    componentDidMount: ->\n        AriaTips.bind()\n\n\n    # AriaTips must bind the elements declared as tooltip to their\n    # respective tooltip, each time the application component (the root)\n    # is updated to make sure new tooltips are also bound.\n    componentDidUpdate: ->\n        AriaTips.bind()\n","PanelRouter = require './libs/panel_router'\n\nAccountStore = require './stores/account_store'\nMessageStore = require './stores/message_store'\n\nmodule.exports = class Router extends PanelRouter\n\n    patterns:\n        'account.config':\n            pattern: 'account/:accountID/config/:tab'\n            fluxAction: 'showConfigAccount'\n        'account.new':\n            pattern: 'account/new'\n            fluxAction: 'showCreateAccount'\n        'account.mailbox.messages.full':\n            pattern: 'account/:accountID/box/:mailboxID/sort/:sort/' +\n                        'flag/:flag/before/:before/after/:after/' +\n                        'page/:pageAfter'\n            fluxAction: 'showMessageList'\n        'account.mailbox.messages':\n            pattern: 'account/:accountID/mailbox/:mailboxID'\n            fluxAction: 'showMessageList'\n\n        'search':\n            pattern: 'search/:query/page/:page'\n            fluxAction: 'showSearch'\n\n        'message':\n            pattern: 'message/:messageID'\n            fluxAction: 'showMessage'\n        'conversation':\n            pattern: 'conversation/:conversationID/:messageID/'\n            fluxAction: 'showConversation'\n        'compose':\n            pattern: 'compose'\n            fluxAction: 'showComposeNewMessage'\n        'edit':\n            pattern: 'edit/:messageID'\n            fluxAction: 'showComposeMessage'\n\n        'settings':\n            pattern: 'settings'\n            fluxAction: 'showSettings'\n\n        'default':\n            pattern: ''\n            fluxAction: ''\n\n    # default route\n    routes: '': 'default'\n\n    # Determines and gets the default parameters regarding a specific action\n    _getDefaultParameters: (action) ->\n        switch action\n\n            when 'account.mailbox.messages'\n            ,    'account.mailbox.messages.full'\n                defaultAccountID = AccountStore.getDefault()?.get 'id'\n                mailbox = AccountStore.getDefaultMailbox defaultAccountID\n                defaultMailboxID = mailbox?.get 'id'\n                defaultParameters = {}\n                defaultParameters.accountID = defaultAccountID\n                defaultParameters.mailboxID = defaultMailboxID\n                defaultParameters.pageAfter = '-'\n\n            when 'account.config'\n                defaultAccount = AccountStore.getDefault()?.get 'id'\n                defaultParameters =\n                    accountID: defaultAccount\n                    tab: 'account'\n\n            when 'search'\n                defaultParameters =\n                    query: \"\"\n                    page: 1\n\n            else\n                defaultParameters = null\n\n        return defaultParameters\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes} = require '../constants/app_constants'\n\nAccountTranslator = require '../utils/translators/account_translator'\n\nclass AccountStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n\n    # Creates an OrderedMap of accounts\n    _accounts = Immutable.Sequence window.accounts\n\n        # sort first\n        .sort (mb1, mb2) ->\n            if mb1.label > mb2.label then return 1\n            else if mb1.label < mb2.label then return -1\n            else return 0\n\n        # sets account ID as index\n        .mapKeys (_, account) -> return account.id\n\n        # makes account object an immutable Map\n        .map (account) -> AccountTranslator.toImmutable account\n\n        .toOrderedMap()\n\n    _selectedAccount   = null\n    _selectedMailbox   = null\n    _newAccountWaiting = false\n    _newAccountError   = null\n    _mailboxRefreshing = {}\n\n\n    _refreshSelected = ->\n        if selectedAccountID = _selectedAccount?.get 'id'\n            _selectedAccount = _accounts.get selectedAccountID\n            if selectedMailboxID = _selectedMailbox?.get 'id'\n                _selectedMailbox = _selectedAccount\n                    ?.get('mailboxes')\n                    ?.get(selectedMailboxID)\n\n    setMailbox = (accountID, boxID, boxData) ->\n\n        account = _accounts.get(accountID)\n        # on account creation, sometime socket send mailboxes updates\n        # before the account has been saved locally\n        if account?\n            mailboxes = account.get('mailboxes')\n            mailboxes = mailboxes.map (box) ->\n                if box.get('id') is boxID\n                    boxData.weight = box.get 'weight'\n                    AccountTranslator.mailboxToImmutable boxData\n                else\n                    box\n            .toOrderedMap()\n\n            account = account.set 'mailboxes', mailboxes\n            _accounts = _accounts.set accountID, account\n            _refreshSelected()\n\n    _mailboxSort = (mb1, mb2) ->\n        w1 = mb1.get 'weight'\n        w2 = mb2.get 'weight'\n        if w1 < w2 then return 1\n        else if w1 > w2 then return -1\n        else\n            if mb1.get 'label' < mb2.get 'label' then return 1\n            else if mb1.get 'label' > mb2.get 'label' then return 1\n            else return 0\n\n    _applyMailboxDiff: (accountID, diff) ->\n        account = _accounts.get accountID\n        mailboxes = account.get('mailboxes')\n        updated = mailboxes.withMutations (map) ->\n            for boxid, deltas of diff when deltas.nbTotal + deltas.nbUnread\n                box = map.get boxid\n                if box?\n                    box = box.merge\n                        nbTotal: box.get('nbTotal') + deltas.nbTotal\n                        nbUnread: box.get('nbUnread') + deltas.nbUnread\n                    map.set boxid, box\n\n        diffTotalUnread = diff[accountID]?.nbUnread or 0\n\n        if diffTotalUnread\n            totalUnread = account.get('totalUnread') + diffTotalUnread\n            account = account.set 'totalUnread', totalUnread\n\n        unless updated is mailboxes\n            account = account.set 'mailboxes', updated\n\n        if account isnt _accounts.get accountID\n            _accounts = _accounts.set accountID, account\n            _refreshSelected()\n            @emit 'change'\n\n\n    _setCurrentAccount: (account) ->\n        _selectedAccount = account\n\n    _setCurrentMailbox: (mailbox) ->\n        _selectedMailbox = mailbox\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        onUpdate = (rawAccount) =>\n            account = AccountTranslator.toImmutable rawAccount\n            _accounts = _accounts.set account.get('id'), account\n            @_setCurrentAccount account\n            _newAccountWaiting = false\n            _newAccountError   = null\n            @emit 'change'\n\n        handle ActionTypes.ADD_ACCOUNT, (rawAccount) ->\n            onUpdate rawAccount\n\n        handle ActionTypes.SELECT_ACCOUNT, (value) ->\n            if value.accountID?\n                @_setCurrentAccount(_accounts.get(value.accountID) or null)\n            else\n                @_setCurrentAccount(null)\n            if value.mailboxID?\n                mailbox = _selectedAccount\n                    ?.get('mailboxes')\n                    ?.get(value.mailboxID) or null\n                @_setCurrentMailbox mailbox\n            else\n                @_setCurrentMailbox null\n            @emit 'change'\n\n        handle ActionTypes.NEW_ACCOUNT_WAITING, (payload) ->\n            _newAccountWaiting = payload\n            @emit 'change'\n\n        handle ActionTypes.NEW_ACCOUNT_ERROR, (error) ->\n            _newAccountWaiting = false\n            # This is to force Panel.shouldComponentUpdate to rerender\n            error.uniq = Math.random()\n            _newAccountError = error\n            @emit 'change'\n\n        handle ActionTypes.EDIT_ACCOUNT, (rawAccount) ->\n            onUpdate rawAccount\n\n        handle ActionTypes.MAILBOX_CREATE, (rawAccount) ->\n            onUpdate rawAccount\n\n        handle ActionTypes.MAILBOX_UPDATE, (rawAccount) ->\n            onUpdate rawAccount\n\n        handle ActionTypes.MAILBOX_DELETE, (rawAccount) ->\n            onUpdate rawAccount\n\n        handle ActionTypes.REMOVE_ACCOUNT, (accountID) ->\n            _accounts = _accounts.delete accountID\n            @_setCurrentAccount @getDefault()\n            @emit 'change'\n\n        handle ActionTypes.RECEIVE_MAILBOX_UPDATE, (boxData) ->\n            setMailbox boxData.accountID, boxData.id, boxData\n            @emit 'change'\n\n        handle ActionTypes.RECEIVE_REFRESH_NOTIF, (data) ->\n            account = _accounts.get data.accountID\n            account = account.set 'totalUnread', data.totalUnread\n            _accounts.set data.accountID, account\n            @emit 'change'\n\n        handle ActionTypes.REFRESH_REQUEST, ({mailboxID}) ->\n            _mailboxRefreshing[mailboxID] ?= 0\n            _mailboxRefreshing[mailboxID]++\n            @emit 'change'\n\n        handle ActionTypes.REFRESH_FAILURE, ({mailboxID}) ->\n            _mailboxRefreshing[mailboxID]--\n            @emit 'change'\n\n        handle ActionTypes.REFRESH_SUCCESS, ({mailboxID, updated}) ->\n            _mailboxRefreshing[mailboxID]--\n            if updated?\n                setMailbox updated.accountID, updated.id, updated\n            @emit 'change'\n\n    ###\n        Public API\n    ###\n    getAll: -> return _accounts\n\n    getByID: (accountID) ->\n        return _accounts.get accountID\n\n    getByLabel: (label) ->\n        _accounts.find (account) -> account.get('label') is label\n\n    getDefault: -> return _accounts.first() or null\n\n    getDefaultMailbox: (accountID) ->\n\n        account = _accounts.get(accountID) or @getDefault()\n        return null unless account\n\n        mailboxes = account.get('mailboxes')\n        mailbox = mailboxes.filter (mailbox) ->\n            return mailbox.get('label').toLowerCase() is 'inbox'\n        if mailbox.count() isnt 0\n            return mailbox.first()\n        else\n            favorites = account.get('favorites')\n            defaultID = if favorites? then favorites[0]\n\n            return if defaultID then mailboxes.get defaultID\n            else mailboxes.first()\n\n    getSelected: -> return _selectedAccount\n\n    getSelectedMailboxes: (sorted) ->\n\n        return Immutable.OrderedMap.empty() unless _selectedAccount?\n\n        result = Immutable.OrderedMap()\n        mailboxes = _selectedAccount.get('mailboxes')\n        if sorted\n            mailboxes = mailboxes.sort _mailboxSort\n        mailboxes.forEach (data) ->\n            mailbox = Immutable.Map data\n            result = result.set mailbox.get('id'), mailbox\n            return true\n\n        return result\n\n    selectedIsDifferentThan: (accountID, mailboxID) ->\n        differentSelected = _selectedAccount?.get('id') isnt accountID or\n        _selectedMailbox?.get('id') isnt mailboxID\n\n        return differentSelected\n\n    getSelectedMailbox: (selectedID) ->\n        mailboxes = @getSelectedMailboxes()\n        if selectedID?\n            return mailboxes.get selectedID\n        else if _selectedMailbox?\n            return _selectedMailbox\n        else\n            return mailboxes.first()\n\n    getSelectedFavorites: (sorted) ->\n\n        mailboxes = @getSelectedMailboxes()\n        ids = _selectedAccount?.get 'favorites'\n\n        if ids?\n            mb = mailboxes\n                .filter (box, key) -> key in ids\n                .toOrderedMap()\n        else\n            mb = mailboxes\n                .toOrderedMap()\n\n        if sorted\n            mb = mb.sort _mailboxSort\n\n        return mb\n\n    getError: -> return _newAccountError\n\n    isWaiting: -> return _newAccountWaiting\n\n    isMailboxRefreshing: (mailboxID)->\n        _mailboxRefreshing[mailboxID] > 0\n\n    getMailboxRefresh: (mailboxID) ->\n        if _mailboxRefreshing[mailboxID] > 0 then 0.9 else 0\n\n\nmodule.exports = new AccountStore()\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes} = require '../constants/app_constants'\n\nclass ContactStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n\n    _query = \"\"\n\n    # all known contacts\n    _contacts = Immutable.OrderedMap.empty()\n\n    # result of last search\n    _results  = Immutable.OrderedMap.empty()\n\n    _import = (rawResults) ->\n        _results = Immutable.OrderedMap.empty()\n\n        if rawResults?\n\n            if not Array.isArray rawResults\n                rawResults = [ rawResults ]\n\n            convert = (map) ->\n\n                rawResults.forEach (rawResult) ->\n                    addresses = []\n\n                    rawResult.datapoints.forEach (point) ->\n                        if point.name is 'email'\n                            addresses.push point.value\n                        if point.name is 'avatar'\n                            rawResult.avatar = point.value\n\n                    delete rawResult.docType\n                    if rawResult._attachments?.picture\n                        rawResult.avatar = \"\"\"\n                            contacts/#{rawResult.id}/picture.jpg\n                        \"\"\"\n\n                    addresses.forEach (address) ->\n                        rawResult.address = address\n                        contact = Immutable.Map rawResult\n                        map.set address, contact\n\n            _results  = _results.withMutations convert\n            _contacts = _contacts.withMutations convert\n\n    _import window.contacts\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.RECEIVE_RAW_CONTACT_RESULTS, (rawResults) =>\n            _import rawResults\n            @emit 'change'\n\n        handle ActionTypes.CONTACT_LOCAL_SEARCH, (query) =>\n            query = query.toLowerCase()\n            re = new RegExp query, 'i'\n            _results = _contacts.filter (contact) ->\n                obj  = contact.toObject()\n                full = ''\n                ['address', 'fn'].forEach (key) ->\n                    if typeof obj[key] is 'string'\n                        full += obj[key]\n                return re.test full\n            .toOrderedMap()\n\n            @emit 'change'\n\n    ###\n        Public API\n    ###\n    getResults: ->\n        return _results\n\n    getQuery: ->\n        return _query\n\n    getByAddress: (address) ->\n        return _contacts.get address\n\n    getAvatar: (address) ->\n        return _contacts.get(address)?.get 'avatar'\n\n    isExist: (address) ->\n        return @getByAddress(address)?\n\nmodule.exports = new ContactStore()\n\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes, Dispositions} = require '../constants/app_constants'\n\nMessageActionCreator = null\ngetMessageActionCreator = ->\n    MessageActionCreator ?= require '../actions/message_action_creator'\n    return MessageActionCreator\n\nclass LayoutStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n    _disposition = Dispositions.COL\n\n    # TODO: Use a constant for default value?\n    _previewSize = 60\n\n    _previewFullscreen = false\n\n    _tasks = Immutable.OrderedMap()\n\n    _shown = true\n\n    _intentAvailable = false\n\n    _drawer = false\n\n    _modal  = null\n\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.SET_DISPOSITION, (disposition) ->\n            _disposition = disposition\n            @emit 'change'\n\n        handle ActionTypes.RESIZE_PREVIEW_PANE, (factor) ->\n            if factor\n                _previewSize += factor\n                # set limits\n                _previewSize = 20 if _previewSize < 20\n                _previewSize = 80 if _previewSize > 80\n            else\n                _previewSize = 50\n            @emit 'change'\n\n        handle ActionTypes.MINIMIZE_PREVIEW_PANE, ->\n            _previewFullscreen = false\n            @emit 'change'\n\n        handle ActionTypes.MAXIMIZE_PREVIEW_PANE, ->\n            _previewFullscreen = true\n            @emit 'change'\n\n        handle ActionTypes.DISPLAY_MODAL, (value) ->\n            _modal = value\n            @emit 'change'\n\n        handle ActionTypes.HIDE_MODAL, (value) ->\n            _modal = null\n            @emit 'change'\n\n        handle ActionTypes.REFRESH, ->\n            @emit 'change'\n\n        handle ActionTypes.CLEAR_TOASTS, ->\n            _tasks = Immutable.OrderedMap()\n            @emit 'change'\n\n        handle ActionTypes.RECEIVE_TASK_UPDATE, (task) =>\n            @_showNotification task\n\n        handle ActionTypes.RECEIVE_TASK_DELETE, (taskid) ->\n            @_removeNotification taskid\n\n        handle ActionTypes.TOASTS_SHOW, ->\n            _shown = true\n            @emit 'change'\n\n        handle ActionTypes.TOASTS_HIDE, ->\n            _shown = false\n            @emit 'change'\n\n        handle ActionTypes.INTENT_AVAILABLE, (avaibility) ->\n            _intentAvailable = avaibility\n            @emit 'change'\n\n        handle ActionTypes.DRAWER_SHOW, ->\n            return if _drawer is true\n            _drawer = true\n            @emit 'change'\n\n        handle ActionTypes.DRAWER_HIDE, ->\n            return if _drawer is false\n            _drawer = false\n            @emit 'change'\n\n        handle ActionTypes.DRAWER_TOGGLE, ->\n            _drawer = not _drawer\n            @emit 'change'\n\n        makeErrorMessage = (error) ->\n            if error.name is 'AccountConfigError'\n                t \"config error #{error.field}\"\n            else\n                error.message or error.name or error\n\n        makeMessage = (target, ref, actionAndOK, errMsg)->\n            subject = target?.subject\n\n            if target.messageID and target.isDraft\n                type = 'draft'\n            else if target.messageID\n                type = 'message'\n            else if target.conversationID\n                type = 'conversation'\n            else if target.conversationIDs\n                type = 'conversations'\n                smart_count = target.conversationIDs.length\n            else if target.messageIDs\n                type = 'messages'\n                smart_count = target.messageIDs.length\n            else\n                throw new Error 'Wrong Usage : unrecognized target'\n\n            return t \"#{type} #{actionAndOK}\",\n                error: errMsg\n                subject: subject or ''\n                smart_count: smart_count\n\n        makeUndoAction = (ref) ->\n            label: 'undo'\n            onClick: -> getMessageActionCreator().undo ref\n\n        handle ActionTypes.MESSAGE_TRASH_SUCCESS, ({target, ref, updated}) ->\n            @_showNotification\n                message: makeMessage target, ref, 'delete ok'\n                actions: [makeUndoAction ref]\n                autoclose: true\n\n        handle ActionTypes.MESSAGE_TRASH_FAILURE, ({target, ref, error}) ->\n            @_showNotification\n                message: makeMessage target, ref, 'delete ko', error\n                errors: [error]\n                autoclose: true\n\n        handle ActionTypes.MESSAGE_MOVE_SUCCESS, ({target, ref, updated}) ->\n            unless target.silent\n                @_showNotification\n                    message: makeMessage target, ref, 'move ok'\n                    actions: [makeUndoAction ref]\n                    autoclose: true\n\n        handle ActionTypes.MESSAGE_MOVE_FAILURE, ({target, ref, error}) ->\n            @_showNotification\n                message: makeMessage target, ref, 'move ko', error\n                errors: [error]\n                autoclose: true\n\n        # dont display a notification for MESSAGE_FLAG_SUCCESS\n        handle ActionTypes.MESSAGE_FLAGS_FAILURE, ({target, ref, error}) ->\n            @_showNotification\n                message: makeMessage target, ref, 'flag ko', error\n                errors: [error]\n                autoclose: true\n\n        # dont display a notification for MESSAGE_RECOVER_SUCCESS\n        handle ActionTypes.MESSAGE_RECOVER_FAILURE, ({target, ref, error}) ->\n            @_showNotification\n                message: 'lost server connection'\n                errors: [error]\n                autoclose: true\n\n        handle ActionTypes.MESSAGE_FETCH_FAILURE, ({error}) ->\n            @_showNotification\n                message: 'message fetch failure'\n                errors: [error]\n                autoclose: true\n\n        handle ActionTypes.REFRESH_FAILURE, ({error}) ->\n            @_showNotification\n                message: makeErrorMessage error\n                errors: [error]\n                autoclose: true\n\n\n    ###\n        Private API\n    ###\n    _removeNotification: (id) ->\n        _tasks = _tasks.remove id\n        @emit 'change'\n\n    _showNotification: (options) ->\n        id = options.id or +Date.now()\n        options.finished ?= true\n        _tasks = _tasks.set id, Immutable.Map options\n        if options.autoclose\n            setTimeout @_removeNotification.bind(@, id), 5000\n        @emit 'change'\n\n    ###\n        Public API\n    ###\n    getDisposition: -> return _disposition\n\n    getPreviewSize: -> return _previewSize\n\n    isPreviewFullscreen: -> return _previewFullscreen\n\n    getModal: -> return _modal\n\n    getToasts: -> return _tasks\n\n    isShown: -> return _shown\n\n    intentAvailable: -> return _intentAvailable\n\n    isDrawerExpanded: -> return _drawer\n\nmodule.exports = LayoutStoreInstance = new LayoutStore()\n","Store = require '../libs/flux/store/store'\nContactStore  = require './contact_store'\nAppDispatcher = require '../app_dispatcher'\n\nAccountStore = require './account_store'\nSocketUtils = require '../utils/socketio_utils'\n\n{ActionTypes, MessageFlags, MessageFilter, FlagsConstants} =\n        require '../constants/app_constants'\n\nclass MessageStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n\n    _sortField   = 'date'\n    _sortOrder   = 1\n    __getSortFunction = (criteria, order) ->\n        sortFunction = (message1, message2) ->\n            if typeof message1.get is 'function'\n                val1 = message1.get criteria\n                val2 = message2.get criteria\n            else\n                val1 = message1[criteria]\n                val2 = message2[criteria]\n            if val1 > val2 then return -1 * order\n            else if val1 < val2 then return 1 * order\n            else return 0\n\n    reverseDateSort = __getSortFunction 'date', -1\n\n    # Creates an OrderedMap of messages\n    _messages = Immutable.OrderedMap()\n\n    _filter       = '-'\n    _params       = sort: '-date'\n    _fetching     = 0\n    _currentMessages = Immutable.Sequence()\n    _conversationLengths = Immutable.Map()\n    _conversationMemoize = null\n    _currentID       = null\n    _currentCID      = null\n    _prevAction      = null\n\n    _inFlightByRef = {}\n    _inFlightByMessageID = {}\n    _undoable = {}\n\n    _addInFlight = (request) ->\n        _inFlightByRef[request.ref] = request\n        request.messages.forEach (message) ->\n            id = message.get('id')\n            requests = (_inFlightByMessageID[id] ?= [])\n            requests.push request\n\n    _removeInFlight = (ref) ->\n        request = _inFlightByRef[ref]\n        delete _inFlightByRef[ref]\n        request.messages.forEach (message) ->\n            id = message.get('id')\n            requests = _inFlightByMessageID[id]\n            _inFlightByMessageID[id] = _.without requests, request\n\n        return request\n\n    _transformMessageWithRequest = (message, request) ->\n        switch request.type\n            when 'trash'\n                {trashBoxID} = request\n                if isDraft(message)\n                    message = null\n                else\n                    newMailboxIds = {}\n                    newMailboxIds[trashBoxID] = -1\n                    message = message.set 'mailboxIDs', newMailboxIds\n\n            when 'move'\n                mailboxIDs = message.get('mailboxIDs')\n                {from, to} = request\n                newMailboxIds = {}\n                newMailboxIds[key] = value for key, value of mailboxIDs\n                delete newMailboxIds[from]\n                newMailboxIds[to] ?= -1\n                message = message.set 'mailboxIDs', newMailboxIds\n\n            when 'flag'\n                flags = message.get('flags')\n                {flag, op} = request\n                if op is 'batchAddFlag' and flag not in flags\n                    message = message.set 'flags', flags.concat [flag]\n\n                else if op is 'batchRemoveFlag' and flag in flags\n                    message = message.set 'flags', _.without flags, flag\n\n        return message\n\n    # @TODO : memoize me\n    _messagesWithInFlights = ->\n        _messages.map (message) ->\n            id = message.get 'id'\n            for request in _inFlightByMessageID[id] or []\n                message = _transformMessageWithRequest message, request\n            return message\n        .filter (msg) -> msg isnt null\n\n    _fixCurrentMessage = (target) ->\n        # If target.inReplyTo is set, we are removing a reply, so stay\n        # on current message\n        if target.inReplyTo?\n            return null\n        else\n            messageIDs = target.messageIDs or [target.messageID]\n            currentMessage = self.getCurrentID() or 'not-null'\n            conversationIDs = target.conversationIDs or [target.conversationID]\n            currentConversation = self.getCurrentConversationID() or 'not-null'\n\n            # open next message if the deleted / moved one was open ###\n            if currentMessage in messageIDs or\n            currentConversation in conversationIDs\n                next = self.getNextOrPrevious true\n                if next?\n                    setTimeout ->\n                        window.cozyMails.messageSetCurrent next\n                    , 1\n\n    _getMixed = (target) ->\n        if target.messageID\n            return [_messages.get(target.messageID)]\n        else if target.messageIDs\n            return target.messageIDs.map (id) -> _messages.get id\n        else if target.conversationID\n            return _messages.filter (message) ->\n                message.get('conversationID') is target.conversationID\n            .toArray()\n        else if target.conversationIDs\n            return _messages.filter (message) ->\n                message.get('conversationID') in target.conversationIDs\n            .toArray()\n        else throw new Error 'Wrong Usage : unrecognized target AS.getMixed'\n\n    isDraft = (message, draftMailbox) ->\n        mailboxIDs = message.get 'mailboxIDs'\n        mailboxIDs[draftMailbox] or MessageFlags.DRAFT in message.get('flags')\n\n    inMailbox = (mailboxID) -> (message) ->\n        mailboxID of message.get 'mailboxIDs'\n\n    notInMailbox = (mailboxID) -> (message) ->\n        not (mailboxID of message.get 'mailboxIDs')\n\n    isntAccount = (accountID) -> (message) ->\n        accountID isnt message.get 'accountID'\n\n    dedupConversation = ->\n        conversationIDs = []\n        return filter = (message) ->\n            conversationID = message.get 'conversationID'\n            if conversationID and conversationID in conversationIDs\n                return false\n            else\n                conversationIDs.push conversationID\n                return true\n\n\n    computeMailboxDiff = (oldmsg, newmsg) ->\n        return {} unless oldmsg\n        changed = false\n\n        wasRead = MessageFlags.SEEN in oldmsg.get 'flags'\n        isRead = MessageFlags.SEEN in newmsg.get 'flags'\n\n        accountID = newmsg.get 'accountID'\n        oldboxes = Object.keys oldmsg.get 'mailboxIDs'\n        newboxes = Object.keys newmsg.get 'mailboxIDs'\n\n        out = {}\n        added = _.difference(newboxes, oldboxes)\n        added.forEach (boxid) ->\n            changed = true\n            out[boxid] = nbTotal: +1, nbUnread: if isRead then +1 else 0\n\n        removed = _.difference oldboxes, newboxes\n        removed.forEach (boxid) ->\n            changed = true\n            out[boxid] = nbTotal: -1, nbUnread: if wasRead then -1 else 0\n\n        stayed = _.intersection oldboxes, newboxes\n        deltaUnread = if wasRead and not isRead then +1\n        else if not wasRead and isRead then -1\n        else 0\n\n        if deltaUnread isnt 0\n            changed = true\n\n        out[accountID] = nbUnread: deltaUnread\n\n        stayed.forEach (boxid) ->\n            out[boxid] = nbTotal: 0, nbUnread: deltaUnread\n\n        if changed\n            return out\n        else\n            return false\n\n    onReceiveRawMessage = (message) ->\n        oldmsg = _messages.get message.id\n        updated = oldmsg?.get 'updated'\n        # only update message if new version is newer than\n        # the one currently stored\n        if not (message.updated? and updated? and updated > message.updated) and\n           not message._deleted # deleted draft are empty, don't update them\n\n            message.attachments   ?= []\n            message.date          ?= new Date().toISOString()\n            message.createdAt     ?= message.date\n            message.flags         ?= []\n            message.hasAttachments = message.attachments.length > 0\n            message.attachments = message.attachments.map (file) ->\n                Immutable.Map file\n            message.attachments = Immutable.Vector.from message.attachments\n\n\n            # message loaded from fixtures for test purpose have a docType\n            # that may cause some troubles\n            delete message.docType\n\n            message.updated = Date.now()\n\n            messageMap = Immutable.Map message\n\n            messageMap.prettyPrint = ->\n                return \"\"\"\n                    #{message.id} \"#{message.from[0].name}\" \"#{message.subject}\"\n                \"\"\"\n\n            _messages = _messages.set message.id, messageMap\n\n            # updat _currentCID when we have the message\n            if message.id is _currentID\n                _currentCID = message.conversationID\n\n            if message.accountID? and\n               diff = computeMailboxDiff(oldmsg, messageMap)\n                AccountStore._applyMailboxDiff message.accountID, diff\n\n\n    handleFetchResult = (result) ->\n\n        if result.links? and result.links.next?\n            # reinit params here for pagination on filtered lists\n            _params = {}\n            next   = decodeURIComponent(result.links.next)\n            url    = 'http://localhost' + next\n            url.split('?')[1].split('&').forEach (p) ->\n                [key, value] = p.split '='\n                value = '-' if value is ''\n                _params[key] = value\n        else\n            # We use pageAfter to know if there are more result to\n            # load, so we need to set it to its default value\n            _params.pageAfter = '-'\n\n        before = if _params.pageAfter is '-' then undefined\n        else _params.pageAfter\n\n        SocketUtils.changeRealtimeScope result.mailboxID, before\n\n        if lengths = result.conversationLengths\n            _conversationLengths = _conversationLengths.merge lengths\n\n        for message in result.messages when message?\n            onReceiveRawMessage message\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.RECEIVE_RAW_MESSAGE, (message) ->\n            onReceiveRawMessage message\n            @emit 'change'\n\n        handle ActionTypes.RECEIVE_RAW_MESSAGE_REALTIME, (message) ->\n            # when we receive new messages, don't display them if there's\n            # an active filter, unless the filter is on unread messages\n            if _filter is '-' or\n               (_filter is MessageFilter.UNSEEN and\n               message.flags.indexOf FlagsConstants.SEEN is -1)\n                onReceiveRawMessage message\n                @emit 'change'\n\n        handle ActionTypes.RECEIVE_RAW_MESSAGES, (messages) ->\n            for message in messages when message?\n                onReceiveRawMessage message\n            @emit 'change'\n\n        handle ActionTypes.REMOVE_ACCOUNT, (accountID) ->\n            AppDispatcher.waitFor [AccountStore.dispatchToken]\n            _messages = _messages.filter(isntAccount(accountID)).toOrderedMap()\n            @emit 'change'\n\n        handle ActionTypes.MESSAGE_TRASH_REQUEST, ({target, ref}) ->\n            messages = _getMixed target\n            target.subject = messages[0]?.get('subject')\n            target.accountID = messages[0].get('accountID')\n            account = AccountStore.getByID messages[0]?.get('accountID')\n            trashBoxID = account?.get? 'trashMailbox'\n            _addInFlight {type: 'trash', trashBoxID, messages, ref}\n            _fixCurrentMessage target\n            @emit 'change'\n\n        handle ActionTypes.MESSAGE_TRASH_SUCCESS, ({target, updated, ref}) ->\n            _undoable[ref] =_removeInFlight ref\n            for message in updated\n                if message._deleted\n                    _messages = _messages.remove message.id\n                else\n                    onReceiveRawMessage message\n            @emit 'change'\n\n        handle ActionTypes.MESSAGE_TRASH_FAILURE, ({target, ref}) ->\n            _removeInFlight ref\n            @emit 'change'\n\n        handle ActionTypes.MESSAGE_FLAGS_REQUEST, ({target, op, flag, ref}) ->\n            messages = _getMixed target\n            target.subject = messages[0]?.get('subject')\n            target.accountID = messages[0].get('accountID')\n            _addInFlight {type: 'flag', op, flag, messages, ref}\n            @emit 'change'\n\n        handle ActionTypes.MESSAGE_FLAGS_SUCCESS, ({target, updated, ref}) ->\n            _removeInFlight ref\n            onReceiveRawMessage message for message in updated\n            @emit 'change'\n\n        handle ActionTypes.MESSAGE_FLAGS_FAILURE, ({target, ref}) ->\n            _removeInFlight ref\n            @emit 'change'\n\n        handle ActionTypes.MESSAGE_MOVE_REQUEST, ({target, from, to, ref}) ->\n            messages = _getMixed target\n            target.subject = messages[0]?.get('subject')\n            target.accountID = messages[0].get('accountID')\n            _addInFlight {type: 'move', from, to, messages, ref}\n            _fixCurrentMessage target\n            @emit 'change'\n\n        handle ActionTypes.MESSAGE_MOVE_SUCCESS, ({target, updated, ref}) ->\n            _undoable[ref] =_removeInFlight ref\n            onReceiveRawMessage message for message in updated\n            @emit 'change'\n\n        handle ActionTypes.MESSAGE_MOVE_FAILURE, ({target, ref}) ->\n            _removeInFlight ref\n            @emit 'change'\n\n        handle ActionTypes.MESSAGE_UNDO_TIMEOUT, ({ref}) ->\n            delete _undoable[ref]\n\n        handle ActionTypes.MESSAGE_FETCH_REQUEST, ({mailboxID}) ->\n            # There may be more than one concurrent fetching request\n            # so we use a counter instead of a boolean\n            _fetching++\n            @emit 'change'\n\n        handle ActionTypes.MESSAGE_FETCH_FAILURE, ->\n            _fetching--\n            @emit 'change'\n\n        handle ActionTypes.MESSAGE_FETCH_SUCCESS, ({fetchResult}) ->\n            _fetching--\n            handleFetchResult fetchResult\n            @emit 'change'\n\n        handle ActionTypes.CONVERSATION_FETCH_SUCCESS, ({updated}) ->\n            for message in updated\n                onReceiveRawMessage message\n            @emit 'change'\n\n        handle ActionTypes.MESSAGE_SEND, (message) ->\n            onReceiveRawMessage message\n            @emit 'change'\n\n        handle ActionTypes.LIST_FILTER, (filter) ->\n            _messages  = _messages.clear()\n            if _filter is filter\n                _filter = '-'\n            else\n                _filter = filter\n            _params =\n                after: '-'\n                flag: _filter\n                before: '-'\n                pageAfter: '-'\n                sort : _params.sort\n\n        handle ActionTypes.LIST_SORT, (sort) ->\n            _messages    = _messages.clear()\n            _sortField   = sort.field\n            if sort.order?\n                newOrder = sort.order\n                _sortOrder = if sort.order is '-' then 1 else -1\n            else\n                currentField = _params.sort.substr(1)\n                currentOrder = _params.sort.substr(0, 1)\n                if currentField is sort.field\n                    newOrder   = if currentOrder is '+' then '-' else '+'\n                    _sortOrder = -1 * _sortOrder\n                else\n                    _sortOrder = -1\n                    if sort.field is 'date'\n                        newOrder   = '-'\n                    else\n                        newOrder   = '+'\n            _params =\n                after: sort.after or '-'\n                flag: _params.flag\n                before: sort.before or '-'\n                pageAfter: '-'\n                sort : newOrder + sort.field\n\n        handle ActionTypes.LAST_ACTION, (action) ->\n            _prevAction = action\n\n        handle ActionTypes.MESSAGE_CURRENT, (value) ->\n            @setCurrentID value.messageID, value.conv\n            @emit 'change'\n\n        handle ActionTypes.SELECT_ACCOUNT, (value) ->\n            @setCurrentID null\n            _filter = '-'\n            _params =\n                sort: '-date'\n\n        handle ActionTypes.RECEIVE_MESSAGE_DELETE, (id) ->\n            _messages = _messages.remove id\n            @emit 'change'\n\n        handle ActionTypes.MAILBOX_EXPUNGE, (mailboxID) ->\n            _messages = _messages.filter(notInMailbox(mailboxID)).toOrderedMap()\n            @emit 'change'\n\n\n    ###\n        Public API\n    ###\n    getByID: (messageID) -> msg = _messages.get(messageID) or null\n\n    ###*\n    * Get messages from mailbox, with optional pagination\n    *\n    * @param {String}  mailboxID\n    * @param {Boolean} conversation\n    *\n    * @return {Array}\n    ###\n    getMessagesByMailbox: (mailboxID, useConversations) ->\n        conversationIDs = []\n\n        sequence = _messagesWithInFlights().filter inMailbox mailboxID\n\n        if useConversations\n            # one message of each conversation\n            sequence = sequence.filter dedupConversation()\n\n        sequence = sequence.sort(__getSortFunction _sortField, _sortOrder)\n\n        _currentMessages = sequence.toOrderedMap()\n\n        return _currentMessages\n\n    getCurrentID: ->\n        return _currentID\n\n    setCurrentID: (messageID, conv) ->\n        if conv?\n            # this will set current conversation and conversationID\n            conversationID = @getByID(messageID)?.get 'conversationID'\n        _currentID = messageID\n        _currentCID = conversationID\n\n    getCurrentConversationID: ->\n        return _currentCID\n\n    getPreviousMessage: (isConv) ->\n        if isConv? and isConv\n            if not _conversationMemoize?\n                return null\n            # Conversations displayed\n            idx = _conversationMemoize.findIndex (message) ->\n                return _currentID is message.get 'id'\n            if idx < 0\n                return null\n            else if idx is _conversationMemoize.length - 1\n                # We need first message of previous conversation\n                keys = Object.keys _currentMessages.toJS()\n                idx = keys.indexOf(_conversationMemoize.last().get('id'))\n                if idx < 1\n                    return null\n                else\n                    currentMessage = _currentMessages.get(keys[idx - 1])\n                    convID = currentMessage?.get('conversationID')\n                    return null if not convID?\n                    prev = _messages.filter (message) ->\n                        message.get('conversationID') is convID\n                    .sort reverseDateSort\n                    .first()\n                    return prev\n            else\n                return _conversationMemoize.get(idx + 1)\n        else\n            keys = Object.keys _currentMessages.toJS()\n            idx = keys.indexOf _currentID\n            return if idx is -1 then null\n            else _currentMessages.get keys[idx - 1]\n\n    getNextMessage: (isConv) ->\n        if isConv? and isConv\n\n            if not _conversationMemoize?\n                return null\n            # Conversations displayed\n            idx = _conversationMemoize.findIndex (message) ->\n                return _currentID is message.get 'id'\n            if idx < 0\n                return null\n            else if idx is 0\n                # We need first message of next conversation\n                keys = Object.keys _currentMessages.toJS()\n                idx = keys.indexOf(_conversationMemoize.last().get('id'))\n                if idx is -1 or idx is (keys.length - 1)\n                    return null\n                else\n                    return _currentMessages.get keys[idx + 1]\n            else\n                return _conversationMemoize.get(idx - 1)\n        else\n            if not _currentID\n                return _currentMessages?.first()\n\n            keys = Object.keys _currentMessages.toJS()\n            idx = keys.indexOf _currentID\n            if idx is -1 or idx is (keys.length - 1)\n                return null\n            else\n                return _currentMessages.get keys[idx + 1]\n\n    getNextOrPrevious: (isConv) ->\n        @getNextMessage(isConv) or @getPreviousMessage(isConv)\n\n    getConversation: (conversationID) ->\n        _conversationMemoize = _messagesWithInFlights()\n            .filter (message) ->\n                message.get('conversationID') is conversationID\n            .sort reverseDateSort\n            .toVector()\n\n        return _conversationMemoize\n\n    # Retrieve a batch of message with various criteria\n    # target - is an {Object} with a property messageID or messageIDs or\n    #          conversationID or conversationIDs\n    #\n    # Returns an {Array} of {Immutable.Map} messages\n    getMixed: (target) ->\n        _getMixed target\n\n    getConversationsLength: -> return _conversationLengths\n\n    getParams: -> return _params\n\n    getCurrentFilter: -> return _filter\n\n    getPrevAction: -> return _prevAction\n\n    isFetching: ->\n        return _fetching > 0\n\n    isUndoable: (ref) ->\n        _undoable[ref]?\n\n    getUndoableRequest: (ref) ->\n        _undoable[ref]\n\nmodule.exports = self = new MessageStore()\n\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes} = require '../constants/app_constants'\n\nrefreshesToImmutable = (refreshes) ->\n    Immutable.Sequence refreshes\n    # sets objectID as index\n    .mapKeys (_, refresh) -> return refresh.objectID\n    .map (refresh) -> Immutable.fromJS refresh\n    .toOrderedMap()\n\nclass RefreshesStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n    _refreshes = refreshesToImmutable window.refreshes or []\n\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n\n        handle ActionTypes.RECEIVE_REFRESH_STATUS, (refreshes) ->\n            _refreshes = refreshesToImmutable refreshes\n\n        handle ActionTypes.RECEIVE_REFRESH_UPDATE, (refresh) ->\n            refresh = Immutable.Map refresh\n            id = refresh.get('objectID')\n            _refreshes = _refreshes.set(id, refresh).toOrderedMap()\n            @emit 'change'\n\n        handle ActionTypes.RECEIVE_REFRESH_DELETE, (refreshID) ->\n            _refreshes = _refreshes.filter (refresh) ->\n                refresh.get('id') isnt refreshID\n            .toOrderedMap()\n            @emit 'change'\n\n        handle ActionTypes.RECEIVE_REFRESH_NOTIF, (data) ->\n            @emit 'notify', t('notif new title'), body: data.message\n\n\n    getRefreshing: -> _refreshes\n\nmodule.exports = new RefreshesStore()\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes} = require '../constants/app_constants'\n\nclass SearchStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n\n    _query = \"\"\n\n    # search results are a list of message\n    _results = Immutable.OrderedMap.empty()\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.RECEIVE_RAW_SEARCH_RESULTS, (rawResults) ->\n            if rawResults?\n                _results = _results.withMutations (map) ->\n                    rawResults.forEach (rawResult) ->\n                        message = Immutable.Map rawResult\n                        map.set message.get('id'), message\n            else\n                _results = Immutable.OrderedMap.empty()\n\n            @emit 'change'\n\n        handle ActionTypes.CLEAR_SEARCH_RESULTS, ->\n            _results = Immutable.OrderedMap.empty()\n            @emit 'change'\n\n        handle ActionTypes.SET_SEARCH_QUERY, (query) ->\n            _query = query\n            @emit 'change'\n\n\n    ###\n        Public API\n    ###\n    getResults: -> return _results\n\n    getQuery: -> return _query\n\nmodule.exports = new SearchStore()\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes} = require '../constants/app_constants'\n\nclass SettingsStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n    _settings = Immutable.Map window.settings\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.SETTINGS_UPDATED, (settings) ->\n            _settings = Immutable.Map settings\n            @emit 'change'\n\n\n    ###\n        Public API\n    ###\n    get: (settingName = null) ->\n        if settingName?\n            return _settings.get settingName\n        else\n            return _settings\n\n\nmodule.exports = new SettingsStore()\n","XHRUtils = require '../utils/xhr_utils'\n\nActivityUtils = (options) ->\n\n    activity = {}\n\n    XHRUtils.activityCreate options, (error, res) ->\n        if error\n            activity.onerror.call(error)\n        else\n            activity.onsuccess.call(res)\n\n    return activity\n\nmodule.exports = ActivityUtils\n","AccountStore  = require '../stores/account_store'\nMessageStore  = require '../stores/message_store'\nSettingsStore = require '../stores/settings_store'\nLayoutActionCreator  = require '../actions/layout_action_creator'\nMessageActionCreator = require '../actions/message_action_creator'\n\n\nonMessageList = ->\n    actions = [\n        \"account.mailbox.messages\",\n        \"account.mailbox.messages.full\"\n    ]\n    return router.current.firstPanel?.action in actions\n\n\nmodule.exports =\n\n    debugLogs: []\n\n    getCurrentAccount: ->\n        AccountStore.getSelected()?.toJS()\n\n\n    getCurrentMailbox: ->\n        AccountStore.getSelectedMailbox()?.toJS()\n\n\n    getCurrentMessage: ->\n        messageID = MessageStore.getCurrentID()\n        message = MessageStore.getByID messageID\n        return message?.toJS()\n\n\n    getMessage: (id) ->\n        message = MessageStore.getByID id\n        return message?.toJS()\n\n\n    getCurrentConversation: ->\n        conversationID = MessageStore.getCurrentConversationID()\n        if conversationID?\n            return MessageStore.getConversation(conversationID)?.toJS()\n\n\n    getCurrentActions: ->\n        res = []\n        Object.keys(router.current).forEach (panel) ->\n            if router.current[panel]?\n                res.push router.current[panel].action\n        return res\n\n\n    messageNew: ->\n        router.navigate('compose/', {trigger: true})\n\n\n    # update locate (without saving it into settings)\n    setLocale: (lang) ->\n        window.moment.locale lang\n        locales = {}\n        try\n            locales = require \"../locales/#{lang}\"\n        catch err\n            console.log err\n            locales = require \"../locales/en\"\n        polyglot = new Polyglot()\n        # we give polyglot the data\n        polyglot.extend locales\n        # handy shortcut\n        window.t = polyglot.t.bind polyglot\n\n\n    getAccountByLabel: (label) ->\n        return AccountStore.getByLabel label\n\n    getSetting: (key) ->\n        return SettingsStore.get().toJS()[key]\n\n    # warning: don't update setting value server side\n    setSetting: (key, value) ->\n        AppDispatcher = require '../app_dispatcher'\n        {ActionTypes} = require '../constants/app_constants'\n        settings = SettingsStore.get().toJS()\n        if typeof key is 'object'\n            for own k, v of key\n                settings[k] = v\n        else\n            settings[key] = value\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SETTINGS_UPDATED\n            value: settings\n\n    messageNavigate: (direction, inConv) ->\n        if not onMessageList()\n            return\n        conv = inConv and SettingsStore.get('displayConversation') and\n            SettingsStore.get('displayPreview')\n        if direction is 'prev'\n            next = MessageStore.getPreviousMessage conv\n        else\n            next = MessageStore.getNextMessage conv\n        if not next?\n            return\n\n        @messageSetCurrent next\n\n    messageSetCurrent: (message) ->\n        MessageActionCreator.setCurrent message.get('id'), true\n\n        if SettingsStore.get('displayPreview')\n            @messageDisplay message\n\n    ##\n    # Display a message\n    # @params {Immutable} message the message (current one if null)\n    # @params {Boolean}   force   if false do nothing if right panel is not open\n    messageDisplay: (message, force) ->\n        if not message?\n            message = MessageStore.getByID(MessageStore.getCurrentID())\n        if not message?\n            return\n        # return if second panel isn't already open\n        if force is false and not window.router.current.secondPanel?\n            return\n        conversationID = message.get 'conversationID'\n        if SettingsStore.get('displayConversation') and conversationID?\n            action = 'conversation'\n            params =\n                messageID: message.get 'id'\n                conversationID: conversationID\n        else\n            action = 'message'\n            params =\n                messageID: message.get 'id'\n\n        urlOptions =\n            direction: 'second'\n            action: action\n            parameters: params\n        url = window.router.buildUrl urlOptions\n        window.router.navigate url, {trigger: true}\n\n\n    messageClose: ->\n        closeUrl = window.router.buildUrl\n            direction: 'first'\n            action: 'account.mailbox.messages'\n            parameters:\n                accountID: AccountStore.getSelected().get 'id'\n                mailboxID: AccountStore.getSelectedMailbox().get 'id'\n            fullWidth: true\n        window.router.navigate closeUrl, {trigger: true}\n\n\n    messageDeleteCurrent: ->\n        if not onMessageList()\n            return\n        messageID = MessageStore.getCurrentID()\n        if not messageID?\n            return\n        settings = SettingsStore.get()\n        conversation = settings.get('displayConversation')\n        confirm      = settings.get('messageConfirmDelete')\n        if confirm\n            if conversation\n                confirmMessage = t 'list delete conv confirm',\n                    smart_count: 1\n            else\n                confirmMessage = t 'list delete confirm',\n                    smart_count: 1\n        if (not confirm)\n            MessageActionCreator.delete {messageID}\n        else\n            modal =\n                title       : t 'app confirm delete'\n                subtitle    : confirmMessage\n                closeModal  : ->\n                    LayoutActionCreator.hideModal()\n                closeLabel  : t 'app cancel'\n                actionLabel : t 'app confirm'\n                action      : ->\n                    MessageActionCreator.delete {messageID}\n                    LayoutActionCreator.hideModal()\n            LayoutActionCreator.displayModal modal\n\n\n    messageUndo: ->\n        MessageActionCreator.undo()\n\n\n    customEvent: (name, data) ->\n        domEvent = new CustomEvent name, detail: data\n        window.dispatchEvent domEvent\n\n\n    simulateUpdate: ->\n\n        AppDispatcher = require '../app_dispatcher'\n        window.setInterval ->\n            content =\n                \"accountID\": AccountStore.getDefault()?.get('id'),\n                \"id\": AccountStore.getDefaultMailbox()?.get('id'),\n                \"label\": \"INBOX\",\n                \"path\": \"INBOX\",\n                \"tree\": [\"INBOX\"],\n                \"delimiter\": \".\",\n                \"uidvalidity\": Date.now()\n                \"attribs\":[],\n                \"docType\": \"Mailbox\",\n                \"lastSync\": new Date().toISOString(),\n                \"nbTotal\": 467,\n                \"nbUnread\": 0,\n                \"nbRecent\": 5,\n                \"weight\": 1000,\n                \"depth\": 0\n            AppDispatcher.handleServerAction\n                type: 'RECEIVE_MAILBOX_UPDATE'\n                value: content\n        , 5000\n\n\n    notify: (title, options) ->\n        if window.Notification? and SettingsStore.get 'desktopNotifications'\n            new Notification title, options\n        else\n            # If no option given, use title as notification body\n            if not options?\n                options =\n                    body: title\n            # prevent dispatching when already dispatching\n            window.setTimeout ->\n                LayoutActionCreator.notify \"#{title} - #{options.body}\"\n            , 0\n\n\n    # Send errors to serveur\n    # Usage: window.cozyMails.log(new Error('message'))\n    log: (error) ->\n        url = error.stack.split('\\n')[0].split('@')[1]\n            .split(/:\\d/)[0].split('/').slice(0, -2).join('/')\n        window.onerror error.name, url, error.lineNumber, error.colNumber, error\n\n\n    # Debug: allow to dump component tree\n    dump: ->\n        _dump = (root) ->\n            res =\n                children: {}\n                state: {}\n                props: {}\n            for key, value of root.state\n                if (typeof value is 'object')\n                    res.state[key] = _.clone value\n                else\n                    res.state[key] = value\n            for key, value of root.props\n                if (typeof value is 'object')\n                    res.props[key] = _.clone value\n                else\n                    res.props[key] = value\n            for key, value of root.refs\n                res.children[key] = _dump root.refs[key]\n\n            return res\n\n        _dump window.rootComponent\n\n    # Log message into server logs\n    logInfo: (message) ->\n        data =\n            data:\n                type: 'debug'\n                message: message\n        xhr = new XMLHttpRequest()\n        xhr.open 'POST', 'activity', true\n        xhr.setRequestHeader \"Content-Type\", \"application/json;charset=UTF-8\"\n        xhr.send JSON.stringify(data)\n        console.log message\n\n    # Log every Flux action (only in development environment)\n    # Logs can be displayed using `displayLogs`\n    logAction: (action, message) ->\n        if window.app_env is \"development\"\n            # remove some data from action value to lighten the logs\n            actionCleanup = (action) ->\n                act = _.clone action\n                # remove message content\n                cleanMsg = (val) ->\n                    if val?\n                        newVal = _.clone val\n                        delete newVal.headers\n                        delete newVal.html\n                        delete newVal.text\n                        delete newVal.attachments\n                        return newVal\n                if Array.isArray act.value\n                    act.value = act.value.map cleanMsg\n                else\n                    act.value = cleanMsg act.value\n                    if Array.isArray act.value?.messages\n                        act.value.messages = act.value.messages.map cleanMsg\n                return act\n\n            # get call stack\n            stack = new Error().stack or ''\n            stack = stack.split(\"\\n\").filter (trace) ->\n                return /app.js/.test(trace.split('@'))\n            .map (trace) ->\n                return trace.split('@')[0]\n\n            # store logs\n            _log =\n                date: new Date().toISOString()\n                stack: stack.splice(2)\n            if action?\n                _log.action = actionCleanup action\n            if message?\n                _log.message = message\n            window.cozyMails.debugLogs.unshift _log\n\n            # only keep the last 100 lines of logs\n            window.cozyMails.debugLogs = window.cozyMails.debugLogs.slice 0, 100\n\n    # display action logs in a modal window\n    displayLogs: ->\n        modal =\n            title       : t 'modal please contribute'\n            subtitle    : t 'modal please report'\n            allowCopy   : true\n            closeModal  : ->\n                LayoutActionCreator.hideModal()\n            closeLabel  : t 'app alert close'\n            content     : React.DOM.pre\n                style: \"max-height\": \"300px\",\n                \"word-wrap\": \"normal\",\n                    JSON.stringify(window.cozyMails.debugLogs, null, 4)\n        LayoutActionCreator.displayModal modal\n\n    # clear action logs\n    clearLogs: ->\n        window.cozyMails.debugLogs = []\n\n","###\nColorHash\n\nThis file exports a simple method that return an hex color from a given string.\nA same string will always returns the same color.\n###\n\nhue2rgb = (p,q,t) ->\n    if t < 0 then t += 1\n    if t > 1 then t -= 1\n    if t < 1/6 then return p + (q - p) * 6 * t\n    if t < 1/2 then return q\n    if t < 2/3 then return p + (q - p) * (2/3 - t) * 6\n    return p\n\nhslToRgb = (h, s, l) ->\n    if s is 0 then r = g = b = l\n    else\n        q = if l < 0.5 then l * (1 + s) else l + s - l * s\n        p = 2 * l - q\n        r = hue2rgb p, q, h + 1/3\n        g = hue2rgb p, q, h\n        b = hue2rgb p, q, h - 1/3\n\n    color = ((1 << 24) + (r*255 << 16) + (g*255 << 8) + parseInt(b*255))\n    return \"##{color.toString(16).slice 1}\"\n\nmodule.exports = (tag) ->\n    hash = 0\n    for i in [0..tag.length-1]\n        hash = (tag.charCodeAt(i) + (hash << 5) - hash)\n\n    h = (hash% 100)/100\n    s = (hash% 1000)/1000\n    l = 0.5 + 0.2*(hash% 2)/ 2\n    colour = hslToRgb h, s, l\n    return colour\n","\nmodule.exports = DomUtils =\n\n    # Check if an element is inside visible viewport\n    # @params DOMElement node\n    isVisible: (node) ->\n        # Get the element bounding client rect and check if it's inside\n        # visible viewport\n        rect   = node.getBoundingClientRect()\n        height = window.innerHeight or document.documentElement.clientHeight\n        width  = window.innerWidth  or document.documentElement.clientWidth\n        if height is 0 or width is 0\n            # when iframe is in background, height and width are 0\n            # so prevent to always return true when application is not\n            # in foreground\n            return false\n        else\n            return rect.bottom <= ( height + 0 ) and rect.top >= 0\n\n\n","\nmodule.exports = FileUtils =\n\n    dataURItoBlob: (dataURI) ->\n        if (dataURI.split(',')[0].indexOf('base64') >= 0)\n            byteString = atob(dataURI.split(',')[1])\n        else\n            byteString = window.unescape(dataURI.split(',')[1])\n        res =\n            mime: dataURI.split(',')[0].split(':')[1].split(';')[0],\n            blob: new Uint8Array(byteString.length)\n        for i in [0..byteString.length]\n            res.blob[i] = byteString.charCodeAt(i)\n        return res\n\n    fileToDataURI: (file, cb) ->\n        fileReader = new FileReader()\n        fileReader.readAsDataURL file\n        fileReader.onload = ->\n            cb fileReader.result\n","TIMEOUT = 3000 # 3 s\n\nmodule.exports = class IntentManager\n\n    constructor : ->\n        @talker = new Talker window.parent, '*'\n\n    send : (nameSpace, intent, timeout) ->\n        @talker.timeout = if timeout then timeout else TIMEOUT\n        @talker.send 'nameSpace', intent\n","{ComposeActions} = require '../constants/app_constants'\nContactStore     = require '../stores/contact_store'\n\n\nQUOTE_STYLE = \"margin-left: 0.8ex; padding-left: 1ex; border-left: 3px solid #34A6FF;\"\n\n# Style is required to clean pre and p styling in compose editor.\n# It is removed by the visulasation iframe that's why we need to put\n# style at the p level too.\nCOMPOSE_STYLE = \"\"\"\n<style>\np {margin: 0;}\npre {background: transparent; border: 0}\n</style>\n\"\"\"\n\n\n\nmodule.exports = MessageUtils =\n\n\n    # Build string showing address from an `adress` object. If a mail is given\n    # in the `address` object, the string return this:\n    #\n    # Sender Name <email@sender.com>\n    displayAddress: (address, full = false) ->\n        if full\n            if address.name? and address.name isnt \"\"\n                return \"\\\"#{address.name}\\\" <#{address.address}>\"\n            else\n                return \"#{address.address}\"\n        else\n            if address.name? and address.name isnt \"\"\n                return address.name\n            else\n                return address.address.split('@')[0]\n\n\n    # Build a string from a list of `adress` objects. Addresses are\n    # separated by a coma. An address is either the email adress either this:\n    #\n    # Sender Name <email@sender.com>\n    displayAddresses: (addresses, full = false) ->\n        if not addresses?\n            return \"\"\n        else\n            res = []\n            for item in addresses\n                if not item?\n                    break\n                res.push(MessageUtils.displayAddress item, full)\n            return res.join \", \"\n\n\n    # From a text, build an `address` object (name and address).\n    # Add a isValid field if the given email is well formed.\n    parseAddress: (text) ->\n        text = text.trim()\n        if match = text.match /\"{0,1}(.*)\"{0,1} <(.*)>/\n            address =\n                name: match[1]\n                address: match[2]\n        else\n            address =\n                address: text.replace(/^\\s*/, '')\n\n        # Test email validity\n        emailRe = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\n        address.isValid = address.address.match emailRe\n\n        address\n\n\n    # Extract a reply address from a `message` object.\n    getReplyToAddress: (message) ->\n        reply = message.get 'replyTo'\n        from = message.get 'from'\n        if (reply? and reply.length isnt 0)\n            return reply\n        else\n            return from\n\n    # Add signature at the end of the message\n    addSignature: (message, signature) ->\n        message.text += \"\\n\\n-- \\n#{signature}\"\n        signatureHtml = signature.replace /\\n/g, '<br>'\n        message.html += \"\"\"\n        <p><br></p><p id=\"signature\">-- \\n<br>#{signatureHtml}</p>\n            \"\"\"\n\n    # Build message to put in the email composer depending on the context\n    # (reply, reply to all, forward or simple message).\n    # It add appropriate headers to the message. It adds style tags when\n    # required too.\n    # It adds signature at the end of the zone where the user will type.\n    makeReplyMessage: (myAddress, inReplyTo, action, inHTML, signature) ->\n        message =\n            composeInHTML: inHTML\n            attachments: Immutable.Vector.empty()\n\n        if inReplyTo\n            message.accountID = inReplyTo.get 'accountID'\n            message.conversationID = inReplyTo.get 'conversationID'\n            dateHuman = @formatReplyDate inReplyTo.get 'createdAt'\n            sender = @displayAddresses inReplyTo.get 'from'\n\n            text = inReplyTo.get 'text'\n            html = inReplyTo.get 'html'\n\n            text = '' unless text? # Some message have no content, only attachements\n\n            if text? and not html? and inHTML\n                try\n                    html = markdown.toHTML text\n                catch e\n                    console.error \"Error converting message to Markdown: #{e}\"\n                    html = \"<div class='text'>#{text}</div>\"\n\n            if html? and not text? and not inHTML\n                text = toMarkdown html\n\n            message.inReplyTo  = [inReplyTo.get 'id']\n            message.references = inReplyTo.get('references') or []\n            message.references = message.references.concat message.inReplyTo\n\n        if signature? and signature.length > 0\n            isSignature = true\n        else\n            isSignature = false\n\n        options = {\n            message\n            inReplyTo\n            dateHuman\n            sender\n            text\n            html\n            signature\n            isSignature\n        }\n\n        switch action\n\n            when ComposeActions.REPLY\n                @setMessageAsReply options\n\n            when ComposeActions.REPLY_ALL\n                @setMessageAsReplyAll options\n\n            when ComposeActions.FORWARD\n                @setMessageAsForward options\n\n            when null\n                @setMessageAsDefault options\n\n        # remove my address from dests\n        notMe = (dest) -> return dest.address isnt myAddress\n        message.to = message.to.filter notMe\n        message.cc = message.cc.filter notMe\n        return message\n\n\n    # Build message to display in composer in case of a reply to a message:\n    # * set subject automatically (Re: previous subject)\n    # * Set recipient based on sender\n    # * add a style header for proper display\n    # * Add quote of the previous message at the beginning of the message\n    # * adds a signature at the message end.\n    setMessageAsReply: (options) ->\n        {\n            message\n            inReplyTo\n            dateHuman\n            sender\n            text\n            html\n            signature\n            isSignature\n        } = options\n\n        params = date: dateHuman, sender: sender\n        separator = t 'compose reply separator', params\n        message.to = @getReplyToAddress inReplyTo\n        message.cc = []\n        message.bcc = []\n        message.subject = @getReplySubject inReplyTo\n        message.text = separator + @generateReplyText(text) + \"\\n\"\n        message.html = \"\"\"\n            #{COMPOSE_STYLE}\n            <p>#{separator}<span class=\"originalToggle\"> … </span></p>\n            <blockquote style=\"#{QUOTE_STYLE}\">#{html}</blockquote>\n            <p><br></p>\n            \"\"\"\n        if isSignature\n            @addSignature message, signature\n\n    # Build message to display in composer in case of a reply to all message:\n    # * set subject automatically (Re: previous subject)\n    # * Set recipients based on all people set in the conversation.\n    # * add a style header for proper display\n    # * Add quote of the previous message at the beginning of the message\n    # * adds a signature at the message end.\n    setMessageAsReplyAll: (options) ->\n        {\n            message\n            inReplyTo\n            dateHuman\n            sender\n            text\n            html\n            signature\n            isSignature\n        } = options\n\n        params = date: dateHuman, sender: sender\n        separator = t 'compose reply separator', params\n        message.to = @getReplyToAddress inReplyTo\n        # filter to don't have same address twice\n        toAddresses = message.to.map (dest) -> return dest.address\n\n        message.cc = [].concat(\n            inReplyTo.get('from'),\n            inReplyTo.get('to'),\n            inReplyTo.get('cc')\n        ).filter (dest) ->\n            return dest? and toAddresses.indexOf(dest.address) is -1\n        message.bcc = []\n\n        message.subject = @getReplySubject inReplyTo\n        message.text = separator + @generateReplyText(text) + \"\\n\"\n        message.html = \"\"\"\n            #{COMPOSE_STYLE}\n            <p>#{separator}<span class=\"originalToggle\"> … </span></p>\n            <blockquote style=\"#{QUOTE_STYLE}\">#{html}</blockquote>\n            <p><br></p>\n            \"\"\"\n        if isSignature\n            @addSignature message, signature\n\n\n    # Build message to display in composer in case of a message forwarding:\n    # * set subject automatically (fwd: previous subject)\n    # * add a style header for proper display\n    # * Add forward information at the beginning of the message\n    # We don't add signature here (see Thunderbird behavior)\n    setMessageAsForward: (options) ->\n        {\n            message\n            inReplyTo\n            dateHuman\n            sender\n            text\n            html\n            signature\n            isSignature\n        } = options\n\n        addresses = inReplyTo.get('to')\n        .map (address) -> address.address\n        .join ', '\n\n        senderInfos = @getReplyToAddress inReplyTo\n        senderName = \"\"\n\n        senderAddress =\n        if senderInfos.length > 0\n            senderName = senderInfos[0].name\n            senderAddress = senderInfos[0].address\n\n        if senderName.length > 0\n            fromField = \"#{senderName} &lt;#{senderAddress}&gt;\"\n        else\n            fromField = senderAddress\n\n        separator = \"\"\"\n\n----- #{t 'compose forward header'} ------\n#{t 'compose forward subject'} #{inReplyTo.get 'subject'}\n#{t 'compose forward date'} #{dateHuman}\n#{t 'compose forward from'} #{fromField}\n#{t 'compose forward to'} #{addresses}\n\n\"\"\"\n        textSeparator = separator.replace('&lt;', '<').replace('&gt;', '>')\n        textSeparator = textSeparator.replace('<pre>', '').replace('</pre>', '')\n        htmlSeparator = separator.replace /(\\n)+/g, '<br>'\n\n        @setMessageAsDefault options\n        message.subject = \"\"\"\n            #{t 'compose forward prefix'}#{inReplyTo.get 'subject'}\n            \"\"\"\n        message.text = textSeparator + text\n        message.html = \"#{COMPOSE_STYLE}\"\n\n        if isSignature\n            @addSignature message, signature\n\n        message.html += \"\"\"\n\n<p>#{htmlSeparator}</p><p><br></p>#{html}\n\"\"\"\n        message.attachments = inReplyTo.get 'attachments'\n\n        return message\n\n\n\n    # Clear all fields of the message object.\n    # Add signature if given.\n    setMessageAsDefault: (options) ->\n        {\n            message\n            inReplyTo\n            dateHuman\n            sender\n            text\n            html\n            signature\n            isSignature\n        } = options\n\n        message.to = []\n        message.cc = []\n        message.bcc = []\n        message.subject = ''\n        message.text = ''\n        message.html = \"#{COMPOSE_STYLE}\\n<p><br></p>\"\n\n        if isSignature\n            @addSignature message, signature\n\n        return message\n\n\n    # Generate reply text by adding `>` before each line of the given text.\n    generateReplyText: (text) ->\n        text = text.split '\\n'\n        res  = []\n        text.forEach (line) ->\n            res.push \"> #{line}\"\n        return res.join \"\\n\"\n\n\n    # Guess simple attachment type from mime type.\n    getAttachmentType: (type) ->\n        return null unless type\n        sub = type.split '/'\n\n        switch sub[0]\n\n            when 'audio', 'image', 'text', 'video'\n                return sub[0]\n\n            when \"application\"\n                switch sub[1]\n\n                    when \"vnd.ms-excel\",\\\n                         \"vnd.oasis.opendocument.spreadsheet\",\\\n                         \"vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n                        return \"spreadsheet\"\n\n                    when \"msword\",\\\n                         \"vnd.ms-word\",\\\n                         \"vnd.oasis.opendocument.text\",\\\n                         \"vnd.openxmlformats-officedocument.wordprocessingm\" + \\\n                         \"l.document\"\n                        return \"word\"\n\n                    when \"vns.ms-powerpoint\",\\\n                         \"vnd.oasis.opendocument.presentation\",\\\n                         \"vnd.openxmlformats-officedocument.presentationml.\" + \\\n                         \"presentation\"\n                        return \"presentation\"\n\n                    when \"pdf\" then return sub[1]\n\n                    when \"gzip\", \"zip\" then return 'archive'\n\n\n    # Format date to a conventional format for reply headers.\n    formatReplyDate: (date) ->\n        date = moment() unless date?\n        date = moment date\n        date.format 'lll'\n\n\n    # Display date as a readable string.\n    # Make it shorter if compact is set to true.\n    formatDate: (date, compact) ->\n\n        unless date?\n            return null\n\n        else\n            today = moment()\n            date  = moment date\n\n            if date.isBefore today, 'year'\n                formatter = 'DD/MM/YYYY'\n\n            else if date.isBefore today, 'day'\n\n                if compact? and compact\n                    formatter = 'L'\n                else\n                    formatter = 'MMM DD'\n\n            else\n                formatter = 'HH:mm'\n\n            return date.format formatter\n\n\n    # Return avatar corresponding to sender by matching his email address with\n    # addresses from existing contacts.\n    getAvatar: (message) ->\n        if message.get('from')[0]?\n            return ContactStore.getAvatar message.get('from')[0].address\n        else\n            return null\n\n\n    # Remove from given string:\n    # * html tags\n    # * extra spaces between reply markers and text\n    # * empty reply lines\n    cleanReplyText: (html) ->\n\n        # Convert HTML to markdown\n        try\n            result = html.replace /<(style>)[^\\1]*\\1/gim, ''\n            result = toMarkdown result\n        catch\n            if html?\n                result = html.replace /<(style>)[^\\1]*\\1/gim, ''\n                result = html.replace /<[^>]*>/gi, ''\n\n        # convert HTML entities\n        tmp = document.createElement 'div'\n        tmp.innerHTML = result\n        result = tmp.textContent\n\n        # Make citation more human readable.\n        result = result.replace />[ \\t]+/ig, '> '\n        result = result.replace /(> \\n)+/g, '> \\n'\n        result\n\n\n    # Add additional html tags to HTML replies:\n    # * add style block to change the blockquotes styles.\n    # * make \"pre\" without background\n    # * remove margins to \"p\"\n    wrapReplyHtml: (html) ->\n        html = html.replace /<p>/g, '<p style=\"margin: 0\">'\n        return \"\"\"\n            <style type=\"text/css\">\n            blockquote {\n                margin: 0.8ex;\n                padding-left: 1ex;\n                border-left: 3px solid #34A6FF;\n            }\n            p {margin: 0;}\n            pre {background: transparent; border: 0}\n            </style>\n            #{html}\n            \"\"\"\n\n    # Add a reply prefix to the current subject. Do not add it again if it's\n    # already there.\n    getReplySubject: (inReplyTo) ->\n        subject =  inReplyTo.get('subject') or ''\n        replyPrefix = t 'compose reply prefix'\n        if subject.indexOf(replyPrefix) isnt 0\n            subject = \"#{replyPrefix}#{subject}\"\n        subject\n\n    # To keep HTML markup light, create the contact tooltip dynamicaly\n    # on mouse over\n    # options:\n    #  - container  : tooltip container\n    #  - delay      : nb of miliseconds to wait before displaying tooltip\n    #  - showOnClick: set to true to display tooltip when clicking on element\n    tooltip: (node, address, onAdd, options) ->\n        options ?= {}\n        timeout = null\n        doAdd = (e) ->\n            e.preventDefault()\n            e.stopPropagation()\n            onAdd address\n        addTooltip = (e) ->\n            if node.dataset.tooltip\n                return\n            node.dataset.tooltip = true\n            contact = ContactStore.getByAddress address.address\n            avatar  = contact?.get 'avatar'\n            add   = ''\n            image = ''\n            if contact?\n                if avatar?\n                    image = \"<img class='avatar' src=#{avatar}>\"\n                else\n                    image = \"<div class='no-avatar'>?</div>\"\n                image = \"\"\"\n                <div class=\"tooltip-avatar\">\n                  <a href=\"/#apps/contacts/contact/#{contact.get 'id'}\" target=\"blank\">\n                    #{image}\n                  </a>\n                </div>\n                \"\"\"\n            else\n                if onAdd?\n                    add = \"\"\"\n                    <p class=\"tooltip-toolbar\">\n                      <button class=\"btn btn-cozy btn-add\" type=\"button\">\n                      #{t 'contact button label'}\n                      </button>\n                    </p>\n                    \"\"\"\n            template = \"\"\"\n                <div class=\"tooltip\" role=\"tooltip\">\n                    <div class=\"tooltip-arrow\"></div>\n                    <div class=\"tooltip-content\">\n                        #{image}\n                        <div>\n                        #{address.name}\n                        #{if address.name then '<br>' else ''}\n                        &lt;#{address.address}&gt;\n                        </div>\n                        #{add}\n                    </div>\n                </div>'\n                \"\"\"\n            options =\n                title: address.address\n                template: template\n                trigger: 'manual'\n                placement: 'auto top'\n                container: options.container or node.parentNode\n            jQuery(node).tooltip(options).tooltip('show')\n            tooltipNode = jQuery(node).data('bs.tooltip').tip()[0]\n            if parseInt(tooltipNode.style.left, 10) < 0\n                tooltipNode.style.left = 0\n            rect = tooltipNode.getBoundingClientRect()\n            mask = document.createElement 'div'\n            mask.classList.add 'tooltip-mask'\n            mask.style.top    = (rect.top - 8) + 'px'\n            mask.style.left   = (rect.left - 8) + 'px'\n            mask.style.height = (rect.height + 32) + 'px'\n            mask.style.width  = (rect.width  + 16) + 'px'\n            document.body.appendChild mask\n            mask.addEventListener 'mouseout', (e) ->\n                if not ( rect.left < e.pageX < rect.right) or\n                   not ( rect.top  < e.pageY < rect.bottom)\n                    mask.parentNode.removeChild mask\n                    removeTooltip()\n            if onAdd?\n                addNode = tooltipNode.querySelector('.btn-add')\n                if addNode?\n                    addNode.addEventListener 'click', doAdd\n        removeTooltip = ->\n            addNode = node.querySelector('.btn-add')\n            if addNode?\n                addNode.removeEventListener 'click', doAdd\n            delete node.dataset.tooltip\n            jQuery(node).tooltip('destroy')\n\n        node.addEventListener 'mouseover', ->\n            timeout = setTimeout ->\n                addTooltip()\n            , options.delay or 1000\n        node.addEventListener 'mouseout', ->\n            clearTimeout timeout\n        if options.showOnClick\n            node.addEventListener 'click', (event) ->\n                event.stopPropagation()\n                addTooltip()\n","helpers =\n    # Display a Bootstrap modal window\n    #\n    # Available options:\n    # title: modal window title\n    # body: modal window body\n    # size: null, 'small' or 'large'\n    # show: if not false, show modal\n    modal: (options) ->\n        win = document.createElement 'div'\n        win.classList.add 'modal'\n        win.classList.add 'fade'\n        win.innerHTML = \"\"\"\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n                            aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                    <h4 class=\"modal-title\"></h4>\n                </div>\n                <div class=\"modal-body\"> </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-default\"\n                            data-dismiss=\"modal\">#{t 'plugin modal close'}\n                    </button>\n                </div>\n            </div>\n        </div>\n        \"\"\"\n        if options.title?\n            win.querySelector('.modal-title').innerHTML = options.title\n        if options.body?\n            if typeof options.body is 'string'\n                win.querySelector('.modal-body').innerHTML = options.body\n            else\n                win.querySelector('.modal-body').appendChild options.body\n        if options.size is 'small'\n            win.querySelector('.modal-dialog').classList.add 'modal-sm'\n        if options.size is 'large'\n            win.querySelector('.modal-dialog').classList.add 'modal-lg'\n        if options.show isnt false\n            document.body.appendChild win\n            window.jQuery(win).modal 'show'\n        return win\n\nmodule.exports =\n\n    init: ->\n        if not window.plugins?\n            window.plugins = {}\n\n        # Observe addition and deletion of plugins\n        #if Object.observe?\n        #    Object.observe window.plugins, (changes) =>\n        #        changes.forEach (change) =>\n        #            if change.type is 'add'\n        #                @activate change.name\n        #            else if change.type is 'delete'\n        #                @deactivate change.name\n\n        window.plugins.helpers = helpers\n\n        # Init every plugins\n        Object.keys(window.plugins).forEach (pluginName) =>\n            pluginConf = window.plugins[pluginName]\n            if pluginConf.url?\n                onLoad = =>\n                    @activate pluginName\n                @loadJS pluginConf.url, onLoad\n            else\n                if pluginConf.active\n                    @activate pluginName\n\n        if MutationObserver?\n\n            config =\n                attributes: false\n                childList: true\n                characterData: false\n                subtree: true\n\n            onMutation = (mutations) ->\n                checkNode = (node, action) ->\n                    if node.nodeType isnt Node.ELEMENT_NODE\n                        return\n\n                    for own pluginName, pluginConf of window.plugins\n                        if pluginConf.active\n                            listener = pluginConf.onAdd if action is 'add'\n                            listener = pluginConf.onDelete if action is 'delete'\n                            if listener? and\n                            listener.condition.bind(pluginConf)(node)\n                                listener.action.bind(pluginConf)(node)\n\n                check = (mutation) ->\n\n                    nodes = Array.prototype.slice.call mutation.addedNodes\n                    checkNode node, 'add' for node in nodes\n\n                    nodes = Array.prototype.slice.call mutation.removedNodes\n                    checkNode node, 'del' for node in nodes\n\n                check mutation for mutation in mutations\n\n            # Observes DOM mutation to see if a plugin should be called\n            observer = new MutationObserver onMutation\n            observer.observe document, config\n\n        else\n            # Dirty fallback for IE\n            # @TODO use polyfill ???\n            setInterval ->\n                for own pluginName, pluginConf of window.plugins\n                    if pluginConf.active\n                        if pluginConf.onAdd?\n                            if pluginConf.onAdd.condition.bind(pluginConf)(document.body)\n                                pluginConf.onAdd.action.bind(pluginConf)(document.body)\n                        if pluginConf.onDelete?\n                            if pluginConf.onDelete.condition.bind(pluginConf)(document.body)\n                                pluginConf.onDelete.action.bind(pluginConf)(document.body)\n\n            , 200\n\n    activate: (key) ->\n        try\n            plugin = window.plugins[key]\n            type   = plugin.type\n            plugin.active = true\n\n            # Add custom events listeners\n            if plugin.listeners?\n                for own event, listener of plugin.listeners\n                    window.addEventListener event, listener.bind(plugin)\n\n            if plugin.onActivate\n                plugin.onActivate()\n\n            if type?\n                for own pluginName, pluginConf of window.plugins\n                    if pluginName is key\n                        continue\n                    if pluginConf.type is type and pluginConf.active\n                        @deactivate pluginName\n\n            event = new CustomEvent('plugin',\n                detail:\n                    action: 'activate'\n                    name: key\n            )\n            window.dispatchEvent event\n        catch e\n            console.log \"Unable to activate plugin #{key}: #{e}\"\n\n    deactivate: (key) ->\n        try\n            plugin = window.plugins[key]\n            plugin.active = false\n\n            # remove custom events listeners\n            if plugin.listeners?\n                for own event, listener of plugin.listeners\n                    window.removeEventListener event, listener\n\n            if plugin.onDeactivate\n                plugin.onDeactivate()\n\n            event = new CustomEvent('plugin',\n                detail:\n                    action: 'deactivate'\n                    name: key\n            )\n            window.dispatchEvent event\n        catch e\n            console.log \"Unable to deactivate plugin #{key}: #{e}\"\n\n    merge: (remote) ->\n        for own pluginName, pluginConf of remote\n            local = window.plugins[pluginName]\n            if local?\n                local.active = pluginConf.active\n            else\n                if pluginConf.url?\n                    window.plugins[pluginName] = pluginConf\n                else\n                    delete remote[pluginName]\n\n        for own pluginName, pluginConf of window.plugins\n            if not remote[pluginName]?\n                remote[pluginName] =\n                    name: pluginConf.name\n                    active: pluginConf.active\n\n    loadJS: (url, onLoad) ->\n        script = document.createElement 'script'\n        script.type  = 'text/javascript'\n        script.async = true\n        script.src   = url\n        if onLoad?\n            script.addEventListener 'load', onLoad\n        document.body.appendChild script\n\n    load: (url) ->\n        # Get absolute path of this script, allowing to load plugins relatives\n        # to it\n        unless /:\\/\\//.test(url)\n            try\n                throw new Error()\n            catch e\n                base = e.stack.split('\\n')[0].split('@')[1].split(/:\\d/)[0].split('/').slice(0, -2).join('/')\n                url = base + '/' + url + '/'\n\n        xhr = new XMLHttpRequest()\n        xhr.open 'GET', url, true\n        xhr.onload = ->\n            parser = new DOMParser()\n            doc = parser.parseFromString(xhr.response, 'text/html')\n            if doc\n                # Chrome doesn't like to iterate on doc.styleSheets\n                Array::forEach.call doc.querySelectorAll('style'), (sheet) ->\n                    style = document.createElement('style')\n                    document.body.appendChild style\n                    Array::forEach.call sheet.sheet.cssRules, (rule, id) ->\n                        style.sheet.insertRule rule.cssText, id\n\n                Array::forEach.call doc.querySelectorAll('script'), (script) ->\n                    s = document.createElement('script')\n                    s.textContent = script.textContent\n                    document.body.appendChild s\n\n            xhr.send()\n","AppDispatcher = require '../app_dispatcher'\n{ActionTypes} = require '../constants/app_constants'\nurl = window.location.origin\npathToSocketIO = \"#{window.location.pathname}socket.io\"\nsocket = io.connect url,\n    path: pathToSocketIO\n    reconnectionDelayMax: 60000\n    reconectionDelay: 2000\n    reconnectionAttempts: 3\n\ndispatchAs = (action) -> (content) ->\n    AppDispatcher.handleServerAction\n        type: action\n        value: content\n\nscope = {}\nsetServerScope = ->\n    socket.emit 'change_scope', scope\n\n\n# socket.on 'refresh.status', dispatchAs ActionTypes.RECEIVE_REFRESH_STATUS\n# socket.on 'refresh.create', dispatchAs ActionTypes.RECEIVE_REFRESH_UPDATE\n# socket.on 'refresh.update', dispatchAs ActionTypes.RECEIVE_REFRESH_UPDATE\n# socket.on 'refresh.delete', dispatchAs ActionTypes.RECEIVE_REFRESH_DELETE\n\nsocket.on 'message.create', dispatchAs ActionTypes.RECEIVE_RAW_MESSAGE_REALTIME\nsocket.on 'message.update', dispatchAs ActionTypes.RECEIVE_RAW_MESSAGE\nsocket.on 'message.delete', dispatchAs ActionTypes.RECEIVE_MESSAGE_DELETE\n\nsocket.on 'mailbox.update', dispatchAs ActionTypes.RECEIVE_MAILBOX_UPDATE\n\nsocket.on 'connect', ->\n    setServerScope()\nsocket.on 'reconnect', ->\n    setServerScope()\n\nsocket.on 'refresh.notify', dispatchAs ActionTypes.RECEIVE_REFRESH_NOTIF\n\nexports.acknowledgeRefresh = (taskid) ->\n    socket.emit 'mark_ack', taskid\n\n\nexports.changeRealtimeScope = (boxid, date) ->\n    scope =\n        mailboxID: boxid\n        before: date\n    setServerScope()\n","{MailboxFlags} = require '../../constants/app_constants'\n\nmodule.exports = AccountTranslator =\n\n    mailboxToImmutable: (raw) ->\n\n        raw.depth = raw.tree.length - 1\n\n        box = Immutable.Map raw\n\n    # Creates an immutable account from a raw account object\n    toImmutable: (raw) ->\n\n        # Used to sort mailboxes\n        last = {}\n        weight1 = 900\n        weight2 = 400\n        # Try to detect special mailboxes, first with flags, then by name\n        # Already done on server, except for TEST accounts\n        raw.mailboxes ?= []\n        if not raw.draftMailbox? or\n           not raw.sentMailbox? or\n           not raw.trashMailbox?\n            raw.mailboxes.forEach (box) ->\n                # If needed, use mailboxes attribs to set draft, sent and trash\n                if not raw.draftMailbox? and MailboxFlags.DRAFT in box.attribs\n                    raw.draftMailbox = box.id\n                if not raw.sentMailbox? and MailboxFlags.SENT in box.attribs\n                    raw.sentMailbox = box.id\n                if not raw.trashMailbox? and MailboxFlags.TRASH in box.attribs\n                    raw.trashMailbox = box.id\n        if not raw.draftMailbox? or\n           not raw.sentMailbox? or\n           not raw.trashMailbox?\n            raw.mailboxes.forEach (box) ->\n                if not raw.draftMailbox? and /draft/i.test box.label\n                    raw.draftMailbox = box.id\n                if not raw.sentMailbox? and /sent/i.test box.label\n                    raw.sentMailbox = box.id\n                if not raw.trashMailbox? and /trash/i.test box.label\n                    raw.trashMailbox = box.id\n\n        # Creates Immutable OrderedMap of mailboxes\n        mailboxes = Immutable.Sequence raw.mailboxes\n            .mapKeys (_, box) -> box.id\n            .map (box) ->\n\n                box.depth = box.tree.length - 1\n\n                # fake weight for sort\n                if box.depth is 0\n                    label = box.label.toLowerCase()\n                    if label is 'inbox'\n                        box.weight = 1000\n                    else if (box.attribs.length > 0 or\n                            /draft/.test(label) or\n                            /sent/.test(label) or\n                            /trash/.test(label))\n                        box.weight = weight1\n                        weight1 -= 5\n                    else\n                        box.weight = weight2\n                        weight2 -= 5\n                    last[box.depth] = box.weight\n                else\n                    box.weight = last[box.depth - 1] - 0.1\n\n                return AccountTranslator.mailboxToImmutable box\n\n            .toOrderedMap()\n\n\n        raw.mailboxes = mailboxes\n        return Immutable.Map raw\n","request = superagent\n\nAccountTranslator = require './translators/account_translator'\n\nSettingsStore = require '../stores/settings_store'\n\nmodule.exports =\n\n\n    changeSettings: (settings, callback) ->\n        request.put \"settings\"\n        .set 'Accept', 'application/json'\n        .send settings\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in changeSettings\", settings, res.body?.error\n                callback t('app error')\n\n    fetchMessage: (emailID, callback) ->\n        request.get \"message/#{emailID}\"\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in fetchMessage\", emailID, res.body?.error\n                callback t('app error')\n\n    fetchConversation: (conversationID, callback) ->\n        request.get \"messages/batchFetch?conversationID=#{conversationID}\"\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                res.body.conversationLengths = {}\n                res.body.conversationLengths[conversationID] = res.body.length\n                callback null, res.body\n            else\n                console.log \"Error in fetchConversation\", conversationID,\n                    res.body?.error\n                callback t('app error')\n\n\n    fetchMessagesByFolder: (mailboxID, query, callback) ->\n        for own key, val of query\n            if val is '-' or val is 'all'\n                delete query[key]\n        request.get \"mailbox/#{mailboxID}\"\n        .set 'Accept', 'application/json'\n        .query query\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in fetchMessagesByFolder\", res.body?.error\n                callback t('app error')\n\n    mailboxCreate: (mailbox, callback) ->\n        request.post \"mailbox\"\n        .send mailbox\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in mailboxCreate\", mailbox, res.body?.error\n                callback t('app error')\n\n    mailboxUpdate: (data, callback) ->\n        request.put \"mailbox/#{data.mailboxID}\"\n        .send data\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in mailboxUpdate\", data, res.body?.error\n                callback t('app error')\n\n    mailboxDelete: (data, callback) ->\n        request.del \"mailbox/#{data.mailboxID}\"\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in mailboxDelete\", data, res.body?.error\n                callback t('app error')\n\n    mailboxExpunge: (data, callback) ->\n        request.del \"mailbox/#{data.mailboxID}/expunge\"\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in mailboxExpunge\", data, res.body?.error\n                callback t('app error')\n\n    messageSend: (message, callback) ->\n        req = request.post \"message\"\n        .set 'Accept', 'application/json'\n\n        files = {}\n        message.attachments = message.attachments.map (file) ->\n            files[file.get('generatedFileName')] = file.get 'rawFileObject'\n            return file.remove 'rawFileObject'\n        .toJS()\n\n        req.field 'body', JSON.stringify message\n        for name, blob of files\n            if blob?\n                req.attach name, blob\n\n        req.end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in messageSend\", message, res.body?.error\n                callback res.body?.error?.message\n\n\n    batchFetch: (target, callback) ->\n        body = _.extend {}, target\n        request.put \"messages/batchFetch\"\n        .send target\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                err = res.body?.error.message\n                err ?= new Error 'Network batchFetch'\n                callback err\n\n    batchAddFlag: (target, flag, callback) ->\n        body = _.extend {flag}, target\n        request.put \"messages/batchAddFlag\"\n        .send body\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                err = res.body?.error.message\n                err ?= new Error 'Network batchAddFlag'\n                callback err\n\n    batchRemoveFlag: (target, flag, callback) ->\n        body = _.extend {flag}, target\n        request.put \"messages/batchRemoveFlag\"\n        .send body\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                err = res.body?.error.message\n                err ?= new Error 'Network batchRemoveFlag'\n                callback err\n\n    batchDelete: (target, callback) ->\n        body = _.extend {}, target\n        request.put \"messages/batchTrash\"\n        .send target\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                err = res.body?.error.message\n                err ?= new Error 'Network batchDelete'\n                callback err\n\n    batchMove: (target, from, to, callback) ->\n        body = _.extend {from, to}, target\n        request.put \"messages/batchMove\"\n        .send body\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                err = res.body?.error.message\n                err ?= new Error 'Network batchMove'\n                callback err\n\n    createAccount: (account, callback) ->\n\n        # TODO: validation & sanitization\n\n        request.post 'account'\n        .send account\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in createAccount\", account, res.body?.error\n                callback res.body, null\n\n    editAccount: (account, callback) ->\n\n        # TODO: validation & sanitization\n        rawAccount = account.toJS()\n\n        request.put \"account/#{rawAccount.id}\"\n        .send rawAccount\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in editAccount\", account, res.body?.error\n                callback res.body, null\n\n    checkAccount: (account, callback) ->\n\n        request.put \"accountUtil/check\"\n        .send account\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in checkAccount\", res.body\n                callback res.body, null\n\n    removeAccount: (accountID) ->\n\n        request.del \"account/#{accountID}\"\n        .set 'Accept', 'application/json'\n        .end (res) -> # nothing\n\n    accountDiscover: (domain, callback) ->\n\n        request.get \"provider/#{domain}\"\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                callback res.body, null\n\n    search: (query, numPage, callback) ->\n        encodedQuery = encodeURIComponent query\n        numByPage = SettingsStore.get 'messagesPerPage'\n        request.get \"search/#{encodedQuery}/page/#{numPage}/limit/#{numByPage}\"\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in search\", res.body?.error\n                callback res.body, null\n\n    refresh: (hard, callback) ->\n        url = if hard then \"refresh?all=true\"\n        else \"refresh\"\n\n        request.get url\n        .end (res) ->\n            if res.ok\n                callback null, res.text\n            else\n                callback res.body\n\n    refreshMailbox: (mailboxID, callback) ->\n        request.get \"refresh/#{mailboxID}\"\n        .end (res) ->\n            if res.ok\n                callback null, res.text\n            else\n                callback res.text\n\n\n    activityCreate: (options, callback) ->\n        request.post \"activity\"\n        .send options\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in activityCreate\", options, res.body?.error\n                callback res.body, null\n"]}