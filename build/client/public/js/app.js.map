{"version":3,"sources":["app/actions/account_action_creator.coffee","app/actions/contact_action_creator.coffee","app/actions/conversation_action_creator.coffee","app/actions/layout_action_creator.coffee","app/actions/message_action_creator.coffee","app/actions/search_action_creator.coffee","app/actions/settings_action_creator.coffee","app/app_dispatcher.coffee","app/components/account-config.coffee","app/components/account_picker.coffee","app/components/alert.coffee","app/components/application.coffee","app/components/compose.coffee","app/components/conversation.coffee","app/components/file_picker.coffee","app/components/mailbox-list.coffee","app/components/mails_input.coffee","app/components/menu.coffee","app/components/message-list.coffee","app/components/message.coffee","app/components/modal.coffee","app/components/participant.coffee","app/components/search-form.coffee","app/components/settings.coffee","app/components/thin_progress.coffee","app/components/toast.coffee","app/components/toolbox_actions.coffee","app/components/toolbox_move.coffee","app/components/topbar.coffee","app/constants/app_constants.coffee","app/initialize.coffee","app/libs/flux/dispatcher/dispatcher.coffee","app/libs/flux/invariant.js","app/libs/flux/store/Store.coffee","app/libs/flux/store/store.coffee","app/libs/panel_router.coffee","app/locales/en.coffee","app/locales/fr.coffee","app/mixins/router_mixin.coffee","app/mixins/store_watch_mixin.coffee","app/router.coffee","app/stores/account_store.coffee","app/stores/contact_store.coffee","app/stores/layout_store.coffee","app/stores/message_store.coffee","app/stores/refreshes_store.coffee","app/stores/search_store.coffee","app/stores/settings_store.coffee","app/utils/activity_utils.coffee","app/utils/api_utils.coffee","app/utils/dom_utils.coffee","app/utils/message_utils.coffee","app/utils/plugin_utils.coffee","app/utils/socketio_utils.coffee","app/utils/translators/account_translator.coffee","app/utils/xhr_utils.coffee"],"names":[],"mappings":"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","file":"public/js/app.js","sourcesContent":["XHRUtils = require '../utils/xhr_utils'\nAppDispatcher = require '../app_dispatcher'\n{ActionTypes} = require '../constants/app_constants'\n\nAccountStore = require '../stores/account_store'\nLayoutActionCreator = null\n\nmodule.exports = AccountActionCreator =\n\n    create: (inputValues, afterCreation) ->\n        AccountActionCreator._setNewAccountWaitingStatus true\n\n        XHRUtils.createAccount inputValues, (error, account) ->\n            if error? or not account?\n                AccountActionCreator._setNewAccountError error\n            else\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.ADD_ACCOUNT\n                    value: account\n\n                afterCreation(AccountStore.getByID account.id)\n\n\n    edit: (inputValues, accountID) ->\n        AccountActionCreator._setNewAccountWaitingStatus true\n\n        account = AccountStore.getByID accountID\n        newAccount = account.mergeDeep inputValues\n\n        XHRUtils.editAccount newAccount, (error, rawAccount) ->\n            if error?\n                AccountActionCreator._setNewAccountError error\n            else\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.EDIT_ACCOUNT\n                    value: rawAccount\n                LayoutActionCreator = require '../actions/layout_action_creator'\n                LayoutActionCreator.notify t('account updated'), autoclose: true\n\n    check: (inputValues, accountID) ->\n        account = AccountStore.getByID accountID\n        newAccount = account.mergeDeep inputValues\n\n        XHRUtils.checkAccount newAccount, (error, rawAccount) ->\n            if error?\n                AccountActionCreator._setNewAccountError error\n            else\n                LayoutActionCreator = require '../actions/layout_action_creator'\n                LayoutActionCreator.notify t('account checked'), autoclose: true\n\n    remove: (accountID) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.REMOVE_ACCOUNT\n            value: accountID\n        XHRUtils.removeAccount accountID\n        window.router.navigate '', true\n\n    _setNewAccountWaitingStatus: (status) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.NEW_ACCOUNT_WAITING\n            value: status\n\n    _setNewAccountError: (errorMessage) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.NEW_ACCOUNT_ERROR\n            value: errorMessage\n\n    selectAccount: (accountID, mailboxID) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SELECT_ACCOUNT\n            value:\n                accountID: accountID\n                mailboxID: mailboxID\n\n    discover: (domain, callback) ->\n        XHRUtils.accountDiscover domain, (err, infos) ->\n            if not infos?\n                infos = []\n            callback err, infos\n\n    mailboxCreate: (inputValues, callback) ->\n        XHRUtils.mailboxCreate inputValues, (error, account) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MAILBOX_CREATE\n                    value: account\n            if callback?\n                callback error\n\n    mailboxUpdate: (inputValues, callback) ->\n        XHRUtils.mailboxUpdate inputValues, (error, account) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MAILBOX_UPDATE\n                    value: account\n            if callback?\n                callback error\n\n\n    mailboxDelete: (inputValues, callback) ->\n        XHRUtils.mailboxDelete inputValues, (error, account) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MAILBOX_DELETE\n                    value: account\n            if callback?\n                callback error\n\n    mailboxExpunge: (inputValues, callback) ->\n        # delete message from local store to refresh display, we'll fetch them\n        # again on error\n        AppDispatcher.handleViewAction\n            type: ActionTypes.MAILBOX_EXPUNGE\n            value: inputValues.mailboxID\n\n        XHRUtils.mailboxExpunge inputValues, (error, account) ->\n            if callback?\n                callback error\n","AppDispatcher = require '../app_dispatcher'\n{ActionTypes} = require '../constants/app_constants'\nActivity      = require '../utils/activity_utils'\nLayoutActionCreator = require '../actions/layout_action_creator'\n\nmodule.exports = ContactActionCreator =\n\n    searchContact: (query) ->\n        options =\n            name: 'search'\n            data:\n                type: 'contact'\n                query: query\n\n        activity = new Activity options\n        activity.onsuccess = ->\n            AppDispatcher.handleViewAction\n                type: ActionTypes.RECEIVE_RAW_CONTACT_RESULTS\n                value: @result\n        activity.onerror = ->\n            console.log \"KO\", @error, @name\n\n    searchContactLocal: (query) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.CONTACT_LOCAL_SEARCH\n            value: query\n\n    createContact: (contact) ->\n        options =\n            name: 'create'\n            data:\n                type: 'contact'\n                contact: contact\n\n        activity = new Activity options\n        activity.onsuccess = ->\n            AppDispatcher.handleViewAction\n                type: ActionTypes.RECEIVE_RAW_CONTACT_RESULTS\n                value: @result\n            msg = t('contact create success', {contact: contact.name or contact.address})\n            LayoutActionCreator.notify msg, autoclose: true\n        activity.onerror = ->\n            msg = t('contact create error', {error: @name})\n            LayoutActionCreator.notify msg, autoclose: true\n\n","AppDispatcher  = require '../app_dispatcher'\n{ActionTypes}  = require '../constants/app_constants'\nXHRUtils       = require '../utils/xhr_utils'\n{MessageFlags} = require '../constants/app_constants'\nLayoutActionCreator  = require './layout_action_creator'\nMessageActionCreator = require '../actions/message_action_creator'\nAccountStore  = require \"../stores/account_store\"\nMessageStore  = require '../stores/message_store'\n\nmodule.exports =\n\n    delete: (conversationID, callback) ->\n        conversation = MessageStore.getConversation conversationID\n        account = AccountStore.getByID(conversation.get(0).get 'accountID')\n        trash   = account.get 'trashMailbox'\n        messages        = []\n        messagesActions = []\n        conversation.map (message) ->\n            # action to allow undelete\n            action =\n                id: message.get 'id'\n                from: Object.keys(message.get 'mailboxIDs')\n                to: trash\n            messagesActions.push action\n\n            # move messages client-side to trash, to update UI without waiting\n            # for server response\n            msg = message.toJS()\n            delete msg.mailboxIDs[id] for id of msg.mailboxIDs\n            msg.mailboxIDs[trash] = -1\n            messages.push msg\n\n        .toJS()\n\n        # send requests ASAP\n        XHRUtils.conversationDelete conversationID, (error, messages) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.RECEIVE_RAW_MESSAGES\n                    value: messages\n            options =\n                autoclose: true,\n                actions: [\n                    label: t 'conversation undelete'\n                    onClick: -> MessageActionCreator.undelete()\n                ]\n            LayoutActionCreator.notify t('conversation delete ok', subject: messages[0].subject), options\n            if callback?\n                callback error\n\n        # Update datastore\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_RAW_MESSAGES\n            value: messages\n\n        # Store action to allow undelete\n        AppDispatcher.handleViewAction\n            type: ActionTypes.CONVERSATION_ACTION\n            value:\n                messages: messagesActions\n\n    move: (message, from, to, callback) ->\n        if typeof message is 'string'\n            message = MessageStore.getByID message\n        # sometime, draft messages don't have a conversationID\n        if not (message.get 'conversationID')?\n            MessageActionCreator.move message, from, to, callback\n        else\n            msg = message.toJSON()\n            AppDispatcher.handleViewAction\n                type: ActionTypes.CONVERSATION_ACTION\n                value:\n                    id: msg.conversationID\n                    from: from\n                    to: to\n            observer = jsonpatch.observe msg\n            delete msg.mailboxIDs[from]\n            msg.mailboxIDs[to] = -1\n            patches = jsonpatch.generate observer\n            XHRUtils.conversationPatch msg.conversationID, patches, (error, messages) ->\n                if not error?\n                    AppDispatcher.handleViewAction\n                        type: ActionTypes.RECEIVE_RAW_MESSAGES\n                        value: messages\n                if callback?\n                    callback error\n\n        # move message without waiting for server response\n        conversation = MessageStore.getConversation(message.get 'conversationID')\n        messages     = []\n        conversation.map (message) ->\n            msg = message.toJS()\n            delete msg.mailboxIDs[from] for id of msg.mailboxIDs\n            msg.mailboxIDs[to] = -1\n            messages.push msg\n        .toJS()\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_RAW_MESSAGES\n            value: messages\n\n    seen: (conversationID, flags, callback) ->\n        conversation =\n            flags: []\n        observer = jsonpatch.observe conversation\n        conversation.flags.push(MessageFlags.SEEN)\n        patches = jsonpatch.generate observer\n        XHRUtils.conversationPatch conversationID, patches, (error, messages) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.RECEIVE_RAW_MESSAGES\n                    value: messages\n            if callback?\n                callback error\n\n    unseen: (conversationID, flags, callback) ->\n        conversation =\n            flags: [MessageFlags.SEEN]\n        observer = jsonpatch.observe conversation\n        conversation.flags = []\n        patches = jsonpatch.generate observer\n        XHRUtils.conversationPatch conversationID, patches, (error, messages) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.RECEIVE_RAW_MESSAGES\n                    value: messages\n            if callback?\n                callback error\n","XHRUtils = require '../utils/xhr_utils'\nSocketUtils = require '../utils/socketio_utils'\n\nAccountStore  = require '../stores/account_store'\nLayoutStore   = require '../stores/layout_store'\nMessageStore  = require '../stores/message_store'\n\nAppDispatcher = require '../app_dispatcher'\n\n{ActionTypes, AlertLevel, MessageFlags} = require '../constants/app_constants'\n\nAccountActionCreator = require './account_action_creator'\nMessageActionCreator = require './message_action_creator'\nSearchActionCreator = require './search_action_creator'\n\n_cachedQuery = {}\n_cachedDisposition = null\n\nmodule.exports = LayoutActionCreator =\n\n    setDisposition: (type, value) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SET_DISPOSITION\n            value:\n                type: type\n                value: value\n\n    toggleFullscreen: ->\n        if _cachedDisposition?\n            AppDispatcher.handleViewAction\n                type: ActionTypes.SET_DISPOSITION\n                value:\n                    disposition: _cachedDisposition\n            _cachedDisposition = null\n        else\n            _cachedDisposition = _.clone LayoutStore.getDisposition()\n            AppDispatcher.handleViewAction\n                type: ActionTypes.SET_DISPOSITION\n                value:\n                    type: _cachedDisposition.type\n                    value: 0\n\n    alert: (level, message) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.DISPLAY_ALERT\n            value:\n                level: level\n                message: message\n\n    alertHide: (level, message) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.HIDE_ALERT\n\n    refresh: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.REFRESH\n            value: null\n\n    alertSuccess: (message) ->\n        LayoutActionCreator.alert AlertLevel.SUCCESS, message\n    alertInfo:    (message) ->\n        LayoutActionCreator.alert AlertLevel.INFO, message\n    alertWarning: (message) ->\n        LayoutActionCreator.alert AlertLevel.WARNING, message\n    alertError:   (message) ->\n        LayoutActionCreator.alert AlertLevel.ERROR, message\n    notify: (message, options) ->\n        task =\n            id: Date.now()\n            finished: true\n            message: message\n        if options?\n            task.autoclose = options.autoclose\n            task.errors    = options.errors\n            task.finished  = options.finished\n            task.actions   = options.actions\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_TASK_UPDATE\n            value: task\n\n    clearToasts: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.CLEAR_TOASTS\n            value: null\n\n    filterMessages: (filter) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.LIST_FILTER\n            value: filter\n\n    quickFilterMessages: (filter) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.LIST_QUICK_FILTER\n            value: filter\n\n    sortMessages: (sort) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.LIST_SORT\n            value: sort\n\n    getDefaultRoute: ->\n        # if there is no account, we display the configAccount\n        if AccountStore.getAll().length is 0 then 'account.new'\n        # else go directly to first account\n        else 'account.mailbox.messages'\n\n    showMessageList: (panelInfo) ->\n        {accountID, mailboxID} = panelInfo.parameters\n        selectedAccount = AccountStore.getSelected()\n        selectedMailbox = AccountStore.getSelectedMailbox()\n        if not selectedAccount? or\n        selectedAccount.get('id') isnt accountID or\n        selectedMailbox.get('id') isnt mailboxID\n            AccountActionCreator.selectAccount accountID, mailboxID\n\n        cached = _cachedQuery.mailboxID is mailboxID\n        query = {}\n        ['sort', 'after', 'before', 'flag', 'pageAfter'].forEach (param) ->\n            value = panelInfo.parameters[param]\n            if value? and value isnt ''\n                query[param] = value\n                if _cachedQuery[param] isnt value\n                    _cachedQuery[param] = value\n                    cached = false\n        _cachedQuery.mailboxID = mailboxID\n\n        if not cached\n            MessageActionCreator.setFetching true\n            XHRUtils.fetchMessagesByFolder mailboxID, query, (err, rawMessages) ->\n                MessageActionCreator.setFetching false\n                if err?\n                    LayoutActionCreator.alertError err\n                else\n                    MessageActionCreator.receiveRawMessages rawMessages\n\n    showMessage: (panelInfo, direction) ->\n        onMessage = (msg) ->\n            # if there isn't a selected account (page loaded directly),\n            # select the message's account\n            selectedAccount = AccountStore.getSelected()\n            if  not selectedAccount? and msg?.accountID\n                AccountActionCreator.selectAccount msg.accountID\n        messageID = panelInfo.parameters.messageID\n        message = MessageStore.getByID messageID\n        if message?\n            onMessage message\n        else\n            XHRUtils.fetchMessage messageID, (err, rawMessage) ->\n\n                if err?\n                    LayoutActionCreator.alertError err\n                else\n                    MessageActionCreator.receiveRawMessage rawMessage\n                    onMessage rawMessage\n\n    showConversation: (panelInfo, direction) ->\n        onMessage = (msg) ->\n            # if there isn't a selected account (page loaded directly),\n            # select the message's account\n            selectedAccount = AccountStore.getSelected()\n            if  not selectedAccount? and msg?.accountID\n                AccountActionCreator.selectAccount msg.accountID\n        messageID      = panelInfo.parameters.messageID\n        conversationID = panelInfo.parameters.conversationID\n        message        = MessageStore.getByID messageID\n        if message?\n            onMessage message\n        XHRUtils.fetchConversation conversationID, (err, rawMessages) ->\n\n            if err?\n                LayoutActionCreator.alertError err\n            else\n                # prevent flashing of message in message list when first\n                # marking as read a new message. If it has been flagged Seen\n                # in local cache but not on server, ignore server value\n                if rawMessages.length is 1\n                    message = MessageStore.getByID rawMessages[0].id\n                    if message? and\n                       rawMessages[0].flags.length is 0 and\n                       message.get('flags').length is 1 and\n                       message.get('flags')[0] is MessageFlags.SEEN\n                        rawMessages[0].flags = MessageFlags.SEEN\n                MessageActionCreator.receiveRawMessages rawMessages\n                onMessage rawMessages[0]\n\n    showComposeNewMessage: (panelInfo, direction) ->\n        # if there isn't a selected account (page loaded directly),\n        # select the default account\n        selectedAccount = AccountStore.getSelected()\n        if not selectedAccount?\n            defaultAccount = AccountStore.getDefault()\n            AccountActionCreator.selectAccount defaultAccount.get 'id'\n\n    # Edit draft\n    showComposeMessage: (panelInfo, direction) ->\n        # if there isn't a selected account (page loaded directly),\n        # select the default account\n        selectedAccount = AccountStore.getSelected()\n        if not selectedAccount?\n            defaultAccount = AccountStore.getDefault()\n            AccountActionCreator.selectAccount defaultAccount.get 'id'\n\n    showCreateAccount: (panelInfo, direction) ->\n        AccountActionCreator.selectAccount null\n\n    showConfigAccount: (panelInfo, direction) ->\n        AccountActionCreator.selectAccount panelInfo.parameters.accountID\n\n    showSearch: (panelInfo, direction) ->\n        AccountActionCreator.selectAccount null\n\n        {query, page} = panelInfo.parameters\n\n        SearchActionCreator.setQuery query\n\n        XHRUtils.search query, page, (err, results) ->\n            if err?\n                console.log err\n            else\n                SearchActionCreator.receiveRawSearchResults results\n\n    showSettings: (panelInfo, direction) ->\n\n\n    refreshMessages: ->\n        XHRUtils.refresh true, (err, results) ->\n            if err?\n                console.log err\n                LayoutActionCreator.notify t('account refresh error'),\n                    autoclose: false\n                    finished: true\n                    errors: [ JSON.stringify err ]\n            else\n                if results is \"done\"\n                    MessageActionCreator.receiveRawMessages null\n                    LayoutActionCreator.notify t('account refreshed'),\n                        autoclose: true\n\n    toastsShow: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.TOASTS_SHOW\n\n    toastsHide: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.TOASTS_HIDE\n\n","AppDispatcher = require '../app_dispatcher'\n{ActionTypes} = require '../constants/app_constants'\nXHRUtils      = require '../utils/xhr_utils'\nAccountStore  = require \"../stores/account_store\"\nMessageStore  = require '../stores/message_store'\n\nmodule.exports =\n\n    receiveRawMessages: (messages) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_RAW_MESSAGES\n            value: messages\n\n    receiveRawMessage: (message) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_RAW_MESSAGE\n            value: message\n\n    setFetching: (fetching) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SET_FETCHING\n            value: fetching\n\n    send: (message, callback) ->\n        XHRUtils.messageSend message, (error, message) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MESSAGE_SEND\n                    value: message\n            if callback?\n                callback error, message\n\n    ##\n    # Delete one or some messages\n    #\n    # @params {Message|MessageID|[Messages]|[MessageIDs]}\n    # @params {Function}\n    delete: (message, callback) ->\n        LayoutActionCreator = require './layout_action_creator'\n        doDelete = (message) =>\n            if typeof message is \"string\"\n                message = MessageStore.getByID message\n            # Move message to Trash folder\n            account = AccountStore.getByID(message.get 'accountID')\n            if not account?\n                console.log \"No account with id #{message.get 'accountID'} for message #{message.get 'id'}\"\n                LayoutActionCreator.alertError t 'app error'\n                return\n            trash = account.get 'trashMailbox'\n            msg = message.toJSON()\n            if not trash? or trash is ''\n                LayoutActionCreator.alertError t 'message delete no trash'\n            else if msg.mailboxIDs[trash]?\n                LayoutActionCreator.alertError t 'message delete already'\n            else\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MESSAGE_ACTION\n                    value:\n                        id: message.get 'id'\n                        from: Object.keys(msg.mailboxIDs)\n                        to: trash\n                observer = jsonpatch.observe msg\n                delete msg.mailboxIDs[id] for id of msg.mailboxIDs\n                msg.mailboxIDs[trash] = -1\n                patches = jsonpatch.generate observer\n                XHRUtils.messagePatch message.get('id'), patches, (err, message) =>\n                    if err?\n                        LayoutActionCreator.alertError \"#{t(\"message action delete ko\")} #{err}\"\n                    if not mass\n                        options =\n                            autoclose: true,\n                            actions: [\n                                label: t 'message undelete'\n                                onClick: => @undelete()\n                            ]\n                        LayoutActionCreator.notify t('message action delete ok', subject: msg.subject), options\n                        if callback?\n                            callback err\n\n                # Update datastore without waiting for server response\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.MESSAGE_DELETE\n                    value: msg\n\n        if Array.isArray message\n            mass = true\n            message.forEach doDelete\n            if callback?\n                callback()\n        else\n            mass = false\n            doDelete message\n\n    move: (message, from, to, callback) ->\n        LayoutActionCreator = require './layout_action_creator'\n        if from is to\n            LayoutActionCreator.alertWarning t 'message move already'\n            callback()\n            return\n        if typeof message is \"string\"\n            message = MessageStore.getByID message\n        msg = message.toJSON()\n        AppDispatcher.handleViewAction\n            type: ActionTypes.MESSAGE_ACTION\n            value:\n                id: message.get 'id'\n                from: from\n                to: to\n        observer = jsonpatch.observe msg\n        delete msg.mailboxIDs[from]\n        msg.mailboxIDs[to] = -1\n        patches = jsonpatch.generate observer\n        XHRUtils.messagePatch message.get('id'), patches, (error, message) ->\n            if not error?\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.RECEIVE_RAW_MESSAGE\n                    value: msg\n            if callback?\n                callback error\n\n    undelete: ->\n        LayoutActionCreator = require './layout_action_creator'\n        action = MessageStore.getPrevAction()\n        if action?\n            if action.target is 'message'\n                message = MessageStore.getByID action.id\n                action.from.forEach (from) =>\n                    @move message, action.to, from, (err) ->\n                        if not err?\n                            LayoutActionCreator.notify t('message undelete ok'),\n                                autoclose: true\n                        else\n                            LayoutActionCreator.notify t('message undelete error')\n            else if action.target is 'conversation' and\n                    Array.isArray(action.messages)\n                action.messages.forEach (message) =>\n                    message.from.forEach (from) =>\n                        @move message.id, message.to, from, (err) ->\n                            if not err?\n                                LayoutActionCreator.notify t('message undelete ok'),\n                                    autoclose: true\n                            else\n                                LayoutActionCreator.notify t('message undelete error')\n            else\n                LayoutActionCreator.alertError t 'message undelete unavailable'\n\n    updateFlag: (message, flags, callback) ->\n        msg = message.toJSON()\n        patches = jsonpatch.compare {flags: msg.flags}, {flags}\n        XHRUtils.messagePatch message.get('id'), patches, (error, messageUpdated) ->\n            if not error?\n                if not _.isEqual(flags, messageUpdated.flags)\n                    AppDispatcher.handleViewAction\n                        type: ActionTypes.RECEIVE_RAW_MESSAGE\n                        value: messageUpdated\n            if callback?\n                callback error\n\n        # dont wait for server response to display update\n        setTimeout ->\n            messageUpdated = message.toJS()\n            messageUpdated.flags = flags\n            AppDispatcher.handleViewAction\n                type: ActionTypes.RECEIVE_RAW_MESSAGE\n                value: messageUpdated\n        , 0\n\n    # set conv to true to update current conversation ID\n    setCurrent: (messageID, conv) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.MESSAGE_CURRENT\n            value:\n                messageID: messageID\n                conv: conv\n","AppDispatcher = require '../app_dispatcher'\n{ActionTypes} = require '../constants/app_constants'\n\nmodule.exports = SearchActionCreator =\n\n    setQuery: (query) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SET_SEARCH_QUERY\n            value: query\n\n    receiveRawSearchResults: (results) ->\n\n        # first clear the previous results\n        SearchActionCreator.clearSearch false\n\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_RAW_SEARCH_RESULTS\n            value: results\n\n    clearSearch: (clearQuery = true) ->\n        if clearQuery then SearchActionCreator.setQuery \"\"\n\n        AppDispatcher.handleViewAction\n            type: ActionTypes.CLEAR_SEARCH_RESULTS\n            value: null\n\n","XHRUtils = require '../utils/xhr_utils'\nAppDispatcher = require '../app_dispatcher'\n{ActionTypes} = require '../constants/app_constants'\n\nSettingsStore = require '../stores/settings_store'\nLayoutActionCreator = require './layout_action_creator'\n\nmodule.exports = SettingsActionCreator =\n\n    edit: (inputValues) ->\n        XHRUtils.changeSettings inputValues, (err, values) ->\n            if err\n                LayoutActionCreator.alertError t('settings save error') + err\n\n            else\n                AppDispatcher.handleViewAction\n                    type: ActionTypes.SETTINGS_UPDATED\n                    value: values\n\n","Dispatcher = require './libs/flux/dispatcher/dispatcher'\n{PayloadSources} = require './constants/app_constants'\n\n###\n    Custom dispatcher class to add semantic method.\n###\nclass AppDispatcher extends Dispatcher\n\n    handleViewAction: (action) ->\n        payload =\n            source: PayloadSources.VIEW_ACTION\n            action: action\n\n        @dispatch payload\n\n        # create and dispatch a DOM event for plugins\n        window.cozyMails.customEvent PayloadSources.VIEW_ACTION, action\n\n    handleServerAction: (action) ->\n        payload =\n            source: PayloadSources.SERVER_ACTION\n            action: action\n\n        @dispatch payload\n\n        # create and dispatch a DOM event for plugins\n        window.cozyMails.customEvent PayloadSources.SERVER_ACTION, action\n\n\nmodule.exports = new AppDispatcher()\n","{div, p, h3, h4, form, label, input, button, ul, li, a, span, i,\nfieldset, legend} =\n    React.DOM\nclasser = React.addons.classSet\n\nMailboxList          = require './mailbox-list'\nAccountActionCreator = require '../actions/account_action_creator'\nRouterMixin = require '../mixins/router_mixin'\nLAC  = require '../actions/layout_action_creator'\nclasser = React.addons.classSet\n\nmodule.exports = React.createClass\n    displayName: 'AccountConfig'\n\n    _lastDiscovered: ''\n\n    mixins: [\n        RouterMixin\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n    _accountFields: [\n        'id', 'label', 'name', 'login', 'password',\n        'imapServer', 'imapPort', 'imapSSL', 'imapTLS',\n        'smtpServer', 'smtpPort', 'smtpSSL', 'smtpTLS', 'smtpLogin', 'smtpPassword', 'smtpMethod',\n        'accountType'\n    ]\n    _mailboxesFields: [\n        'id', 'mailboxes', 'favoriteMailboxes',\n        'draftMailbox', 'sentMailbox', 'trashMailbox'\n    ]\n    _accountSchema:\n        properties:\n            'label':\n                allowEmpty: false\n                #type: 'string'\n            'name':\n                allowEmpty: false\n                #type: 'string'\n            'login':\n                allowEmpty: false\n                #type: 'string'\n            'password':\n                allowEmpty: false\n                #type: 'string'\n            'imapServer':\n                allowEmpty: false\n                #type: 'string'\n            'imapPort':\n                allowEmpty: false\n                #type: 'integer'\n            'imapSSL':\n                allowEmpty: true\n                #type: 'boolean'\n            'imapTLS':\n                allowEmpty: true\n                #type: 'boolean'\n            'smtpServer':\n                allowEmpty: false\n                #type: 'string'\n            'smtpPort':\n                allowEmpty: false\n                #type: 'integer'\n            'smtpSSL':\n                allowEmpty: true\n                #type: 'boolean'\n            'smtpTLS':\n                allowEmpty: true\n                #type: 'boolean'\n            'smtpLogin':\n                allowEmpty: true\n                #type: 'string'\n            'smtpMethod':\n                allowEmpty: true\n                #type: 'string'\n            'smtpPassword':\n                allowEmpty: true\n                #type: 'string'\n            'draftMailbox':\n                allowEmpty: true\n                #type: 'string'\n            'sentMailbox':\n                allowEmpty: true\n                #type: 'string'\n            'trashMailbox':\n                allowEmpty: true\n                #type: 'string'\n            'accountType':\n                allowEmpty: true\n                #type: 'string'\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    render: ->\n        if @state.id\n            titleLabel = t \"account edit\"\n        else\n            titleLabel = t \"account new\"\n\n        tabAccountClass = tabMailboxClass = ''\n        tabAccountUrl = tabMailboxUrl = null\n\n        if not @props.tab or @props.tab is 'account'\n            tabAccountClass = 'active'\n            tabMailboxUrl = @buildUrl\n                direction: 'first'\n                action: 'account.config'\n                parameters: [@state.id, 'mailboxes']\n\n        else\n            tabMailboxClass = 'active'\n            tabAccountUrl = @buildUrl\n                direction: 'first'\n                action: 'account.config'\n                parameters: [@state.id, 'account']\n\n        mainOptions =\n            isWaiting: @props.isWaiting\n            selectedAccount: @props.selectedAccount\n            validateForm: @validateForm\n            onSubmit: @onSubmit\n            errors: @state.errors\n        for field in @_accountFields\n            mainOptions[field] = @linkState(field)\n\n        mailboxesOptions =\n            error: @props.error\n            errors: @state.errors\n            onSubmit: @onSubmit\n        for field in @_mailboxesFields\n            mailboxesOptions[field] = @linkState(field)\n\n        div id: 'mailbox-config', key: 'account-config-' + @props.selectedAccount?.get('id'),\n            h3 className: null, titleLabel\n\n            if @props.tab?\n                ul className: \"nav nav-tabs\", role: \"tablist\",\n                    li className: tabAccountClass,\n                        a\n                            href: tabAccountUrl\n                            t \"account tab account\"\n                    li className: tabMailboxClass,\n                        a\n                            href: tabMailboxUrl\n                            t \"account tab mailboxes\"\n\n            if not @props.tab or @props.tab is 'account'\n                AccountConfigMain mainOptions\n            else\n                AccountConfigMailboxes mailboxesOptions\n\n    _afterMount: ->\n        # On error, scroll to message\n        node = document.querySelector(\"#mailbox-config .alert\")\n        if node?\n            node.scrollIntoView()\n\n    componentDidMount: ->\n        @_afterMount()\n\n    componentDidUpdate: ->\n        @_afterMount()\n\n    doValidate: ->\n        accountValue = {}\n        init = (field) =>\n            accountValue[field] = @state[field]\n        init field for field in @_accountFields\n        init field for field in @_mailboxesFields\n\n        validOptions =\n            additionalProperties: true\n\n        valid = validate accountValue, @_accountSchema, validOptions\n\n        return {accountValue, valid}\n\n    validateForm: (event) ->\n        if event?\n            event.preventDefault()\n        # If form contains errors, re-validate it every time the user updates\n        # a field\n        if Object.keys(@state.errors).length isnt 0\n            {accountValue, valid} = @doValidate()\n            if valid.valid\n                @setState errors: {}\n            else\n                errors = {}\n                setError = (error) ->\n                    errors[error.property] = t \"validate #{error.message}\"\n                setError error for error in valid.errors\n                @setState errors: errors\n\n    onSubmit: (event, check) ->\n        if event?\n            # prevents the page from reloading\n            event.preventDefault()\n\n        {accountValue, valid} = @doValidate()\n\n        if valid.valid\n            if @state.id?\n                if check is true\n                    AccountActionCreator.check accountValue, @state.id\n                else\n                    AccountActionCreator.edit accountValue, @state.id\n            else\n                AccountActionCreator.create accountValue, (account) =>\n                    LAC.notify t(\"account creation ok\"),\n                        autoclose: true\n                    @redirect\n                        direction: 'first'\n                        action: 'account.config'\n                        parameters: [\n                            account.get 'id'\n                            'mailboxes'\n                        ]\n                        fullWidth: true\n        else\n            errors = {}\n            setError = (error) ->\n                errors[error.property] = t \"validate #{error.message}\"\n            setError error for error in valid.errors\n            @setState errors: errors\n\n    componentWillReceiveProps: (props) ->\n        # prevents the form from changing during submission\n        if props.selectedAccount? and not props.isWaiting\n            @setState @_accountToState props\n\n        else\n            if props.error?\n                if props.error.name is 'AccountConfigError'\n                    errors = {}\n                    field = props.error.field\n                    if field is 'auth'\n                        errors['login']    = t 'config error auth'\n                        errors['password'] = t 'config error auth'\n                    else\n                        errors[field] = t 'config error ' + field\n                    @setState errors: errors\n            else\n                if not props.isWaiting and not _.isEqual(props, @props)\n                    @setState @_accountToState null\n\n    getInitialState: ->\n        return @_accountToState null\n\n    _accountToState: (props)->\n        state =\n            errors: {}\n        if props?\n            account = props.selectedAccount\n            if props.error?\n                if props.error.name is 'AccountConfigError'\n                    field = props.error.field\n                    if field is 'auth'\n                        state.errors['login']    = t 'config error auth'\n                        state.errors['password'] = t 'config error auth'\n                    else\n                        state.errors[field] = t 'config error ' + field\n        if account?\n            if @state.id isnt account.get('id')\n                for field in @_accountFields\n                    state[field] = account.get field\n                state.smtpMethod = 'PLAIN' if not state.smtpMethod?\n            for field in @_mailboxesFields\n                state[field] = account.get field\n            state.newMailboxParent = null\n            state.mailboxes         = props.mailboxes\n            state.favoriteMailboxes = props.favoriteMailboxes\n            if state.mailboxes.length is 0\n                props.tab = 'mailboxes'\n        else if Object.keys(state.errors).length is 0\n            init = (field) ->\n                state[field] = ''\n            init field for field in @_accountFields\n            init field for field in @_mailboxesFields\n            state.id          = null\n            state.smtpPort    = 465\n            state.smtpSSL     = true\n            state.smtpTLS     = false\n            state.smtpMethod  = 'PLAIN'\n            state.imapPort    = 993\n            state.imapSSL     = true\n            state.imapTLS     = false\n            state.accountType = 'IMAP'\n            state.newMailboxParent  = null\n            state.favoriteMailboxes = null\n\n        return state\n\nAccountConfigMain = React.createClass\n    displayName: 'AccountConfigMain'\n\n    mixins: [\n        RouterMixin\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        #return JSON.stringify(nextProps) isnt JSON.stringify(@props) or\n        #       JSON.stringify(nextState) isnt JSON.stringify(@state)\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    _propsToState: (props) ->\n        state = props\n        return state\n\n    getInitialState: ->\n        state = @_propsToState(@props)\n        state.smtpAdvanced = false\n        return state\n\n    componentWillReceiveProps: (props) ->\n        @setState @_propsToState(props)\n\n    render: ->\n        if @props.isWaiting then buttonLabel = t 'account saving'\n        else if @props.selectedAccount? then buttonLabel = t \"account save\"\n        else buttonLabel = t \"account add\"\n\n\n        hasError = (fields) =>\n            if not Array.isArray fields\n                fields = [ fields ]\n            errors = fields.some (field) => @state.errors[field]?\n            return if errors then ' has-error' else ''\n\n        getError = (field) =>\n            if @state.errors[field]?\n                div\n                    className: 'col-sm-5 col-sm-offset-2 control-label',\n                    @state.errors[field]\n\n        cancelUrl = @buildUrl\n            direction: 'first'\n            action: 'default'\n            fullWidth: true\n\n        formClass = classer\n            'form-horizontal': true\n            'form-account': true\n            'waiting': @props.isWaiting\n        form className: formClass, method: 'POST',\n            @renderError()\n            fieldset null,\n                legend null, t 'account identifiers'\n\n            AccountInput\n                name: 'label'\n                value: @linkState('label').value\n                errors: @state.errors\n                validateForm: @props.validateForm\n\n            AccountInput\n                name: 'name'\n                value: @linkState('name').value\n                errors: @state.errors\n                validateForm: @props.validateForm\n\n            AccountInput\n                name: 'login'\n                value: @linkState('login').value\n                errors: @state.errors\n                type: 'email'\n                errorField: ['login', 'auth']\n                validateForm: @props.validateForm\n                onBlur: @discover\n\n            AccountInput\n                name: 'password'\n                value: @linkState('password').value\n                errors: @state.errors\n                type: 'password'\n                errorField: ['password', 'auth']\n                validateForm: @props.validateForm\n\n            if @state.displayGMAILSecurity\n                fieldset null,\n                    legend null, t 'gmail security tile'\n                    p null, t 'gmail security body', login: @state.login.value\n                    p null,\n                        a\n                            target: '_blank',\n                            href: \"https://www.google.com/settings/security/lesssecureapps\"\n                            t 'gmail security link'\n\n            AccountInput\n                name: 'accountType'\n                value: @linkState('accountType').value\n                errors: @state.errors\n\n            fieldset null,\n                legend null, t 'account receiving server'\n\n                AccountInput\n                    name: 'imapServer'\n                    value: @linkState('imapServer').value\n                    errors: @state.errors\n                    errorField: ['imap', 'imapServer', 'imapPort']\n\n                AccountInput\n                    name: 'imapPort'\n                    value: @linkState('imapPort').value\n                    errors: @state.errors\n                    onBlur: @_onimapPort\n                    onInput: => @setState(imapManualPort: true)\n\n                AccountInput\n                    name: 'imapSSL'\n                    value: @linkState('imapSSL').value\n                    errors: @state.errors\n                    type: 'checkbox'\n                    onClick: (ev) =>\n                        @_onServerParam ev.target, 'imap', 'ssl'\n\n                AccountInput\n                    name: 'imapTLS'\n                    value: @linkState('imapTLS').value\n                    errors: @state.errors\n                    type: 'checkbox'\n                    onClick: (ev) =>\n                        @_onServerParam ev.target, 'imap', 'tls'\n\n            fieldset null,\n                legend null, t 'account sending server'\n\n                AccountInput\n                    name: 'smtpServer'\n                    value: @linkState('smtpServer').value\n                    errors: @state.errors\n                    errorField: ['smtp', 'smtpServer', 'smtpPort', 'smtpLogin', 'smtpPassword']\n\n                AccountInput\n                    name: 'smtpPort'\n                    value: @linkState('smtpPort').value\n                    errors: @state.errors\n                    onBlur: @_onSMTPPort\n                    onInput: => @setState(smtpManualPort: true)\n\n                AccountInput\n                    name: 'smtpSSL'\n                    value: @linkState('smtpSSL').value\n                    errors: @state.errors\n                    type: 'checkbox'\n                    onClick: (ev) =>\n                        @_onServerParam ev.target, 'smtp', 'ssl'\n\n                AccountInput\n                    name: 'smtpTLS'\n                    value: @linkState('smtpTLS').value\n                    errors: @state.errors\n                    type: 'checkbox'\n                    onClick: (ev) =>\n                        @_onServerParam ev.target, 'smtp', 'tls'\n\n                div\n                    className: \"form-group\",\n                    a\n                        className: \"col-sm-3 col-sm-offset-2 control-label clickable\",\n                        onClick: @toggleSMTPAdvanced,\n                        t \"account smtp #{if @state.smtpAdvanced then 'hide' else 'show'} advanced\"\n\n                if @state.smtpAdvanced\n                    div\n                        key: \"account-input-smtpMethod\",\n                        className: \"form-group account-item-smtpMethod \",\n                            label\n                                htmlFor: \"mailbox-smtpMethod\",\n                                className: \"col-sm-2 col-sm-offset-2 control-label\",\n                                t \"account smtpMethod\"\n                            div className: 'col-sm-3',\n                                div className: \"dropdown\",\n                                    button\n                                        id: \"mailbox-smtpMethod\",\n                                        name: \"mailbox-smtpMethod\",\n                                        className: \"btn btn-default dropdown-toggle\"\n                                        type: \"button\"\n                                        \"data-toggle\": \"dropdown\",\n                                        t \"account smtpMethod #{@state.smtpMethod.value}\"\n                                    ul className: \"dropdown-menu\", role: \"menu\",\n                                        ['PLAIN', 'NONE', 'LOGIN', 'CRAM-MD5'].map (method) =>\n                                            li\n                                                role: \"presentation\",\n                                                    a\n                                                        'data-value': method,\n                                                        role: \"menuitem\",\n                                                        onClick: @onMethodChange,\n                                                        t \"account smtpMethod #{method}\"\n\n                if @state.smtpAdvanced\n                    AccountInput\n                        name: 'smtpLogin'\n                        value: @linkState('smtpLogin').value\n                        errors: @state.errors\n                        errorField: ['smtp', 'smtpServer', 'smtpPort', 'smtpLogin', 'smtpPassword']\n\n                if @state.smtpAdvanced\n                    AccountInput\n                        name: 'smtpPassword'\n                        value: @linkState('smtpPassword').value\n                        type: 'password'\n                        errors: @state.errors\n                        errorField: ['smtp', 'smtpServer', 'smtpPort', 'smtpLogin', 'smtpPassword']\n\n            fieldset null,\n                legend null, t 'account actions'\n            div className: '',\n                div className: 'col-sm-offset-4',\n                    button\n                        className: 'btn btn-cozy action-save',\n                        onClick: @props.onSubmit,\n                        buttonLabel\n                    if @state.id?\n                        button\n                            className: 'btn btn-cozy-non-default action-check',\n                            onClick: @onCheck,\n                            t 'account check'\n                if @state.id?\n                    fieldset null,\n                        legend null, t 'account danger zone'\n                        div className: 'col-sm-offset-4',\n                            button\n                                className: 'btn btn-default btn-danger btn-remove',\n                                onClick: @onRemove,\n                                t \"account remove\"\n\n    # Check current parameters\n    onCheck: (event) ->\n        @props.onSubmit event, true\n\n    onMethodChange: (event) ->\n        @state.smtpMethod.requestChange event.target.dataset.value\n\n    onRemove: (event) ->\n        # prevents the page from reloading\n        event.preventDefault()\n\n        if window.confirm(t 'account remove confirm')\n            AccountActionCreator.remove @props.selectedAccount.get('id')\n\n    toggleSMTPAdvanced: ->\n        @setState smtpAdvanced: not @state.smtpAdvanced\n\n    renderError: ->\n        if @props.error and @props.error.name is 'AccountConfigError'\n            message = t 'config error ' + @props.error.field\n            div className: 'alert alert-warning', message\n        else if @props.error\n            div className: 'alert alert-warning', @props.error.message\n        else if Object.keys(@state.errors).length isnt 0\n            div className: 'alert alert-warning', t 'account errors'\n\n    discover: (event) ->\n        @props.validateForm event\n\n        login = @state.login.value\n\n        if login isnt @_lastDiscovered\n            AccountActionCreator.discover login.split('@')[1],\n            (err, provider) =>\n                if not err?\n                    infos = {}\n                    getInfos = (server) ->\n                        if server.type is 'imap' and not infos.imapServer?\n                            infos.imapServer = server.hostname\n                            infos.imapPort   = server.port\n                            if server.socketType is 'SSL'\n                                infos.imapSSL = true\n                                infos.imapTLS = false\n                            else if server.socketType is 'STARTTLS'\n                                infos.imapSSL = false\n                                infos.imapTLS = true\n                            else if server.socketType is 'plain'\n                                infos.imapSSL = false\n                                infos.imapTLS = false\n                        if server.type is 'smtp' and not infos.smtpServer?\n                            infos.smtpServer = server.hostname\n                            infos.smtpPort   = server.port\n                            if server.socketType is 'SSL'\n                                infos.smtpSSL = true\n                                infos.smtpTLS = false\n                            else if server.socketType is 'STARTTLS'\n                                infos.smtpSSL = false\n                                infos.smtpTLS = true\n                            else if server.socketType is 'plain'\n                                infos.smtpSSL = false\n                                infos.smtpTLS = false\n                    getInfos server for server in provider\n                    if not infos.imapServer?\n                        infos.imapServer = ''\n                        infos.imapPort   = '993'\n                    if not infos.smtpServer?\n                        infos.smtpServer = ''\n                        infos.smtpPort   = '465'\n                    if not infos.imapSSL\n                        switch infos.imapPort\n                            when '993'\n                                infos.imapSSL = true\n                                infos.imapTLS = false\n                            else\n                                infos.imapSSL = false\n                                infos.imapTLS = false\n                    if not infos.smtpSSL\n                        switch infos.smtpPort\n                            when '465'\n                                infos.smtpSSL = true\n                                infos.smtpTLS = false\n                            when '587'\n                                infos.smtpSSL = false\n                                infos.smtpTLS = true\n                            else\n                                infos.smtpSSL = false\n                                infos.smtpTLS = false\n                    isGmail = infos.imapServer is 'imap.googlemail.com'\n                    @setState displayGMAILSecurity: isGmail\n\n                    for key, val of infos\n                        @state[key].requestChange val\n                    @props.validateForm()\n            @_lastDiscovered = login\n\n    _onServerParam: (target, server, type) ->\n        if (server is 'imap' and @state.imapManualPort) or\n        (server is 'smtp' and @state.smtpManualPort)\n            # port has been set manually, don't update it\n            return\n        if server is 'smtp'\n            if type is 'ssl' and target.checked\n                @setState smtpPort: 465\n            else if type is 'tls' and target.checked\n                @setState smtpPort: 587\n        else\n            if target.checked\n                @setState imapPort: 993\n            else\n                @setState imapPort: 143\n\n    _onIMAPPort: (ev) ->\n        port = ev.target.value.trim()\n        infos =\n            imapPort: port\n        switch port\n            when '993'\n                infos.imapSSL = true\n                infos.imapTLS = false\n            else\n                infos.imapSSL = false\n                infos.imapTLS = false\n        @setState infos\n\n    _onSMTPPort: (ev) ->\n        port = ev.target.value.trim()\n        infos = {}\n        switch port\n            when '465'\n                infos.smtpSSL = true\n                infos.smtpTLS = false\n            when '587'\n                infos.smtpSSL = false\n                infos.smtpTLS = true\n            else\n                infos.smtpSSL = false\n                infos.smtpTLS = false\n        @setState infos\n\nAccountConfigMailboxes = React.createClass\n    displayName: 'AccountConfigMailboxes'\n\n    mixins: [\n        RouterMixin\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    _propsToState: (props) ->\n        state = props\n        state.mailboxesFlat = {}\n        if state.mailboxes.value isnt ''\n            state.mailboxes.value.map (mailbox, key) ->\n                id = mailbox.get 'id'\n                state.mailboxesFlat[id] = {}\n                ['id', 'label', 'depth'].map (prop) ->\n                    state.mailboxesFlat[id][prop] = mailbox.get prop\n            .toJS()\n        return state\n\n    getInitialState: ->\n        @_propsToState(@props)\n\n    componentWillReceiveProps: (props) ->\n        @setState @_propsToState(props)\n\n    render: ->\n        favorites = @state.favoriteMailboxes.value\n        if @state.mailboxes.value isnt '' and favorites isnt ''\n            mailboxes = @state.mailboxes.value.map (mailbox, key) =>\n                try\n                    favorite = favorites.get(mailbox.get('id'))?\n                    MailboxItem {accountID: @state.id.value, mailbox, favorite}\n                catch error\n                    console.error error, favorites\n            .toJS()\n        form className: 'form-horizontal',\n\n            @renderError()\n            h4 className: 'config-title', t \"account special mailboxes\"\n            @_renderMailboxChoice t('account draft mailbox'), \"draftMailbox\"\n            @_renderMailboxChoice t('account sent mailbox'),  \"sentMailbox\"\n            @_renderMailboxChoice t('account trash mailbox'), \"trashMailbox\"\n\n            h4 className: 'config-title', t \"account mailboxes\"\n            ul className: \"folder-list list-unstyled boxes container\",\n                if mailboxes?\n                    li className: 'row box title', key: 'title',\n                        span\n                            className: \"col-xs-1\",\n                            ''\n                        span\n                            className: \"col-xs-1\",\n                            ''\n                        span\n                            className: \"col-xs-6\",\n                            ''\n                        span\n                            className: \"col-xs-1\",\n                            ''\n                        span\n                            className: \"col-xs-1 text-center\",\n                            t 'mailbox title total'\n                        span\n                            className: \"col-xs-1 text-center\",\n                            t 'mailbox title unread'\n                        span\n                            className: \"col-xs-1 text-center\",\n                            t 'mailbox title new'\n                mailboxes\n                li className: \"row box new\", key: 'new',\n                    span\n                        className: \"col-xs-1 box-action add\"\n                        onClick: @addMailbox\n                        title: t(\"mailbox title add\"),\n                            i className: 'fa fa-plus'\n                    span\n                        className: \"col-xs-1 box-action cancel\"\n                        onClick: @undoMailbox\n                        title: t(\"mailbox title add cancel\"),\n                            i className: 'fa fa-undo'\n                    div className: 'col-xs-6',\n                        input\n                            id: 'newmailbox',\n                            ref: 'newmailbox',\n                            type: 'text',\n                            className: 'form-control',\n                            placeholder: t \"account newmailbox placeholder\"\n                            onKeyDown: @onKeyDown\n                    label\n                        className: 'col-xs-2 text-center control-label',\n                        t \"account newmailbox parent\"\n                    div className: 'col-xs-2 text-center',\n                        MailboxList\n                            allowUndefined: true\n                            mailboxes: @state.mailboxesFlat\n                            selectedMailboxID: @state.newMailboxParent\n                            onChange: (mailbox) =>\n                                @setState newMailboxParent: mailbox\n\n    renderError: ->\n        if @props.error and @props.error.name is 'AccountConfigError'\n            message = t 'config error ' + @props.error.field\n            div className: 'alert alert-warning', message\n        else if @props.error\n            div className: 'alert alert-warning', @props.error.message\n        else if Object.keys(@state.errors).length isnt 0\n            div className: 'alert alert-warning', t 'account errors'\n\n    _renderMailboxChoice: (labelText, box) ->\n        if @state.id? and @state.mailboxes.value isnt ''\n            errorClass = if @state[box].value? then '' else 'has-error'\n            div className: \"form-group #{box} #{errorClass}\",\n                label\n                    className: 'col-sm-2 col-sm-offset-2 control-label',\n                    labelText\n                div className: 'col-sm-3',\n                    MailboxList\n                        allowUndefined: true\n                        mailboxes: @state.mailboxesFlat\n                        selectedMailboxID: @state[box].value\n                        onChange: (mailbox) =>\n                            # requestChange is asynchroneous, so we need to also call\n                            # setState to only call onSubmet once state has really been updated\n                            #@state[box].value = mailbox\n                            @state[box].requestChange mailbox\n                            newState = {}\n                            newState[box] =\n                                value = mailbox\n                            @setState newState, =>\n                                @props.onSubmit()\n\n    onKeyDown: (evt) ->\n        switch evt.key\n            when \"Enter\"\n                @addMailbox()\n\n    addMailbox: (event) ->\n        event?.preventDefault()\n\n        mailbox =\n            label: @refs.newmailbox.getDOMNode().value.trim()\n            accountID: @state.id.value\n            parentID: @state.newMailboxParent\n\n        AccountActionCreator.mailboxCreate mailbox, (error) =>\n            if error?\n                LAC.alertError \"#{t(\"mailbox create ko\")} #{error}\"\n            else\n                LAC.notify t(\"mailbox create ok\"),\n                    autoclose: true\n                @refs.newmailbox.getDOMNode().value = ''\n\n    undoMailbox: (event) ->\n        event.preventDefault()\n\n        @refs.newmailbox.getDOMNode().value = ''\n        @setState newMailboxParent: null\n\nMailboxItem = React.createClass\n    displayName: 'MailboxItem'\n\n    mixins: [\n        RouterMixin\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n    propTypes:\n        mailbox: React.PropTypes.object\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    #componentWillReceiveProps: (props) ->\n    #    @setState edited: false\n\n    getInitialState: ->\n        return {\n            edited: false\n            favorite: @props.favorite\n        }\n\n    render: ->\n        pusher = \"\"\n        pusher += \"    \" for j in [1..@props.mailbox.get('depth')] by 1\n        key = @props.mailbox.get 'id'\n        if @state.favorite\n            favoriteClass = \"fa fa-eye mailbox-visi-yes\"\n            favoriteTitle = t \"mailbox title favorite\"\n        else\n            favoriteClass = \"fa fa-eye-slash mailbox-visi-no\"\n            favoriteTitle = t \"mailbox title not favorite\"\n        nbTotal  = @props.mailbox.get('nbTotal') or 0\n        nbUnread = @props.mailbox.get('nbUnread') or 0\n        nbRecent = @props.mailbox.get('nbRecent') or 0\n        classItem = classer\n            'row': true\n            'box': true\n            'box-item': true\n            edited: @state.edited\n        if @state.edited\n            li className: classItem, key: key,\n                span\n                    className: \"col-xs-1 box-action save\"\n                    onClick: @updateMailbox\n                    title: t(\"mailbox title edit save\"),\n                        i className: 'fa fa-check'\n                span\n                    className: \"col-xs-1 box-action cancel\"\n                    onClick: @undoMailbox\n                    title: t(\"mailbox title edit cancel\"),\n                        i className: 'fa fa-undo'\n                input\n                    className: \"col-xs-6 box-label\"\n                    ref: 'label',\n                    defaultValue: @props.mailbox.get 'label'\n                    type: 'text'\n                    onKeyDown: @onKeyDown,\n        else\n            li className: classItem, key: key,\n                span\n                    className: \"col-xs-1 box-action edit\",\n                    onClick: @editMailbox,\n                    title: t(\"mailbox title edit\"),\n                        i className: 'fa fa-pencil'\n                span\n                    className: \"col-xs-1 box-action delete\",\n                    onClick: @deleteMailbox,\n                    title: t(\"mailbox title delete\"),\n                        i className: 'fa fa-trash-o'\n                span\n                    className: \"col-xs-6 box-label\",\n                    onClick: @editMailbox,\n                    \"#{pusher}#{@props.mailbox.get 'label'}\"\n                span\n                    className: \"col-xs-1 box-action favorite\",\n                    title: favoriteTitle\n                    onClick: @toggleFavorite,\n                        i className: favoriteClass\n                span\n                    className: \"col-xs-1 text-center box-count box-total\",\n                    nbTotal\n                span\n                    className: \"col-xs-1 text-center box-count box-unread\",\n                    nbUnread\n                span\n                    className: \"col-xs-1 text-center box-count box-new\",\n                    nbRecent\n\n    onKeyDown: (evt) ->\n        switch evt.key\n            when \"Enter\"\n                @updateMailbox()\n\n    editMailbox: (e) ->\n        e.preventDefault()\n        @setState edited: true\n\n    undoMailbox: (e) ->\n        e.preventDefault()\n        @setState edited: false\n\n    updateMailbox: (e) ->\n        e?.preventDefault()\n\n        mailbox =\n            label: @refs.label.getDOMNode().value.trim()\n            mailboxID: @props.mailbox.get 'id'\n            accountID: @props.accountID\n\n        AccountActionCreator.mailboxUpdate mailbox, (error) =>\n            if error?\n                LAC.alertError \"#{t(\"mailbox update ko\")} #{error}\"\n            else\n                LAC.notify t(\"mailbox update ok\"),\n                    autoclose: true\n                @setState edited: false\n\n    toggleFavorite: (e) ->\n        mailbox =\n            favorite: not @state.favorite\n            mailboxID: @props.mailbox.get 'id'\n            accountID: @props.accountID\n\n        AccountActionCreator.mailboxUpdate mailbox, (error) ->\n            if error?\n                LAC.alertError \"#{t(\"mailbox update ko\")} #{error}\"\n            else\n                LAC.notify t(\"mailbox update ok\"),\n                    autoclose: true\n\n        @setState favorite: not @state.favorite\n\n    deleteMailbox: (e) ->\n        e.preventDefault()\n\n        if window.confirm(t 'account confirm delbox')\n            mailbox =\n                mailboxID: @props.mailbox.get 'id'\n                accountID: @props.accountID\n\n            AccountActionCreator.mailboxDelete mailbox, (error) ->\n                if error?\n                    LAC.alertError \"#{t(\"mailbox delete ko\")} #{error}\"\n                else\n                    LAC.notify t(\"mailbox delete ok\"),\n                        autoclose: true\n\nAccountInput = React.createClass\n    displayName: 'AccountInput'\n\n    mixins: [\n        RouterMixin\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n    getInitialState: ->\n        return @props\n\n    componentWillReceiveProps: (props) ->\n        @setState props\n\n    render: ->\n        hasError = (fields) =>\n            if not Array.isArray fields\n                fields = [ fields ]\n            errors = fields.some (field) => @state.errors[field]?\n            return if errors then ' has-error' else ''\n\n        getError = (field) =>\n            if @state.errors[field]?\n                div\n                    className: 'col-sm-5 col-sm-offset-2 control-label',\n                    @state.errors[field]\n\n        name = @props.name\n        type = @props.type or 'text'\n        errorField = @props.errorField or name\n\n        div\n            key: \"account-input-#{name}\",\n            className: \"form-group account-item-#{name} \" + hasError(errorField),\n                label\n                    htmlFor: \"mailbox-#{name}\",\n                    className: \"col-sm-2 col-sm-offset-2 control-label\",\n                    t \"account #{name}\"\n                div className: 'col-sm-3',\n                    if type isnt 'checkbox'\n                        input\n                            id: \"mailbox-#{name}\",\n                            name: \"mailbox-#{name}\",\n                            valueLink: @linkState('value').value,\n                            type: type,\n                            className: 'form-control',\n                            placeholder: if (type is 'text' or type is 'email') then t(\"account #{name} short\") else null\n                            onBlur: @props.onBlur or null#@props.validateForm\n                            onInput: @props.onInput or null\n                    else\n                        input\n                            id: \"mailbox-#{name}\",\n                            name: \"mailbox-#{name}\",\n                            checkedLink: @linkState('value').value,\n                            type: type,\n                            onClick: @props.onClick\n                getError name\n","{div, ul, li, p, span, a, button, input} = React.DOM\n\nRouterMixin = require '../mixins/router_mixin'\n\nmodule.exports = React.createClass\n    displayName: 'AccountPicker'\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    render: ->\n        if Object.keys(accounts).length is 1\n            @renderNoChoice()\n        else\n            @renderPicker()\n\n    onChange: ({target: dataset: value: accountID})->\n        @props.valueLink.requestChange accountID\n\n    renderNoChoice: ->\n        account = @props.accounts[@props.valueLink.value]\n\n        label = \"\\\"#{account.name or account.label}\\\" <#{account.login}>\"\n        p className: 'form-control-static col-sm-6', label\n\n    renderPicker:  ->\n        accounts = @props.accounts\n        account  = accounts[@props.valueLink.value]\n        value    = @props.valueLink.value\n        label = \"\\\"#{account.name or account.label}\\\" <#{account.login}>\"\n\n        div className: 'account-picker',\n            span\n                className: 'compose-from dropdown-toggle',\n                'data-toggle': 'dropdown',\n                    span\n                        ref: 'account',\n                        'data-value': value,\n                        label\n                    span className: 'caret'\n            ul className: 'dropdown-menu', role: 'menu',\n                for key, account of accounts when key isnt value\n                    @renderAccount(key, account)\n\n    renderAccount: (key, account) ->\n        label = \"\\\"#{account.name or account.label}\\\" <#{account.login}>\"\n\n        li\n            role: 'presentation',\n            key: key,\n                a\n                    role: 'menuitem',\n                    onClick: @onChange,\n                    'data-value': key,\n                    label\n\n\n","{div, button, span, strong} = React.DOM\n{AlertLevel}     = require '../constants/app_constants'\nLayoutActionCreator = require '../actions/layout_action_creator'\n\nmodule.exports = React.createClass\n    displayName: 'Alert'\n\n    render: ->\n\n        alert = @props.alert\n        if alert.level?\n            levels = {}\n            levels[AlertLevel.SUCCESS] = 'alert-success'\n            levels[AlertLevel.INFO]    = 'alert-info'\n            levels[AlertLevel.WARNING] = 'alert-warning'\n            levels[AlertLevel.ERROR]   = 'alert-danger'\n\n        div className: 'row row-alert',\n            if alert.level?\n                div\n                    ref: 'alert'\n                    className: \"alert #{levels[alert.level]} alert-dismissible\",\n                    role: \"alert\",\n                        button\n                            type: \"button\",\n                            className: \"close\",\n                            onClick: @hide,\n                                span 'aria-hidden': \"true\", \"×\"\n                                span className: \"sr-only\", t \"app alert close\"\n                        strong null, alert.message\n\n    hide: ->\n        LayoutActionCreator.alertHide()\n\n    autohide: ->\n        if false and @props.alert.level is AlertLevel.SUCCESS\n            setTimeout =>\n                @refs.alert.getDOMNode().classList.add 'autoclose'\n            , 1000\n            setTimeout @hide, 10000\n\n    componentDidMount: ->\n        @autohide()\n\n    componentDidUpdate: ->\n        @autohide()\n","# React components\n{body, div, p, form, i, input, span, a, button, strong} = React.DOM\nAccountConfig = require './account-config'\nAlert         = require './alert'\nTopbar        = require './topbar'\nToastContainer = require('./toast').Container\nCompose       = require './compose'\nConversation  = require './conversation'\nMenu          = require './menu'\nMessageList   = require './message-list'\nSettings      = require './settings'\nSearchForm    = require './search-form'\n\n# React addons\nReactCSSTransitionGroup = React.addons.CSSTransitionGroup\nclasser = React.addons.classSet\n\n# React Mixins\nRouterMixin = require '../mixins/router_mixin'\nStoreWatchMixin = require '../mixins/store_watch_mixin'\n\n# Flux stores\nAccountStore  = require '../stores/account_store'\nContactStore  = require '../stores/contact_store'\nMessageStore  = require '../stores/message_store'\nLayoutStore   = require '../stores/layout_store'\nSettingsStore = require '../stores/settings_store'\nSearchStore   = require '../stores/search_store'\nRefreshesStore = require '../stores/refreshes_store'\nStores = [AccountStore, ContactStore, MessageStore, LayoutStore,\n        SettingsStore, SearchStore, RefreshesStore]\n\n# Flux actions\nLayoutActionCreator = require '../actions/layout_action_creator'\n\n{MessageFilter, Dispositions} = require '../constants/app_constants'\n\n###\n    This component is the root of the React tree.\n\n    It has two functions:\n        - building the layout based on the router\n        - listening for changes in  the model (Flux stores)\n          and re-render accordingly\n\n    About routing: it uses Backbone.Router as a source of truth for the layout.\n    (based on:\n        https://medium.com/react-tutorials/react-backbone-router-c00be0cf1592)\n###\nmodule.exports = Application = React.createClass\n    displayName: 'Application'\n\n    mixins: [\n        StoreWatchMixin Stores\n        RouterMixin\n    ]\n\n    render: ->\n        # Shortcut\n        layout = @props.router.current\n        if not layout?\n            return div null, t \"app loading\"\n\n        # is the layout a full-width panel or two panels sharing the width\n        isFullWidth = not layout.secondPanel?\n\n        firstPanelLayoutMode = if isFullWidth then 'full' else 'first'\n        disposition = LayoutStore.getDisposition()\n\n        panelsClasses = classer\n            row: true\n            horizontal: disposition.type is Dispositions.HORIZONTAL\n            three: disposition.type is Dispositions.THREE\n            vertical: disposition.type is Dispositions.VERTICAL\n            full: isFullWidth\n        # css classes are a bit long so we use a subfunction to get them\n        panelClasses = @getPanelClasses isFullWidth\n\n        # classes for page-content\n        responsiveClasses = classer\n            'col-xs-12': true\n            'col-md-9':  disposition.type is Dispositions.THREE\n            'col-md-11': disposition.type isnt Dispositions.THREE\n            'pushed': @state.isResponsiveMenuShown\n\n        alert = @state.alertMessage\n\n        getUrl = (mailbox) =>\n            @buildUrl\n                direction: 'first'\n                action: 'account.mailbox.messages'\n                parameters: [\n                    @state.selectedAccount?.get('id'),\n                    mailbox.get('id')\n                ]\n\n        keyFirst = 'left-panel-' + layout.firstPanel.action.split('.')[0]\n        if layout.secondPanel?\n            keySecond = 'right-panel-' + layout.secondPanel.action.split('.')[0]\n            # update current message id\n            # this need to be done here, so MessageList get the good message ID\n            if layout.secondPanel.parameters.messageID?\n                MessageStore.setCurrentID layout.secondPanel.parameters.messageID\n\n        # Actual layout\n        div className: 'container-fluid',\n            div className: 'row',\n\n                # Menu is self-managed because this part of the layout\n                # is always the same.\n                Menu\n                    ref: 'menu'\n                    accounts: @state.accounts\n                    refreshes: @state.refreshes\n                    selectedAccount: @state.selectedAccount\n                    selectedMailboxID: @state.selectedMailboxID\n                    isResponsiveMenuShown: @state.isResponsiveMenuShown\n                    layout: @props.router.current\n                    mailboxes: @state.mailboxesSorted\n                    favorites: @state.favoriteSorted\n                    disposition: disposition\n                    toggleMenu: @toggleMenu\n\n                div id: 'page-content', className: responsiveClasses,\n\n                    # Display feedback\n                    Alert { alert }\n                    ToastContainer()\n\n                    #a onClick: @toggleMenu, className: 'responsive-handler hidden-md hidden-lg',\n                        #i className: 'fa fa-bars pull-left'\n                        #t \"app menu\"\n                    # The quick actions bar\n                    #Topbar\n                    #    ref: 'topbar'\n                    #    layout: @props.router.current\n                    #    mailboxes: @state.mailboxes\n                    #    selectedAccount: @state.selectedAccount\n                    #    selectedMailboxID: @state.selectedMailboxID\n                    #    searchQuery: @state.searchQuery\n                    #    isResponsiveMenuShown: @state.isResponsiveMenuShown\n\n                    # Two layout modes: one full-width panel or two panels\n                    div id: 'panels', className: panelsClasses,\n                        div\n                            className: panelClasses.firstPanel,\n                            key: keyFirst,\n                                @getPanelComponent layout.firstPanel,\n                                    firstPanelLayoutMode\n                        if not isFullWidth and layout.secondPanel?\n                            div\n                                className: panelClasses.secondPanel,\n                                key: keySecond,\n                                    @getPanelComponent layout.secondPanel,\n                                        'second'\n\n\n    # Panels CSS classes are a bit long so we get them from a this subfunction\n    # Also, it manages transitions between screens by adding relevant classes\n    getPanelClasses: (isFullWidth) ->\n        previous = @props.router.previous\n        layout   = @props.router.current\n        first    = layout.firstPanel\n        second   = layout.secondPanel\n\n        # Two cases: the layout has a full-width panel...\n        if isFullWidth\n            classes = firstPanel: 'panel col-xs-12 col-md-12 row-10'\n\n            # (default) when full-width panel is shown after\n            # a two-panels structure\n            if previous? and previous.secondPanel\n\n                # if the full-width panel was on right right before, it expands\n                if previous.secondPanel.action is layout.firstPanel.action and\n                   _.difference(previous.secondPanel.parameters,\n                        layout.firstPanel.parameters).length is 0\n                    classes.firstPanel += ' expandFromRight'\n\n            # (default) when full-width panel is shown after a full-width panel\n            else if previous?\n                classes.firstPanel += ' moveFromLeft'\n\n\n        # ... or a two panels layout.\n        else\n            disposition = LayoutStore.getDisposition()\n            if disposition.type is Dispositions.HORIZONTAL\n                classes =\n                    firstPanel: \"panel col-xs-12 col-md-12 hidden-xs hidden-sm row-#{disposition.height}\"\n                    secondPanel: \"panel col-xs-12 col-md-12 row-#{10 - disposition.height} row-offset-#{disposition.height}\"\n            else\n                classes =\n                    firstPanel: \"panel col-xs-12 col-md-#{disposition.width} hidden-xs hidden-sm row-10\"\n                    secondPanel: \"panel col-xs-12 col-md-#{12 - disposition.width} col-offset-#{disposition.width} row-10\"\n\n            # we don't animate in the first render\n            if previous?\n                wasFullWidth = not previous.secondPanel?\n\n                # transition from full-width to two-panels layout\n                if wasFullWidth and not isFullWidth\n\n                    # expanded second panel collapses\n                    if previous.firstPanel.action is second.action and\n                       _.difference(previous.firstPanel.parameters,\n                            second.parameters).length is 0\n                        classes.firstPanel += ' moveFromLeft'\n                        classes.secondPanel += ' slide-in-from-left'\n\n                    # (default) opens second panel sliding from the right\n                    else\n                        classes.secondPanel += ' slide-in-from-right'\n\n                # (default) opens second panel sliding from the left\n                else if not isFullWidth\n                    classes.secondPanel += ' slide-in-from-left'\n\n        return classes\n\n\n    # Factory of React components for panels\n    getPanelComponent: (panelInfo, layout) ->\n\n        # -- Generates a list of messages for a given account and mailbox\n        if panelInfo.action is 'account.mailbox.messages' or\n           panelInfo.action is 'account.mailbox.messages.full' or\n           panelInfo.action is 'search'\n\n            if panelInfo.action is 'search'\n                accountID = null\n                mailboxID = null\n                messages  = SearchStore.getResults()\n                messagesCount    = messages.count()\n                emptyListMessage = t 'list search empty', query: @state.searchQuery\n                counterMessage   = t 'list search count', messagesCount\n            else\n                accountID = panelInfo.parameters.accountID\n                mailboxID = panelInfo.parameters.mailboxID\n                account   = AccountStore.getByID accountID\n                if account?\n                    mailbox   = account.get('mailboxes').get mailboxID\n                    messages  = MessageStore.getMessagesByMailbox mailboxID, @state.settings.get('displayConversation')\n                    messagesCount = mailbox?.get('nbTotal') or 0\n                    emptyListMessage = switch MessageStore.getCurrentFilter()\n                        when MessageFilter.FLAGGED\n                            t 'no flagged message'\n                        when MessageFilter.UNSEEN\n                            t 'no unseen message'\n                        when MessageFilter.ALL\n                            t 'list empty'\n                        else\n                            t 'no filter message'\n                    counterMessage   = t 'list count', messagesCount\n                else\n                    @redirect\n                        direction: \"first\"\n                        action: \"default\"\n                    return\n\n            # gets the selected message if any\n            messageID = MessageStore.getCurrentID()\n            direction = if layout is 'first' then 'secondPanel' \\\n                else 'firstPanel'\n\n            fetching = MessageStore.isFetching()\n            if @state.settings.get 'displayConversation'\n                # select first conversation to allow navigation to start\n                conversationID = MessageStore.getCurrentConversationID()\n                if not conversationID? and messages.length > 0\n                    conversationID = messages.first().get 'conversationID'\n                    conversation = MessageStore.getConversation conversationID\n                conversationLengths = MessageStore.getConversationsLength()\n\n            query = _.clone(MessageStore.getParams())\n            query.accountID = accountID\n            query.mailboxID = mailboxID\n\n            isTrash = @state.selectedAccount?.get('trashMailbox') is mailboxID\n\n            return MessageList\n                messages:      messages\n                messagesCount: messagesCount\n                accountID:     accountID\n                mailboxID:     mailboxID\n                messageID:     messageID\n                conversationID: conversationID\n                login:         AccountStore.getByID(accountID).get 'login'\n                mailboxes:     @state.mailboxesFlat\n                settings:      @state.settings\n                fetching:      fetching\n                refreshes:     @state.refreshes\n                query:         query\n                isTrash:       isTrash\n                conversationLengths: conversationLengths\n                emptyListMessage: emptyListMessage\n                counterMessage:   counterMessage\n                ref:           'messageList'\n                toggleMenu: @toggleMenu\n\n        # -- Generates a configuration window for a given account\n        else if panelInfo.action is 'account.config'\n            # don't use @state.selectedAccount\n            ref               = \"accountConfig\"\n            selectedAccount   = AccountStore.getSelected()\n            error             = AccountStore.getError()\n            isWaiting         = AccountStore.isWaiting()\n            mailboxes         = AccountStore.getSelectedMailboxes()\n            favoriteMailboxes = @state.favoriteMailboxes\n            tab = panelInfo.parameters.tab\n            if selectedAccount and not error and mailboxes.length is 0\n                error =\n                    name: 'AccountConfigError'\n                    field: 'nomailboxes'\n\n            return AccountConfig {error, isWaiting, selectedAccount,\n                mailboxes, favoriteMailboxes, tab, ref}\n\n        else if panelInfo.action is 'account.new'\n            return AccountConfig\n                ref: \"accountConfig\"\n                error: AccountStore.getError()\n                isWaiting: AccountStore.isWaiting()\n\n        # -- Generates a conversation\n        else if panelInfo.action is 'message' or\n                panelInfo.action is 'conversation'\n\n            messageID      = panelInfo.parameters.messageID\n            message        = MessageStore.getByID messageID\n            selectedMailboxID = @state.selectedMailboxID\n            if message?\n                conversationID = message.get 'conversationID'\n                lengths = MessageStore.getConversationsLength()\n                conversationLength = lengths.get conversationID\n                conversation = MessageStore.getConversation conversationID\n                selectedMailboxID ?= Object.keys(message.get('mailboxIDs'))[0]\n\n            prevMessage = MessageStore.getPreviousMessage()\n            nextMessage = MessageStore.getNextMessage()\n\n            return Conversation\n                key: 'conversation-' + conversationID\n                layout               : layout\n                settings             : @state.settings\n                accounts             : @state.accountsFlat\n                mailboxes            : @state.mailboxesFlat\n                selectedAccountID    : @state.selectedAccount.get 'id'\n                selectedAccountLogin : @state.selectedAccount.get 'login'\n                selectedMailboxID    : selectedMailboxID\n                message              : message\n                conversation         : conversation\n                conversationLength   : conversationLength\n                prevMessageID        : prevMessage?.get 'id'\n                prevConversationID   : prevMessage?.get 'conversationID'\n                nextMessageID        : nextMessage?.get 'id'\n                nextConversationID   : nextMessage?.get 'conversationID'\n                ref                  : 'conversation'\n\n        # -- Generates the new message composition form\n        else if panelInfo.action is 'compose'\n\n            return Compose\n                layout               : layout\n                action               : null\n                inReplyTo            : null\n                settings             : @state.settings\n                accounts             : @state.accountsFlat\n                selectedAccountID    : @state.selectedAccount.get 'id'\n                selectedAccountLogin : @state.selectedAccount.get 'login'\n                message              : null\n                ref                  : 'compose'\n\n        # -- Generates the edit draft composition form\n        else if panelInfo.action is 'edit'\n\n            messageID = panelInfo.parameters.messageID\n            message = MessageStore.getByID messageID\n\n            return Compose\n                layout               : layout\n                action               : null\n                inReplyTo            : null\n                settings             : @state.settings\n                accounts             : @state.accountsFlat\n                selectedAccountID    : @state.selectedAccount.get 'id'\n                selectedAccountLogin : @state.selectedAccount.get 'login'\n                selectedMailboxID    : @state.selectedMailboxID\n                message              : message\n                ref                  : 'compose'\n\n        # -- Display the settings form\n        else if panelInfo.action is 'settings'\n            settings = @state.settings\n            return Settings\n                ref     : 'settings'\n                settings: @state.settings\n\n        # -- Error case, shouldn't happen. Might be worth to make it pretty.\n        else return div null, 'Unknown component'\n\n    getStateFromStores: ->\n\n        selectedAccount = AccountStore.getSelected()\n        # When selecting compose in Menu, we may not have a selected account\n        if not selectedAccount?\n            selectedAccount = AccountStore.getDefault()\n        selectedAccountID = selectedAccount?.get('id') or null\n\n        firstPanelInfo = @props.router.current?.firstPanel\n        if firstPanelInfo?.action is 'account.mailbox.messages' or\n           firstPanelInfo?.action is 'account.mailbox.messages.full'\n            selectedMailboxID = firstPanelInfo.parameters.mailboxID\n        else\n            selectedMailboxID = null\n\n        accounts  = AccountStore.getAll()\n        mailboxes = AccountStore.getSelectedMailboxes()\n\n        # Flat copies of accounts and mailboxes\n        # This prevents components to refresh when properties they don't use are\n        # updated (unread counts, timestamp of last refresh…)\n        accountsFlat = {}\n        accounts.map (account) ->\n            accountsFlat[account.get 'id'] =\n                name:  account.get 'name'\n                label: account.get 'label'\n                login: account.get 'login'\n        .toJS()\n\n        mailboxesFlat = {}\n        mailboxes.map (mailbox) ->\n            id = mailbox.get 'id'\n            mailboxesFlat[id] = {}\n            ['id', 'label', 'depth'].map (prop) ->\n                mailboxesFlat[id][prop] = mailbox.get prop\n        .toJS()\n\n        return {\n            accounts: accounts\n            accountsFlat: accountsFlat\n            selectedAccount: selectedAccount\n            isResponsiveMenuShown: false\n            alertMessage: LayoutStore.getAlert()\n            mailboxes: mailboxes\n            mailboxesSorted: AccountStore.getSelectedMailboxes true\n            mailboxesFlat: mailboxesFlat\n            selectedMailboxID: selectedMailboxID\n            selectedMailbox: AccountStore.getSelectedMailbox selectedMailboxID\n            favoriteMailboxes: AccountStore.getSelectedFavorites()\n            favoriteSorted: AccountStore.getSelectedFavorites true\n            searchQuery: SearchStore.getQuery()\n            refreshes: RefreshesStore.getRefreshing()\n            settings: SettingsStore.get()\n            plugins: window.plugins\n        }\n\n\n    # Listens to router changes. Renders the component on changes.\n    componentWillMount: ->\n        # Uses `forceUpdate` with the proper scope because React doesn't allow\n        # to rebind its scope on the fly\n        @onRoute = (params) =>\n            {firstPanel, secondPanel} = params\n            if firstPanel?\n                @checkAccount firstPanel.action\n            if secondPanel?\n                @checkAccount secondPanel.action\n            @forceUpdate()\n\n        @props.router.on 'fluxRoute', @onRoute\n\n    checkAccount: (action) ->\n        # \"special\" mailboxes must be set before accessing to the account\n        # otherwise, redirect to account config\n        account = @state.selectedAccount\n        if (account?)\n            if not account.get('draftMailbox')? or\n               not account.get('sentMailbox')? or\n               not account.get('trashMailbox')?\n\n                if action is 'account.mailbox.messages' or\n                   action is 'account.mailbox.messages.full' or\n                   action is 'search' or\n                   action is 'message' or\n                   action is 'conversation' or\n                   action is 'compose' or\n                   action is 'edit'\n                    @redirect\n                        direction: 'first'\n                        action: 'account.config'\n                        parameters: [\n                            account.get 'id'\n                            'mailboxes'\n                        ]\n                        fullWidth: true\n                    LayoutActionCreator.alertError t 'account no special mailboxes'\n\n    _notify: (title, options) ->\n        window.cozyMails.notify title, options\n\n    componentDidMount: ->\n        Stores.forEach (store) =>\n            store.on 'notify', @_notify\n\n    componentWillUnmount: ->\n        Stores.forEach (store) =>\n            store.removeListener 'notify', @notify\n        # Stops listening to router changes\n        @props.router.off 'fluxRoute', @onRoute\n\n    # Toggle the menu in responsive mode\n    toggleMenu: (event) ->\n        @setState isResponsiveMenuShown: not @state.isResponsiveMenuShown\n\n","{div, h3, a, i, textarea, form, label, button, span, ul, li, input} = React.DOM\nclasser = React.addons.classSet\n\nFilePicker = require './file_picker'\nMailsInput = require './mails_input'\n\nAccountPicker = require './account_picker'\n\n{ComposeActions} = require '../constants/app_constants'\n\nMessageUtils = require '../utils/message_utils'\n\nLayoutActionCreator  = require '../actions/layout_action_creator'\nMessageActionCreator = require '../actions/message_action_creator'\n\nRouterMixin = require '../mixins/router_mixin'\n\nmodule.exports = Compose = React.createClass\n    displayName: 'Compose'\n\n    mixins: [\n        RouterMixin,\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n    propTypes:\n        selectedAccountID:    React.PropTypes.string.isRequired\n        selectedAccountLogin: React.PropTypes.string.isRequired\n        layout:               React.PropTypes.string.isRequired\n        accounts:             React.PropTypes.object.isRequired\n        message:              React.PropTypes.object\n        action:               React.PropTypes.string\n        callback:             React.PropTypes.func\n        onCancel:             React.PropTypes.func\n        settings:             React.PropTypes.object.isRequired\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    render: ->\n\n        return unless @props.accounts\n\n        onCancel = =>\n            if @props.onCancel?\n                @props.onCancel()\n            else\n                @redirect @buildUrl\n                    direction: 'first'\n                    action: 'default'\n                    fullWidth: true\n\n        toggleFullscreen = ->\n            LayoutActionCreator.toggleFullscreen()\n\n        closeUrl = @buildClosePanelUrl @props.layout\n\n        classLabel = 'compose-label'\n        classInput = 'compose-input'\n        classCc    = if @state.cc.length is 0 then '' else ' shown'\n        classBcc   = if @state.bcc.length is 0 then '' else ' shown'\n\n        labelSend   = if @state.sending then t 'compose action sending' else t 'compose action send'\n        focusEditor = Array.isArray(@state.to) and @state.to.length > 0 and @state.subject isnt ''\n\n        div id: 'email-compose',\n            if @props.layout isnt 'full'\n                a onClick: toggleFullscreen, className: 'expand pull-right clickable',\n                    i className: 'fa fa-arrows-h'\n            else\n                a onClick: toggleFullscreen, className: 'close-email pull-right clickable',\n                    i className:'fa fa-compress'\n            h3\n                'data-message-id': @props.message?.get('id') or ''\n                @state.subject or t 'compose'\n            form className: 'form-compose',\n                div className: 'form-group account',\n                    label\n                        htmlFor: 'compose-from',\n                        className: classLabel,\n                        t \"compose from\"\n                    div className: classInput,\n                        div\n                            className: 'btn-toolbar compose-toggle',\n                            role: 'toolbar',\n                                div null\n                                    a\n                                        className: 'compose-toggle-cc',\n                                        onClick: @onToggleCc,\n                                        t 'compose toggle cc'\n                                    a\n                                        className: 'compose-toggle-bcc',\n                                        onClick: @onToggleBcc,\n                                        t 'compose toggle bcc'\n\n                        AccountPicker\n                            accounts: @props.accounts\n                            valueLink: @linkState 'accountID'\n                div className: 'clearfix', null\n\n                MailsInput\n                    id: 'compose-to'\n                    valueLink: @linkState 'to'\n                    label: t 'compose to'\n                    ref: 'to'\n\n                MailsInput\n                    id: 'compose-cc'\n                    className: 'compose-cc' + classCc\n                    valueLink: @linkState 'cc'\n                    label: t 'compose cc'\n                    placeholder: t 'compose cc help'\n\n                MailsInput\n                    id: 'compose-bcc'\n                    className: 'compose-bcc' + classBcc\n                    valueLink: @linkState 'bcc'\n                    label: t 'compose bcc'\n                    placeholder: t 'compose bcc help'\n\n                div className: 'form-group',\n                    label\n                        htmlFor: 'compose-subject',\n                        className: classLabel,\n                        t \"compose subject\"\n                    div className: classInput,\n                        input\n                            id: 'compose-subject',\n                            name: 'compose-subject',\n                            ref: 'subject',\n                            valueLink: @linkState('subject'),\n                            type: 'text',\n                            className: 'form-control',\n                            placeholder: t \"compose subject help\"\n                div className: '',\n                    label\n                        htmlFor: 'compose-subject',\n                        className: classLabel,\n                        t \"compose content\"\n                    ComposeEditor\n                        messageID: @props.message?.get 'id'\n                        html: @linkState('html')\n                        text: @linkState('text')\n                        settings: @props.settings\n                        onSend: @onSend\n                        composeInHTML: @state.composeInHTML\n                        focus: focusEditor\n\n                div className: 'attachements',\n                    FilePicker\n                        className: ''\n                        editable: true\n                        valueLink: @linkState 'attachments'\n                        ref: 'attachments'\n\n                div className: 'composeToolbox',\n                    div className: 'btn-toolbar', role: 'toolbar',\n                        div className: '',\n                            button\n                                className: 'btn btn-cozy btn-send',\n                                type: 'button',\n                                disable: if @state.sending then true else null\n                                onClick: @onSend,\n                                    if @state.sending\n                                        span className: 'fa fa-refresh fa-spin'\n                                    else\n                                        span className: 'fa fa-send'\n                                    span null, labelSend\n                            button\n                                className: 'btn btn-cozy btn-save',\n                                disable: if @state.saving then true else null\n                                type: 'button', onClick: @onDraft,\n                                    if @state.saving\n                                        span className: 'fa fa-refresh fa-spin'\n                                    else\n                                        span className: 'fa fa-save'\n                                    span null, t 'compose action draft'\n                            if @props.message?\n                                button\n                                    className: 'btn btn-cozy-non-default btn-delete',\n                                    type: 'button',\n                                    onClick: @onDelete,\n                                        span className: 'fa fa-trash-o'\n                                        span null, t 'compose action delete'\n                            button\n                                onClick: onCancel\n                                className: 'btn btn-cozy-non-default btn-cancel',\n                                t 'app cancel'\n                div className: 'clearfix', null\n\n    _initCompose: ->\n\n        if @_saveInterval\n            window.clearInterval @_saveInterval\n        @_saveInterval = window.setInterval @_autosave, 30000\n\n        # scroll compose window into view\n        @getDOMNode().scrollIntoView()\n\n        # Focus\n        if not Array.isArray(@state.to) or @state.to.length is 0\n            setTimeout ->\n                document.getElementById('compose-to').focus()\n            , 0\n\n    componentDidMount: ->\n        @_initCompose()\n\n    #componentDidUpdate: ->\n    #    @_initCompose()\n\n    componentWillUnmount: ->\n        if @_saveInterval\n            window.clearInterval @_saveInterval\n        #if @state.isDraft and @state.id?\n        #    if not window.confirm(t 'compose confirm keep draft')\n        #        MessageActionCreator.delete @state.id, (error) ->\n        #            if error?\n        #                LayoutActionCreator.alertError \"#{t(\"message action delete ko\")} #{error}\"\n        #            else\n        #                LayoutActionCreator.notify t('compose draft deleted')\n\n    getInitialState: (forceDefault) ->\n\n        # edition of an existing draft\n        if message = @props.message\n            state =\n                composeInHTML: @props.settings.get 'composeInHTML'\n            if (not message.get('html')?) and message.get('text')\n                state.conposeInHTML = false\n\n            # TODO : smarter ?\n            state[key] = value for key, value of message.toJS()\n            # we want the immutable attachments\n            state.attachments = message.get 'attachments'\n\n        # new draft\n        else\n            state = MessageUtils.makeReplyMessage @props.selectedAccountLogin,\n                @props.inReplyTo, @props.action, @props.settings.get('composeInHTML')\n            state.accountID ?= @props.selectedAccountID\n\n        state.sending = false\n        state.saving  = false\n        return state\n\n    componentWillReceiveProps: (nextProps) ->\n        if nextProps.message isnt @props.message\n            @props.message = nextProps.message\n            @setState @getInitialState()\n\n    onDraft: (args) ->\n        @_doSend true\n\n    onSend: (args) ->\n        @_doSend false\n\n    _doSend: (isDraft) ->\n\n        account = @props.accounts[@state.accountID]\n\n        from =\n            name: account.name or undefined\n            address: account.login\n\n        message =\n            id          : @state.id\n            accountID   : @state.accountID\n            mailboxIDs  : @state.mailboxIDs\n            from        : [from]\n            to          : @state.to\n            cc          : @state.cc\n            bcc         : @state.bcc\n            subject     : @state.subject\n            isDraft     : isDraft\n            attachments : @state.attachments\n\n        valid = true\n        if not isDraft\n            if @state.to.length is 0 and @state.cc.length is 0 and @state.bcc.length is 0\n                valid = false\n                LayoutActionCreator.alertError t \"compose error no dest\"\n                setTimeout ->\n                    document.getElementById('compose-to').focus()\n                , 0\n            else if @state.subject is ''\n                valid = false\n                LayoutActionCreator.alertError t \"compose error no subject\"\n                setTimeout =>\n                    @refs.subject.getDOMNode().focus()\n                , 0\n\n        if valid\n            if @state.composeInHTML\n                message.html = @state.html\n                try\n                    message.text = toMarkdown(message.html)\n                catch\n                    message.text = message.html?replace /<[^>]*>/gi, ''\n\n                # convert HTML entities\n                tmp = document.createElement 'div'\n                tmp.innerHTML = message.text\n                message.text = tmp.textContent\n            else\n                message.text = @state.text.trim()\n\n            if not isDraft and @_saveInterval\n                window.clearInterval @_saveInterval\n\n            if isDraft\n                @setState saving: true\n            else\n                @setState sending: true\n\n            MessageActionCreator.send message, (error, message) =>\n                if isDraft\n                    @setState saving: false\n                else\n                    @setState sending: false\n                if isDraft\n                    msgKo = t \"message action draft ko\"\n                    msgOk = t \"message action draft ok\"\n                else\n                    msgKo = t \"message action sent ko\"\n                    msgOk = t \"message action sent ok\"\n                if error?\n                    LayoutActionCreator.alertError \"#{msgKo} #{error}\"\n                else\n                    LayoutActionCreator.notify msgOk, autoclose: true\n\n                    if not @state.id?\n                        MessageActionCreator.setCurrent message.id\n\n                    @setState message\n\n                    if not isDraft\n                        if @props.callback?\n                            @props.callback error\n                        else\n                            @redirect @buildClosePanelUrl @props.layout\n\n    _autosave: ->\n        @_doSend true\n\n    onDelete: (args) ->\n        subject = @props.message.get 'subject'\n        if subject? and subject isnt ''\n            confirmMessage = t 'mail confirm delete', {subject: @props.message.get('subject')}\n        else\n            confirmMessage = t 'mail confirm delete nosubject'\n        if window.confirm confirmMessage\n            MessageActionCreator.delete @props.message, (error) =>\n                if error?\n                    LayoutActionCreator.alertError \"#{t(\"message action delete ko\")} #{error}\"\n                else\n                    if @props.callback\n                        @props.callback()\n                    else\n                        @redirect\n                            direction: 'first'\n                            action: 'account.mailbox.messages'\n                            parameters: [@props.selectedAccountID, @props.selectedMailboxID]\n                            fullWidth: true\n\n    onToggleCc: (e) ->\n        toggle = (e) -> e.classList.toggle 'shown'\n        toggle e for e in @getDOMNode().querySelectorAll '.compose-cc'\n\n    onToggleBcc: (e) ->\n        toggle = (e) -> e.classList.toggle 'shown'\n        toggle e for e in @getDOMNode().querySelectorAll '.compose-bcc'\n\n\nComposeEditor = React.createClass\n    displayName: 'ComposeEditor'\n\n    mixins: [\n        React.addons.LinkedStateMixin # two-way data binding\n    ]\n\n    getInitialState: ->\n        return {\n            html: @props.html\n            text: @props.text\n        }\n\n    componentWillReceiveProps: (nextProps) ->\n        if nextProps.messageID isnt @props.messageID\n            @setState html: nextProps.html, text: nextProps.text\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    render: ->\n        onHTMLChange = (event) =>\n            @props.html.requestChange @refs.html.getDOMNode().innerHTML\n        onTextChange = (event) =>\n            @props.text.requestChange @refs.content.getDOMNode().value\n        if @props.settings.get 'composeOnTop'\n            folded = 'folded'\n        else\n            folded = ''\n        if @props.composeInHTML\n            div\n                className: \"rt-editor form-control #{folded}\",\n                ref: 'html',\n                contentEditable: true,\n                onKeyDown: @onKeyDown,\n                onInput: onHTMLChange,\n                dangerouslySetInnerHTML: {\n                    __html: @state.html.value\n                }\n        else\n            textarea\n                className: 'editor',\n                ref: 'content',\n                onKeyDown: @onKeyDown,\n                onChange: onTextChange,\n                defaultValue: @state.text.value\n\n    _initCompose: ->\n\n        if @props.composeInHTML\n            if @props.focus\n                node = @refs.html?.getDOMNode()\n                if not node?\n                    return\n                document.querySelector(\".rt-editor\").focus()\n                if not @props.settings.get 'composeOnTop'\n                    node.innerHTML += \"<p><br /></p>\"\n                    node = node.lastChild\n                    if node?\n                        # move cursor to the bottom\n                        node.scrollIntoView(false)\n                        node.innerHTML = \"<br \\>\"\n                        s = window.getSelection()\n                        r = document.createRange()\n                        r.selectNodeContents(node)\n                        s.removeAllRanges()\n                        s.addRange(r)\n                        document.execCommand('delete', false, null)\n                        node.focus()\n\n            # Some DOM manipulation when replying inside the message.\n            # When inserting a new line, we must close all blockquotes,\n            # insert a blank line and then open again blockquotes\n            jQuery('.rt-editor').on('keypress', (e) ->\n                if e.keyCode is 13\n                    # timeout to let the editor perform its own stuff\n                    setTimeout ->\n                        matchesSelector = document.documentElement.matches or\n                              document.documentElement.matchesSelector or\n                              document.documentElement.webkitMatchesSelector or\n                              document.documentElement.mozMatchesSelector or\n                              document.documentElement.oMatchesSelector or\n                              document.documentElement.msMatchesSelector\n\n                        target = document.getSelection().anchorNode\n                        targetElement = target\n                        while not (targetElement instanceof Element)\n                            targetElement = targetElement.parentNode\n                        if not target?\n                            return\n                        if matchesSelector? and not matchesSelector.call(targetElement, '.rt-editor blockquote *')\n                            # we are not inside a blockquote, nothing to do\n                            return\n\n                        if target.lastChild?\n                            target = target.lastChild\n                            if target.previousElementSibling?\n                                target = target.previousElementSibling\n                        parent = target\n\n                        # alternative 1\n                        # we create 2 ranges, one from the begining of message\n                        # to the caret position, the second from caret to the\n                        # end. We then create fragments from the ranges and\n                        # override message with first fragment, a blank line\n                        # and second fragment\n                        process = ->\n                            current = parent\n                            parent = parent?.parentNode\n                        process()\n                        process() while (parent? and\n                            not parent.classList.contains 'rt-editor')\n                        rangeBefore = document.createRange()\n                        rangeBefore.setEnd target, 0\n                        rangeBefore.setStartBefore parent.firstChild\n                        rangeAfter = document.createRange()\n                        if target.nextSibling?\n                            # remove the BR the <enter> key probably inserted\n                            rangeAfter.setStart target.nextSibling, 0\n                        else\n                            rangeAfter.setStart target, 0\n                        rangeAfter.setEndAfter parent.lastChild\n                        before = rangeBefore.cloneContents()\n                        after = rangeAfter.cloneContents()\n                        inserted = document.createElement 'p'\n                        inserted.innerHTML = \"<br />\"\n                        parent.innerHTML = \"\"\n                        parent.appendChild before\n                        parent.appendChild inserted\n                        parent.appendChild after\n\n                        ###\n                        # alternative 2\n                        # We move every node from the caret to the end of the\n                        # message to a new DOM tree, then insert a blank line\n                        # and the new tree\n                        parent = target\n                        p2 = null\n                        p3 = null\n                        process = ->\n                            p3 = p2\n                            current = parent\n                            parent = parent.parentNode\n                            p2 = parent.cloneNode false\n                            if p3?\n                                p2.appendChild p3\n                            s = current.nextSibling\n                            while s?\n                                p2.appendChild(s.cloneNode(true))\n                                s2 = s.nextSibling\n                                parent.removeChild s\n                                s = s2\n                        process()\n                        process() while (parent.parentNode? and\n                            not parent.parentNode.classList.contains 'rt-editor')\n                        after = p2\n                        inserted = document.createElement 'p'\n                        inserted.innerHTML = \"<br />\"\n                        if parent.nextSibling\n                            parent.parentNode.insertBefore inserted, parent.nextSibling\n                            parent.parentNode.insertBefore after, parent.nextSibling\n                        else\n                            parent.parentNode.appendChild inserted\n                            parent.parentNode.appendChild after\n                        ###\n\n                        setTimeout ->\n                            inserted.focus()\n                        , 0\n                        sel = window.getSelection()\n                        sel.collapse inserted, 0\n\n                    , 0\n            )\n            # Allow to hide original message\n            if document.querySelector('.rt-editor blockquote') and not document.querySelector('.rt-editor .originalToggle')\n                try\n                    header = jQuery('.rt-editor blockquote').eq(0).prev()\n                    header.text(header.text().replace('…', ''))\n                    header.append('<span class=\"originalToggle\">…</>')\n                    header.on 'click', ->\n                        jQuery('.rt-editor').toggleClass('folded')\n                catch e\n                    console.error e\n            else\n                jQuery('.rt-editor .originalToggle').on 'click', ->\n                    jQuery('.rt-editor').toggleClass('folded')\n\n        else\n            # Text message\n            if @props.focus\n                node = @refs.content.getDOMNode()\n                if not @props.settings.get 'composeOnTop'\n                    rect = node.getBoundingClientRect()\n                    node.scrollTop = node.scrollHeight - rect.height\n                    if (typeof node.selectionStart is \"number\")\n                        node.selectionStart = node.selectionEnd = node.value.length\n                    else if (typeof node.createTextRange isnt \"undefined\")\n                        setTimeout ->\n                            node.focus()\n                        , 0\n                        range = node.createTextRange()\n                        range.collapse(false)\n                        range.select()\n                setTimeout ->\n                    node.focus()\n                , 0\n\n    componentDidMount: ->\n        @_initCompose()\n\n    componentDidUpdate: (nextProps, nextState) ->\n        if nextProps.messageID isnt @props.messageID\n            @_initCompose()\n\n    onKeyDown: (evt) ->\n        if evt.ctrlKey and evt.key is 'Enter'\n            @props.onSend()\n","{div, ul, li, span, i, p, h3, a} = React.DOM\nMessage = require './message'\nclasser = React.addons.classSet\n\nLayoutActionCreator = require '../actions/layout_action_creator'\n\nRouterMixin = require '../mixins/router_mixin'\n{MessageFlags} = require '../constants/app_constants'\n\nmodule.exports = React.createClass\n    displayName: 'Conversation'\n\n    mixins: [RouterMixin]\n\n    propTypes:\n        message              : React.PropTypes.object\n        conversation         : React.PropTypes.object\n        selectedAccountID    : React.PropTypes.string.isRequired\n        selectedAccountLogin : React.PropTypes.string.isRequired\n        layout               : React.PropTypes.string.isRequired\n        selectedMailboxID    : React.PropTypes.string\n        mailboxes            : React.PropTypes.object.isRequired\n        settings             : React.PropTypes.object.isRequired\n        accounts             : React.PropTypes.object.isRequired\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n               not(_.isEqual(nextProps, @props))\n\n    getInitialState: ->\n        expanded: not @props.settings.get('displayConversation')\n\n    expand: ->\n        @setState expanded: true\n\n    renderMessage: (key, message, active) ->\n        Message\n            ref                 : 'message'\n            accounts            : @props.accounts\n            active              : active\n            inConversation      : @props.conversation.length > 1\n            key                 : key\n            mailboxes           : @props.mailboxes\n            message             : message\n            nextMessageID       : @props.nextMessageID\n            nextConversationID  : @props.nextConversationID\n            prevMessageID       : @props.prevMessageID\n            prevConversationID  : @props.prevConversationID\n            selectedAccountID   : @props.selectedAccountID\n            selectedAccountLogin: @props.selectedAccountLogin\n            selectedMailboxID   : @props.selectedMailboxID\n            settings            : @props.settings\n\n    render: ->\n        if not @props.message? or not @props.conversation\n            return p null, t \"app loading\"\n\n        expandUrl = @buildUrl\n            direction: 'first'\n            action: 'message'\n            parameters: @props.message.get 'id'\n            fullWidth: true\n\n        if window.router.previous?\n            try\n                selectedAccountID = @props.selectedAccountID\n            catch\n                selectedAccountID = @props.conversation.get(0).mailbox\n        else\n            selectedAccountID = @props.conversation.get(0).mailbox\n\n        if @props.layout is 'full'\n            closeUrl = @buildUrl\n                direction: 'first'\n                action: 'account.mailbox.messages'\n                parameters: selectedAccountID\n                fullWidth: true\n        else\n            closeUrl = @buildClosePanelUrl @props.layout\n\n        closeIcon = if @props.layout is 'full' then 'fa-th-list' else 'fa-times'\n\n        otherMessages = {}\n        activeMessages = {}\n\n        @props.conversation.map (message, key) =>\n            # open every unseen message of the conversation\n            if @props.message.get('id') is message.get('id') or\n                    MessageFlags.SEEN not in message.get('flags')\n\n                activeMessages[key] = message\n\n            else\n                otherMessages[key] = message\n\n        .toJS()\n\n        toggleFullscreen = ->\n            LayoutActionCreator.toggleFullscreen()\n\n        div className: 'conversation',\n\n            if @props.layout isnt 'full'\n                a\n                    onClick: toggleFullscreen\n                    className: 'expand hidden-xs hidden-sm clickable',\n                        i className: 'fa fa-arrows-h'\n            else\n                a\n                    onClick: toggleFullscreen\n                    className: 'compress clickable',\n                        i className:'fa fa-compress'\n\n            h3\n                className: 'message-title'\n                'data-message-id': @props.message.get 'id'\n                @props.message.get 'subject'\n\n            ul className: 'thread list-unstyled',\n\n                if @state.expanded\n                    for key, message of otherMessages\n                        @renderMessage key, message, false\n\n                else if @props.conversationLength > 1\n                    li className: 'conversation-length-msg', onClick: @expand,\n                        a null\n                            t 'mail conversation length',\n                                smart_count: @props.conversationLength\n\n                for key, message of activeMessages\n                    @renderMessage key, message, true\n","{div, form, input, ul, li, span, i, a} = React.DOM\n\nMessageUtils = require '../utils/message_utils'\n\n\n# file picker file format = mailparser result\nFileShape = React.PropTypes.shape\n    fileName           : React.PropTypes.string\n    length             : React.PropTypes.number\n    contentType        : React.PropTypes.string\n    generatedFileName  : React.PropTypes.string\n    contentDisposition : React.PropTypes.string\n    contentId          : React.PropTypes.string\n    transferEncoding   : React.PropTypes.string\n    # one or the other\n    rawFileObject      : React.PropTypes.object\n    url                : React.PropTypes.string\n\n###\n# File picker\n#\n# Available props\n# - editable: boolean (false)\n# - files: array\n# - form: boolean (true) embed component inside a form element\n# - valueLink: a ReactLink for files\n# - messageID: string\n###\n\nFilePicker = React.createClass\n    displayName: 'FilePicker'\n\n    propTypes:\n        editable: React.PropTypes.bool\n        display:  React.PropTypes.func\n        value:    React.PropTypes.instanceOf Immutable.Vector\n        valueLink: React.PropTypes.shape\n            value: React.PropTypes.instanceOf Immutable.Vector\n            requestChange: React.PropTypes.func\n        messageID: React.PropTypes.string\n\n\n    getDefaultProps: ->\n        editable: false\n        valueLink:\n            value: Immutable.Vector.empty()\n            requestChange: ->\n\n    getInitialState: ->\n        files: @props.value or @props.valueLink.value\n\n    componentWillReceiveProps: (props) ->\n        @setState files: props.value or props.valueLink.value\n\n    addFiles: (files) ->\n        files = @state.files.concat(files).toVector()\n\n        @props.valueLink.requestChange files\n\n    deleteFile: (file) ->\n        files = @state.files.filter (f) ->\n            f.get('generatedFileName') isnt file.generatedFileName\n        .toVector()\n\n        @props.valueLink.requestChange files\n\n    displayFile: (file) ->\n        if file.url\n            window.open file.url\n        else if file.rawFileObject\n            window.open URL.createObjectURL file.rawFileObject\n        else console.log \"broken file : \", file\n\n    render: ->\n        className = 'file-picker'\n        className += \" #{@props.className}\" if @props.className\n        div className: className,\n            ul className: 'files list-unstyled',\n                @state.files.toJS().map (file) =>\n                    FileItem\n                        key: file.generatedFileName\n                        file: file\n                        editable: @props.editable\n                        delete: => @deleteFile file\n                        display: => @displayFile file\n                        messageID: @props.messageID\n\n            if @props.editable\n                div null,\n                    # triggering \"click\" won't work if file input is hidden\n                    span className: \"file-wrapper\",\n                        input\n                            type: \"file\",\n                            multiple: \"multiple\",\n                            ref: \"file\",\n                            onChange: @handleFiles\n                    div\n                        className: \"dropzone\",\n                        ref: \"dropzone\",\n                        onDragOver: @allowDrop,\n                        onDrop: @handleFiles,\n                        onClick: @onOpenFile,\n                            i className: \"fa fa-paperclip\"\n                            span null, t \"picker drop here\"\n\n    onOpenFile: (e) ->\n        e.preventDefault()\n        jQuery(@refs.file.getDOMNode()).trigger \"click\"\n\n    allowDrop: (e) ->\n        e.preventDefault()\n\n    handleFiles: (e) ->\n        e.preventDefault()\n        files = e.target.files or e.dataTransfer.files\n        @addFiles (@_fromDOM file for file in files)\n\n    # convert from DOM Files to file picker format\n    _fromDOM: (file) ->\n        idx = @state.files.filter (f) -> f.get('fileName') is file.name\n            .count()\n        name = file.name\n        if idx > 0\n            dotpos = file.name.indexOf '.'\n            name = name.substring(0, dotpos) + '-' + (idx + 1) +\n                name.substring(dotpos)\n\n        return Immutable.Map\n            fileName:           file.name\n            length:             file.size\n            contentType:        file.type\n            rawFileObject:      file\n            generatedFileName:  name\n            contentDisposition: null\n            contentId:          null\n            transferEncoding:   null\n            content:            null\n            url:                null\n\n\n            # reader = new FileReader()\n            # reader.readAsDataURL(file)\n            # reader.onloadend = (e) =>\n            #     txt = e.target.result\n            #     file.content = txt\n            #     currentFiles.push file\n            #     parsed++\n            #     if parsed is files.length\n            #         @props.valueLink.requestChange currentFiles\n            #         @setState {files: currentFiles }\n\n\n\n\nmodule.exports = FilePicker\n\n###\n# Display a file item\n#\n# Props:\n#  - file\n#  - editable: boolean (false) allow to delete file\n#  - (display): function\n#  - (delete): function\n#  - (messageID): string\n###\nFileItem = React.createClass\n    displayName: 'FileItem'\n\n    propTypes:\n        file: React.PropTypes.shape({\n            fileName: React.PropTypes.string\n            contentType: React.PropTypes.string\n            length: React.PropTypes.number\n        }).isRequired\n        editable:  React.PropTypes.bool\n        display:   React.PropTypes.func\n        delete:    React.PropTypes.func\n        messageID: React.PropTypes.string\n\n    getDefaultProps: ->\n        return {\n            editable: false\n        }\n\n    getInitialState: ->\n        return {}\n\n    render: ->\n        file = @props.file\n        if not(file.url?) and not(file.rawFileObject)\n            window.cozyMails.log(new Error \"Wrong file #{JSON.stringify(file)}\")\n            file.url = \"message/#{@props.messageID}/attachments/#{file.generatedFileName}\"\n        type = MessageUtils.getAttachmentType file.contentType\n        icons =\n            'archive'      : 'fa-file-archive-o'\n            'audio'        : 'fa-file-audio-o'\n            'code'         : 'fa-file-code-o'\n            'image'        : 'fa-file-image-o'\n            'pdf'          : 'fa-file-pdf-o'\n            'word'         : 'fa-file-word-o'\n            'presentation' : 'fa-file-powerpoint-o'\n            'spreadsheet'  : 'fa-file-excel-o'\n            'text'         : 'fa-file-text-o'\n            'video'        : 'fa-file-video-o'\n            'word'         : 'fa-file-word-o'\n        iconClass = icons[type] or 'fa-file-o'\n\n        li className: \"file-item\", key: @props.key,\n            i className: \"mime #{type} fa #{iconClass}\"\n            if @props.editable\n                i className: \"fa fa-times delete\", onClick: @doDelete\n            a\n                className: 'file-name',\n                target: '_blank',\n                onClick: @doDisplay,\n                href: file.url\n                'data-file-url': file.url\n                'data-file-name': file.generatedFileName\n                'data-file-type': file.contentType\n                file.generatedFileName\n\n            div className: 'file-detail',\n                span null,\n                    \"#{(file.length / 1000).toFixed(2)}Ko\"\n                span className: 'file-actions',\n                    a\n                        className: \"fa fa-download\"\n                        href: \"#{file.url}?download=1\"\n\n    doDisplay: (e) ->\n        e.preventDefault()\n        e.stopPropagation()\n        @props.display()\n\n    doDelete: (e) ->\n        e.preventDefault()\n        e.stopPropagation()\n        @props.delete()\n","{div, ul, li, span, a, button} = React.DOM\n\nRouterMixin = require '../mixins/router_mixin'\n\nmodule.exports = React.createClass\n    displayName: 'MailboxList'\n\n    mixins: [RouterMixin]\n\n    onChange: (boxid) ->\n        @props.onChange? boxid\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    render: ->\n        selectedID = @props.selectedMailboxID\n        if @props.mailboxes? and Object.keys(@props.mailboxes).length > 0\n            if selectedID?\n                selected = @props.mailboxes[selectedID]\n            div className: 'btn-group btn-group-sm dropdown pull-left',\n                button\n                    className: 'btn btn-default dropdown-toggle',\n                    type: 'button',\n                    'data-toggle': 'dropdown',\n                    selected?.label or t 'mailbox pick one'\n                        span className: 'caret', ''\n                ul className: 'dropdown-menu', role: 'menu',\n                    if @props.allowUndefined and selected?\n                        li\n                            role: 'presentation',\n                            key: null,\n                            onClick: @onChange.bind(this, null),\n                                a role: 'menuitem', t 'mailbox pick null'\n\n                    for key, mailbox of @props.mailboxes when key isnt @props.selectedMailboxID\n                        if key isnt selectedID\n                            @getMailboxRender mailbox, key\n        else\n            # no account selected\n            div null, \"\"\n\n\n    getMailboxRender: (mailbox, key) ->\n        url = @props.getUrl?(mailbox)\n        onChange = @onChange.bind(this, key)\n\n        # Mark nested levels with \"--\" because plain space\n        # just doesn't work for some reason\n        pusher = \"\"\n        pusher += \"--\" for i in [1..mailbox.depth] by 1\n\n        li role: 'presentation', key: key, onClick: onChange,\n            if url?\n                a href: url, role: 'menuitem', \"#{pusher}#{mailbox.label}\"\n            else\n                a role: 'menuitem', \"#{pusher}#{mailbox.label}\"\n\n","{div, label, textarea, span, ul, li, a, img, i} = React.DOM\n\nMessageUtils    = require '../utils/message_utils'\nModal           = require './modal'\nContactStore    = require '../stores/contact_store'\nContactActionCreator = require '../actions/contact_action_creator'\n\nclasser = React.addons.classSet\n\n# Public: input to enter multiple mails\n# @TODO : use something tag-it like\n\nmodule.exports = MailsInput = React.createClass\n    displayName: 'MailsInput'\n\n    getStateFromStores: ->\n        contacts: ContactStore.getResults()\n\n    componentWillMount: ->\n        @setState contacts: null, open: false\n\n    getInitialState: ->\n        state = @getStateFromStores()\n        state.known    = @props.valueLink.value\n        state.unknown  = ''\n        state.selected = 0\n        state.open     = false\n        return state\n\n    componentWillReceiveProps: (nextProps) ->\n        @setState known: nextProps.valueLink.value\n\n    # Code from the StoreWatch Mixin. We don't use the mixin\n    # because we store other things into the state\n    componentDidMount: ->\n        ContactStore.on 'change', @_setStateFromStores\n        @fixHeight()\n\n    componentWillUnmount: ->\n        ContactStore.removeListener 'change', @_setStateFromStores\n\n    _setStateFromStores: -> @setState @getStateFromStores()\n\n    componentDidUpdate: ->\n        @fixHeight()\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    render: ->\n\n        renderTag = (address, idx) =>\n            remove = =>\n                known = @state.known.filter (a) ->\n                    return a.address isnt address.address\n                @props.valueLink.requestChange known\n            if address.name? and address.name.trim() isnt ''\n                display = address.name\n            else\n                display = address.address\n            span\n                className: 'address-tag'\n                key: \"#{@props.id}-#{address.address}-#{idx}\"\n                title: address.address\n                display\n                    a\n                        className: 'clickable'\n                        onClick: remove,\n                            i className: 'fa fa-times'\n\n        knownContacts = @state.known.map renderTag\n\n        onChange = (event) =>\n            value = event.target.value.split ','\n            if value.length is 2\n                @state.known.push(MessageUtils.parseAddress value[0])\n                @props.valueLink.requestChange @state.known\n                @setState unknown: value[1].trim()\n            else\n                @setState unknown: event.target.value\n\n        className  = (@props.className or '') + \" form-group #{@props.id}\"\n        classLabel = 'compose-label control-label'\n        listClass  = classer\n            'contact-form': true\n            open: @state.open and @state.contacts?.length > 0\n        current    = 0\n\n        div className: className,\n            label htmlFor: @props.id, className: classLabel,\n                @props.label\n            knownContacts\n            div className: 'contact-group dropdown ' + listClass,\n                textarea\n                    id: @props.id\n                    name: @props.id\n                    className: 'form-control compose-input'\n                    onKeyDown: @onKeyDown\n                    onBlur: @onBlur\n                    ref: 'contactInput'\n                    rows: 1\n                    value: @state.unknown\n                    onChange: onChange\n                    placeholder: @props.placeholder\n                    'autoComplete': 'off'\n                    'spellCheck': 'off'\n                div\n                    className: 'btn btn-cozy btn-contact',\n                    onClick: @onQuery,\n                        span className: 'fa fa-search'\n\n                if @state.contacts?\n                    ul className: \"dropdown-menu contact-list\",\n                        @state.contacts.map (contact, key) =>\n                            selected = current is @state.selected\n                            current++\n                            @renderContact contact, selected\n                        .toJS()\n\n    renderContact: (contact, selected) ->\n        selectContact = =>\n            @onContact contact\n        avatar = contact.get 'avatar'\n\n        classes = classer\n            selected: selected\n\n        li className: classes, onClick: selectContact,\n            a null,\n                if avatar?\n                    img\n                        className: 'avatar'\n                        src: avatar\n                else\n                    i className: 'avatar fa fa-user'\n                \"#{contact.get 'fn'} <#{contact.get 'address'}>\"\n\n    onQuery: (char) ->\n        query = @refs.contactInput.getDOMNode().value.split(',').pop().replace(/^\\s*/, '')\n        if char? and typeof char is 'string'\n            query += char\n            force = false\n        else if char? and typeof char is 'object'\n            # always display contact list when user click on contact button\n            force = true\n        if query.length > 2 or ( force and not @state.open )\n            ContactActionCreator.searchContactLocal query\n            @setState open: true\n            return true\n        else\n            if @state.open\n                @setState contacts: null, open: false\n            return false\n\n    onKeyDown: (evt) ->\n        count    = @state.contacts?.count()\n        selected = @state.selected\n        switch evt.key\n            when \"Enter\"\n                if @state.contacts?.count() > 0\n                    contact = @state.contacts.slice(selected).first()\n                    @onContact contact\n                else\n                    @onQuery()\n                evt.preventDefault()\n                return false\n            when \"ArrowUp\"\n                @setState selected: if selected is 0 then count - 1 else selected - 1\n            when \"ArrowDown\"\n                @setState selected: if selected is (count - 1) then 0 else selected + 1\n            when \"Backspace\"\n                node = @refs.contactInput.getDOMNode()\n                node.value = node.value.trim()\n                if node.value.length < 2\n                    @setState open: false\n            when \"Escape\"\n                @setState contacts: null, open: false\n            else\n                if (evt.key? or evt.key.toString().length is 1)\n                    @onQuery(String.fromCharCode(evt.which))\n                    return true\n\n    onBlur: ->\n        # We must use a timeout, otherwise, when user click inside contact list,\n        # blur is triggered first and the click event lost. Dirty hack\n        setTimeout =>\n            # if user cancel compose, component may be unmounted when the timeout is fired\n            if @isMounted()\n                state = {}\n                # close suggestion list\n                state.open = false\n                # Add current value to list of addresses\n                value = @refs.contactInput.getDOMNode().value\n                if value.trim() isnt ''\n                    @state.known.push(MessageUtils.parseAddress value)\n                    state.known   = @state.known\n                    state.unknown = ''\n                    @props.valueLink.requestChange state.known\n                @setState state\n        , 100\n\n    onContact: (contact) ->\n        address =\n            name    : contact.get 'fn'\n            address : contact.get 'address'\n        @state.known.push address\n        @props.valueLink.requestChange @state.known\n        @setState unknown: '', contacts: null, open: false\n\n        # try to put back the focus at the end of the field\n        setTimeout =>\n            query = @refs.contactInput.getDOMNode().focus()\n        , 200\n\n    fixHeight: ->\n        input = @refs.contactInput.getDOMNode()\n        if input.scrollHeight > input.clientHeight\n            input.style.height = input.scrollHeight + \"px\"\n","{div, ul, li, a, span, i} = React.DOM\n\nclasser = React.addons.classSet\n\nRouterMixin          = require '../mixins/router_mixin'\nLayoutActionCreator  = require '../actions/layout_action_creator'\nConversationActionCreator = require '../actions/conversation_action_creator'\nMessageActionCreator      = require '../actions/message_action_creator'\nAccountStore         = require '../stores/account_store'\nModal                = require './modal'\nThinProgress         = require './thin_progress'\n\n{Dispositions, SpecialBoxIcons} = require '../constants/app_constants'\n\nmodule.exports = Menu = React.createClass\n    displayName: 'Menu'\n\n    mixins: [RouterMixin]\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n               not(_.isEqual(nextProps, @props))\n\n    getInitialState: ->\n        displayActiveAccount: true\n        modalErrors: null\n        onlyFavorites: true\n\n    componentWillReceiveProps: (props) ->\n        if not Immutable.is(props.selectedAccount, @props.selectedAccount)\n            @setState displayActiveAccount: true\n\n\n    displayErrors: (refreshee) ->\n        @setState modalErrors: refreshee.get 'errors'\n\n    hideErrors: ->\n        @setState modalErrors: null\n\n    render: ->\n\n        if @props.accounts.length\n            selectedAccountUrl = @buildUrl\n                direction: 'first'\n                action: 'account.mailbox.messages'\n                parameters: @props.selectedAccount?.get 'id'\n                fullWidth: true\n        else\n            selectedAccountUrl = @buildUrl\n                direction: 'first'\n                action: 'account.new'\n                fullWidth: true\n\n        # the button toggles the \"compose\" screen\n        if @props.layout.firstPanel.action is 'compose' or\n           @props.layout.secondPanel?.action is 'compose'\n            composeClass = 'active'\n            composeUrl = selectedAccountUrl\n        else\n            composeClass = ''\n            composeUrl = @buildUrl\n                direction: 'first'\n                action: 'compose'\n                parameters: null\n                fullWidth: true\n\n        # the button toggle the \"new account\" screen\n        if @props.layout.firstPanel.action is 'account.new'\n            newMailboxClass = 'active'\n            newMailboxUrl = selectedAccountUrl\n        else\n            newMailboxClass = ''\n            newMailboxUrl = @buildUrl\n                direction: 'first'\n                action: 'account.new'\n                fullWidth: true\n\n        # the button toggles the \"settings\" screen\n        if @props.layout.firstPanel.action is 'settings' or\n           @props.layout.secondPanel?.action is 'settings'\n            settingsClass = 'active'\n            settingsUrl = selectedAccountUrl\n        else\n            settingsClass = ''\n            settingsUrl = @buildUrl\n                direction: 'first'\n                action: 'settings'\n                fullWidth: true\n\n        if @state.modalErrors\n            title       = t 'modal please contribute'\n            subtitle    = t 'modal please report'\n            modalErrors = @state.modalErrors\n            closeModal  = @hideErrors\n            closeLabel  = t 'app alert close'\n            content = React.DOM.pre\n                style: \"max-height\": \"300px\",\n                \"word-wrap\": \"normal\",\n                    @state.modalErrors.join \"\\n\\n\"\n            modal = Modal {title, subtitle, content, closeModal, closeLabel}\n        else\n            modal = null\n        classes = classer\n            'hidden-xs hidden-sm': not @props.isResponsiveMenuShown\n            'col-xs-4': true\n            'col-md-1': @props.disposition.type isnt Dispositions.THREE\n            'col-md-3': @props.disposition.type is Dispositions.THREE\n            'three': @props.disposition.type is Dispositions.THREE\n\n        div id: 'menu', className: classes,\n\n            modal\n\n            unless @props.accounts.length is 0\n                a\n                    href: composeUrl,\n                    onClick: @_hideMenu\n                    className: 'menu-item compose-action ' + composeClass,\n                        i className: 'fa fa-edit'\n                        span className: 'item-label', t 'menu compose'\n\n            if @props.accounts.length isnt 0\n                ul id: 'account-list', className: 'list-unstyled',\n                    @props.accounts.map (account, key) =>\n                        @getAccountRender account, key\n                    .toJS()\n\n            a\n                href: newMailboxUrl,\n                onClick: @_hideMenu\n                className: 'menu-item new-account-action ' + newMailboxClass,\n                    i className: 'fa fa-inbox'\n                    span className: 'item-label', t 'menu account new'\n\n            # #201: remove settings panel\n            #a\n            #    href: settingsUrl,\n            #    onClick: @_hideMenu\n            #    className: 'menu-item settings-action ' + settingsClass,\n            #        i className: 'fa fa-cog'\n            #        span className: 'item-label', t 'menu settings'\n\n\n    # renders a single account and its submenu\n    getAccountRender: (account, key) ->\n\n        isSelected = (not @props.selectedAccount? and key is 0) \\\n                     or @props.selectedAccount?.get('id') is account.get('id')\n\n        accountID = account.get 'id'\n        defaultMailbox = AccountStore.getDefaultMailbox accountID\n        refreshes = @props.refreshes\n\n        if defaultMailbox?\n            url = @buildUrl\n                direction: 'first'\n                action: 'account.mailbox.messages'\n                parameters: [accountID, defaultMailbox?.get 'id']\n                fullWidth: true # /!\\ Hide second panel when switching account\n        else\n            # Go to account settings to add mailboxes\n            url = @buildUrl\n                direction: 'first'\n                action: 'account.config'\n                parameters: [accountID, 'account']\n                fullWidth: true # /!\\ Hide second panel when switching account\n\n        toggleActive = =>\n            if not @state.displayActiveAccount\n                @setState displayActiveAccount: true\n            @_hideMenu()\n\n        toggleDisplay = =>\n            if isSelected\n                @setState displayActiveAccount: not @state.displayActiveAccount\n            else\n                @setState displayActiveAccount: true\n\n        toggleFavorites = =>\n            @setState onlyFavorites: not @state.onlyFavorites\n\n\n        accountClasses = classer\n            active: (isSelected and @state.displayActiveAccount)\n\n        if @state.onlyFavorites\n            mailboxes = @props.favorites\n            icon = 'fa-toggle-down'\n            toggleFavoritesLabel = t 'menu favorites off'\n        else\n            mailboxes = @props.mailboxes\n            icon = 'fa-toggle-up'\n            toggleFavoritesLabel = t 'menu favorites on'\n\n        li className: accountClasses, key: key,\n            a\n                href: url,\n                className: 'menu-item account ' + accountClasses,\n                onClick: toggleActive,\n                onDoubleClick: toggleDisplay,\n                'data-toggle': 'tooltip',\n                'data-delay': '10000',\n                'data-placement' : 'right',\n                    i className: 'fa fa-inbox'\n                    span\n                        'data-account-id': key,\n                        className: 'item-label',\n                        account.get 'label'\n\n                if progress = refreshes.get(accountID)\n                    if progress.get('errors').length\n                        span className: 'refresh-error',\n                            i className: 'fa warning', onClick: @displayErrors.bind null, progress\n                    if progress.get('firstImport')\n                        ThinProgress done: progress.get('done'), total: progress.get('total')\n\n            if isSelected\n                ul className: 'list-unstyled submenu mailbox-list',\n                    mailboxes?.map (mailbox, key) =>\n                        selectedMailboxID = @props.selectedMailboxID\n                        MenuMailboxItem { account, mailbox, key, selectedMailboxID, refreshes, displayErrors: @displayErrors, hideMenu: @_hideMenu}\n                    .toJS()\n                    li null,\n                        a\n                            className: 'menu-item',\n                            tabIndex: 0,\n                            onClick: toggleFavorites,\n                            key: 'toggle',\n                                i className: 'fa ' + icon\n                                span\n                                    className: 'item-label',\n                                    toggleFavoritesLabel\n\n    _hideMenu: ->\n        if @props.isResponsiveMenuShown\n            @props.toggleMenu()\n\n    _initTooltips: ->\n        #jQuery('#account-list [data-toggle=\"tooltip\"]').tooltip()\n\n    componentDidMount: ->\n        @_initTooltips()\n\n    componentDidUpdate: ->\n        @_initTooltips()\n\n\nMenuMailboxItem = React.createClass\n    displayName: 'MenuMailboxItem'\n\n    mixins: [RouterMixin]\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n               not(_.isEqual(nextProps, @props))\n\n    getInitialState: ->\n        return target: false\n\n    render: ->\n        mailboxID = @props.mailbox.get 'id'\n        mailboxUrl = @buildUrl\n            direction: 'first'\n            action: 'account.mailbox.messages'\n            parameters: [@props.account.get('id'), mailboxID]\n\n        nbTotal  = @props.mailbox.get('nbTotal') or 0\n        nbUnread = @props.mailbox.get('nbUnread') or 0\n        nbRecent = @props.mailbox.get('nbRecent') or 0\n        title    = t \"menu mailbox total\", nbTotal\n        if nbUnread > 0\n            title += t \"menu mailbox unread\", nbUnread\n        if nbRecent > 0\n            title += t \"menu mailbox new\", nbRecent\n\n        classesParent = classer\n            active: mailboxID is @props.selectedMailboxID\n            target: @state.target\n        classesChild = classer\n            'menu-item': true\n            target: @state.target\n            news: nbRecent > 0\n\n        mailboxIcon = 'fa-folder'\n        for attrib, icon of SpecialBoxIcons\n            if @props.account.get(attrib) is mailboxID\n                mailboxIcon = icon\n\n        progress = @props.refreshes.get mailboxID\n        displayError = @props.displayErrors.bind null, progress\n\n        pusher = \"\"\n        pusher += \"   \" for j in [1..@props.mailbox.get('depth')] by 1\n\n        li className: classesParent,\n            a\n                href: mailboxUrl,\n                onClick: @props.hideMenu,\n                className: classesChild,\n                'data-mailbox-id': mailboxID,\n                onDragEnter: @onDragEnter,\n                onDragLeave: @onDragLeave,\n                onDragOver: @onDragOver,\n                onDrop: @onDrop,\n                title: title,\n                'data-toggle': 'tooltip',\n                'data-placement' : 'right',\n                key: @props.key,\n                    # Something must be rethought about the icon\n                    i className: 'fa ' + mailboxIcon\n                    if not progress and nbUnread and nbUnread > 0\n                        span className: 'badge', nbUnread\n                    span\n                        className: 'item-label',\n                        \"#{pusher}#{@props.mailbox.get 'label'}\"\n\n                if progress and progress.get('firstImport')\n                    ThinProgress done: progress.get('done'), total: progress.get('total')\n\n                if progress?.get('errors').length\n                    span className: 'refresh-error', onClick: displayError,\n                        i className: 'fa fa-warning', null\n\n    onDragEnter: (e) ->\n        if not @state.target\n            @setState target: true\n\n    onDragLeave: (e) ->\n        if @state.target\n            @setState target: false\n\n    onDragOver: (e) ->\n        e.preventDefault()\n\n    onDrop: (event) ->\n        {messageID, mailboxID, conversation} = JSON.parse(event.dataTransfer.getData 'text')\n        newID = event.currentTarget.dataset.mailboxId\n        @setState target: false\n        if conversation\n            ConversationActionCreator.move messageID, mailboxID, newID, (error) ->\n                if error?\n                    LayoutActionCreator.alertError \"#{t(\"conversation move ko\")} #{error}\"\n                else\n                    LayoutActionCreator.notify t(\"conversation move ok\"),\n                        autoclose: true\n        else\n            MessageActionCreator.move messageID, mailboxID, newID, (error) ->\n                if error?\n                    LayoutActionCreator.alertError \"#{t(\"message action move ko\")} #{error}\"\n                else\n                    LayoutActionCreator.notify t(\"message action move ok\"),\n                        autoclose: true\n","{div, ul, li, a, span, i, p, button, input, img} = React.DOM\nclasser = React.addons.classSet\n\nRouterMixin    = require '../mixins/router_mixin'\nDomUtils       = require '../utils/dom_utils'\nMessageUtils   = require '../utils/message_utils'\nSocketUtils    = require '../utils/socketio_utils'\n{MessageFlags, MessageFilter, FlagsConstants} = require '../constants/app_constants'\n\nAccountActionCreator      = require '../actions/account_action_creator'\nContactActionCreator      = require '../actions/contact_action_creator'\nConversationActionCreator = require '../actions/conversation_action_creator'\nLayoutActionCreator       = require '../actions/layout_action_creator'\nMessageActionCreator      = require '../actions/message_action_creator'\n\nMessageStore   = require '../stores/message_store'\n\nMailboxList    = require './mailbox-list'\nParticipants   = require './participant'\nToolboxActions = require './toolbox_actions'\nToolboxMove    = require './toolbox_move'\n\nalertError   = LayoutActionCreator.alertError\n\nMessageList = React.createClass\n    displayName: 'MessageList'\n\n    mixins: [RouterMixin]\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        should = not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n        return should\n\n    getInitialState: ->\n        edited: false\n        filterFlag: false\n        filterUnsead: false\n        filterAttach: false\n        selected: {}\n        allSelected: false\n\n    componentWillReceiveProps: (props) ->\n        if props.mailboxID isnt @props.mailboxID\n            @setState allSelected: false, edited: false, selected: {}\n        else\n            selected = @state.selected\n            Object.keys(selected).forEach (id) ->\n                if not props.messages.get(id)\n                    delete selected[id]\n            @setState selected: selected\n            if Object.keys(selected).length is 0\n                @setState allSelected: false, edited: false\n\n    render: ->\n        compact = @props.settings.get('listStyle') is 'compact'\n        filterParams =\n            accountID: @props.accountID\n            mailboxID: @props.mailboxID\n            query:     @props.query\n        nextPage = =>\n            LayoutActionCreator.showMessageList parameters: @props.query\n\n        getMailboxUrl = (mailbox) =>\n            @buildUrl\n                direction: 'first'\n                action: 'account.mailbox.messages'\n                parameters: [@props.accountID, mailbox.id]\n\n        configMailboxUrl = @buildUrl\n            direction: 'first'\n            action: 'account.config'\n            parameters: [@props.accountID, 'account']\n            fullWidth: true\n\n        advanced   = @props.settings.get('advanced')\n        nbSelected = if Object.keys(@state.selected).length > 0 then null else true\n\n        showList = =>\n            params = _.clone(MessageStore.getParams())\n            params.accountID = @props.accountID\n            params.mailboxID = @props.mailboxID\n            LayoutActionCreator.showMessageList parameters: params\n\n        toggleFilterFlag = =>\n            filter = if @state.filterFlag then MessageFilter.ALL else MessageFilter.FLAGGED\n            LayoutActionCreator.filterMessages filter\n            showList()\n            @setState\n                filterFlag:   not @state.filterFlag\n                filterUnseen: false\n                filterAttach: false\n\n        toggleFilterUnseen = =>\n            filter = if @state.filterUnseen then MessageFilter.ALL else MessageFilter.UNSEEN\n            LayoutActionCreator.filterMessages filter\n            showList()\n            @setState\n                filterUnseen: not @state.filterUnseen\n                filterFlag:   false\n                filterAttach: false\n\n        toggleFilterAttach = =>\n            filter = if @state.filterAttach then MessageFilter.ALL else MessageFilter.ATTACH\n            LayoutActionCreator.filterMessages filter\n            showList()\n            @setState\n                filterAttach: not @state.filterAttach\n                filterFlag:   false\n                filterUnseen: false\n\n        classList = classer\n            compact: compact\n            edited: @state.edited\n        classCompact = classer\n            active: compact\n        classEdited = classer\n            active: @state.edited\n\n        btnClasses    = 'btn btn-default '\n        btnGrpClasses = 'btn-group btn-group-sm message-list-option '\n\n        div\n            className: 'message-list ' + classList,\n            ref: 'list',\n            'data-mailbox-id': @props.mailboxID,\n            div className: 'message-list-actions',\n                #if advanced and not @state.edited\n                #    MessagesQuickFilter {}\n                div className: 'btn-toolbar', role: 'toolbar',\n                    div className: 'btn-group',\n                        # Toggle edit\n                        if advanced\n                            div className: btnGrpClasses,\n                                button\n                                    type: \"button\"\n                                    className: btnClasses + classEdited\n                                    onClick: @toggleEdited,\n                                        i className: 'fa fa-square-o'\n                        # mailbox-list\n                        if advanced and not @state.edited\n                            div className: btnGrpClasses,\n                                MailboxList\n                                    getUrl: getMailboxUrl\n                                    mailboxes: @props.mailboxes\n                                    selectedMailboxID: @props.mailboxID\n\n                        # Responsive menu button\n                        if not advanced and not @state.edited\n                            div className: btnGrpClasses + ' toggle-menu-button',\n                                button\n                                    onClick: @props.toggleMenu\n                                    title: t 'menu toggle'\n                                    className: btnClasses,\n                                    span className: 'fa fa-inbox'\n\n                        # filters\n                        if not advanced and not @state.edited\n                            div className: btnGrpClasses,\n                                button\n                                    onClick: toggleFilterUnseen\n                                    title: t 'list filter unseen title'\n                                    className: btnClasses + if @state.filterUnseen then ' shown',\n                                    span className: 'fa fa-envelope'\n                        if not advanced and not @state.edited\n                            div className: btnGrpClasses,\n                                button\n                                    onClick: toggleFilterFlag\n                                    title: t 'list filter flagged title'\n                                    className: btnClasses + if @state.filterFlag then ' shown',\n                                    span className: 'fa fa-star'\n                        if not advanced and not @state.edited\n                            div className: btnGrpClasses,\n                                button\n                                    onClick: toggleFilterAttach\n                                    title: t 'list filter attach title'\n                                    className: btnClasses + if @state.filterAttach then ' shown',\n                                    span className: 'fa fa-paperclip'\n                        if advanced and not @state.edited\n                            div className: btnGrpClasses,\n                                MessagesFilter filterParams\n                        ## sort\n                        if advanced and not @state.edited\n                            div className: btnGrpClasses,\n                                MessagesSort filterParams\n\n                        # refresh\n                        if not @state.edited\n                            div className: btnGrpClasses,\n                                if @props.refreshes.length is 0\n                                    button\n                                        className: btnClasses,\n                                        type: 'button',\n                                        disabled: null,\n                                        onClick: @refresh,\n                                            span className: 'fa fa-refresh'\n                                else\n                                    img\n                                        src: 'images/spinner.svg'\n                                        alt: 'spinner'\n                                        className: 'spin'\n                        # config\n                        if not @state.edited\n                            div className: btnGrpClasses,\n                                a\n                                    href: configMailboxUrl\n                                    className: btnClasses + 'mailbox-config',\n                                    i className: 'fa fa-cog'\n                        if @state.edited\n                            div className: btnGrpClasses,\n                                button\n                                    type: \"button\"\n                                    className: btnClasses + classEdited\n                                    onClick: @toggleAll,\n                                        i className: 'fa fa-square-o'\n                        if @state.edited\n                            div className: btnGrpClasses,\n                                button\n                                    className: btnClasses + 'trash',\n                                    type: 'button',\n                                    disabled: nbSelected\n                                    onClick: @onDelete,\n                                        span\n                                            className: 'fa fa-trash-o'\n                        if @state.edited\n                            ToolboxMove\n                                mailboxes: @props.mailboxes\n                                onMove: @onMove\n                                direction: 'left'\n                        if @state.edited\n                            ToolboxActions\n                                mailboxes: @props.mailboxes\n                                onMark: @onMark\n                                onConversation: @onConversation\n                                onHeaders: @onHeaders\n                                direction: 'left'\n\n                        if @props.isTrash and not @state.edited\n                            div className: btnGrpClasses,\n                                button\n                                    className: btnClasses,\n                                    type: 'button',\n                                    disabled: null,\n                                    onClick: @expungeMailbox,\n                                        span\n                                            className: 'fa fa-recycle'\n\n            if @props.messages.count() is 0\n                if @props.fetching\n                    p null, t 'list fetching'\n                else\n                    p null, @props.emptyListMessage\n            else\n                div null,\n                    #p null, @props.counterMessage\n                    MessageListBody\n                        messages: @props.messages\n                        settings: @props.settings\n                        mailboxID: @props.mailboxID\n                        messageID: @props.messageID\n                        conversationID: @props.conversationID\n                        conversationLengths: @props.conversationLengths\n                        login: @props.login\n                        edited: @state.edited\n                        selected: @state.selected\n                        allSelected: @state.allSelected\n                        onSelect: (id, val) =>\n                            selected = _.clone @state.selected\n                            if val\n                                selected[id] = val\n                            else\n                                delete selected[id]\n                            if Object.keys(selected).length > 0\n                                @setState edited: true, selected: selected\n                            else\n                                @setState allSelected: false, edited: false, selected: {}\n\n                    # If message list is filtered, we can't only rely on message count\n                    # So we assume that if query.pageAfter is null, there's no more\n                    # messages to display\n                    if @props.messages.count() < parseInt(@props.counterMessage, 10) and\n                       @props.query.pageAfter?\n                        p className: 'text-center list-footer',\n                            if @props.fetching\n                                i className: \"fa fa-refresh fa-spin\"\n                            else\n                                a\n                                    className: 'more-messages'\n                                    onClick: nextPage,\n                                    ref: 'nextPage',\n                                    t 'list next page'\n                    else\n                        p ref: 'listEnd', t 'list end'\n\n\n    refresh: (event) ->\n        event.preventDefault()\n        LayoutActionCreator.refreshMessages()\n\n    toggleEdited: ->\n        if @state.edited\n            @setState allSelected: false, edited: false, selected: {}\n        else\n            @setState edited: true\n\n    toggleAll: ->\n        if @state.allSelected\n            @setState allSelected: false, edited: false, selected: {}\n        else\n            selected = {}\n            @props.messages.map (message, key) ->\n                selected[key] = true\n            .toJS()\n            @setState allSelected: true, edited: true, selected: selected\n\n    onDelete: ->\n        selected = Object.keys @state.selected\n        settings = @props.settings\n        if selected.length is 0\n            alertError t 'list mass no message'\n        else\n            MessageUtils.delete selected, settings.get 'displayConversation',\n                settings.get 'messageConfirmDelete'\n\n    onMove: (args) ->\n        selected = Object.keys @state.selected\n        if selected.length is 0\n            alertError t 'list mass no message'\n        else\n            newbox = args.target.dataset.value\n            if args.target.dataset.conversation? or\n               @props.settings.get 'displayConversation'\n                selected.forEach (id) =>\n                    message = @props.messages.get id\n                    ConversationActionCreator.move message, @props.mailboxID, newbox, (error) ->\n                        if error?\n                            alertError \"#{t(\"conversation move ko\")} #{error}\"\n                        else\n                            window.cozyMails.messageNavigate()\n            else\n                selected.forEach (id) =>\n                    message = @props.messages.get id\n                    MessageActionCreator.move message, @props.mailboxID, newbox, (error) ->\n                        if error?\n                            alertError \"#{t(\"message action move ko\")} #{error}\"\n                        else\n                            window.cozyMails.messageNavigate()\n\n    onMark: (args) ->\n        selected = Object.keys @state.selected\n        if selected.length is 0\n            alertError t 'list mass no message'\n        else\n            flag = args.target.dataset.value\n            selected.forEach (id) =>\n                message = @props.messages.get id\n                flags = message.get('flags').slice()\n                switch flag\n                    when FlagsConstants.SEEN\n                        flags.push MessageFlags.SEEN\n                    when FlagsConstants.UNSEEN\n                        flags = flags.filter (e) -> return e isnt FlagsConstants.SEEN\n                    when FlagsConstants.FLAGGED\n                        flags.push MessageFlags.FLAGGED\n                    when FlagsConstants.NOFLAG\n                        flags = flags.filter (e) -> return e isnt FlagsConstants.FLAGGED\n                MessageActionCreator.updateFlag message, flags, (error) ->\n                    if error?\n                        alertError \"#{t(\"message action mark ko\")} #{error}\"\n\n    onConversation: (args) ->\n        selected = Object.keys @state.selected\n        if selected.length is 0\n            alertError t 'list mass no message'\n        else\n            selected.forEach (id) =>\n                message = @props.messages.get id\n                conversationID = message.get 'conversationID'\n                action = args.target.dataset.action\n                switch action\n                    when 'delete'\n                        ConversationActionCreator.delete conversationID, (error) ->\n                            if error?\n                                alertError \"#{t(\"conversation delete ko\")} #{error}\"\n                    when 'seen'\n                        ConversationActionCreator.seen conversationID, (error) ->\n                            if error?\n                                alertError \"#{t(\"conversation seen ko \")} #{error}\"\n                    when 'unseen'\n                        ConversationActionCreator.unseen conversationID, (error) ->\n                            if error?\n                                alertError \"#{t(\"conversation unseen ko\")} #{error}\"\n\n    expungeMailbox: (e) ->\n        e.preventDefault()\n\n        if window.confirm(t 'account confirm delbox')\n            mailbox =\n                mailboxID: @props.mailboxID\n                accountID: @props.accountID\n\n            AccountActionCreator.mailboxExpunge mailbox, (error) =>\n\n                if error?\n                    # if user hasn't switched to another box, refresh display\n                    if @props.accountID is mailbox.accountID and\n                       @props.mailboxID is mailbox.mailboxID\n                        params = _.clone(MessageStore.getParams())\n                        params.accountID = @props.accountID\n                        params.mailboxID = @props.mailboxID\n                        LayoutActionCreator.showMessageList parameters: params\n\n                    LayoutActionCreator.alertError \"#{t(\"mailbox expunge ko\")} #{error}\"\n                else\n                    LayoutActionCreator.notify t(\"mailbox expunge ok\"),\n                        autoclose: true\n\n    _loadNext: ->\n        if @refs.nextPage? and DomUtils.isVisible(@refs.nextPage.getDOMNode())\n            LayoutActionCreator.showMessageList parameters: @props.query\n\n    _handleRealtimeGrowth: ->\n        nbMessages = parseInt @props.counterMessage, 10\n        if nbMessages < @props.messages.count() and @refs.listEnd? and\n        not DomUtils.isVisible(@refs.listEnd.getDOMNode())\n            lastdate = @props.messages.last().get('date')\n            SocketUtils.changeRealtimeScope @props.mailboxID, lastdate\n\n    _initScroll: ->\n        if not @refs.nextPage?\n            return\n\n        # listen to scroll events\n        scrollable = @refs.list.getDOMNode().parentNode\n        setTimeout =>\n            scrollable.removeEventListener 'scroll', @_loadNext\n            scrollable.addEventListener 'scroll', @_loadNext\n            @_loadNext()\n            # a lot of event can make the \"more messages\" label visible,\n            # so we check every few seconds\n            if not @_checkNextInterval?\n                @_checkNextInterval = window.setInterval @_loadNext, 10000\n        , 0\n\n    componentDidMount: ->\n        @_initScroll()\n\n    componentDidUpdate: ->\n        @_initScroll()\n\n        @_handleRealtimeGrowth()\n\n    componentWillUnmount: ->\n        scrollable = @refs.list.getDOMNode().parentNode\n        scrollable.removeEventListener 'scroll', @_loadNext\n        if @_checkNextInterval?\n            window.clearInterval @_checkNextInterval\n\nmodule.exports = MessageList\n\nMessageListBody = React.createClass\n    displayName: 'MessageListBody'\n\n    getInitialState: ->\n        state =\n            messageID: null\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        # we must do the comparison manually because the property \"onSelect\" is\n        # a function (therefore it should not be compared)\n        updatedProps = Object.keys(nextProps).filter (prop) =>\n            return typeof nextProps[prop] isnt 'function' and\n                not (_.isEqual(nextProps[prop], @props[prop]))\n        should = not(_.isEqual(nextState, @state)) or updatedProps.length > 0\n\n        return should\n\n    render: ->\n        messages = @props.messages.map (message, key) =>\n            id = message.get('id')\n            cid = message.get('conversationID')\n            if @props.settings.get('displayConversation')\n                isActive = @props.conversationID is cid\n            else\n                isActive = @props.messageID is id\n            MessageItem\n                message: message,\n                mailboxID: @props.mailboxID,\n                conversationLengths: @props.conversationLengths?.get(cid),\n                key: key,\n                isActive: isActive,\n                edited: @props.edited,\n                settings: @props.settings,\n                selected: @props.selected[id]?,\n                login: @props.login\n                onSelect: (val) =>\n                    @props.onSelect id, val\n\n        .toJS()\n        ul className: 'list-unstyled',\n            messages\n\n    componentDidMount: ->\n        @_onMount()\n\n    componentDidUpdate: ->\n        @_onMount()\n\n    _onMount: ->\n        # If selected message has changed, scroll the list to put current message\n        # into view\n        if @state.messageID isnt @props.messageID\n            active = document.querySelector(\"[data-message-id='#{@props.messageID}']\")\n            if active? and not DomUtils.isVisible(active)\n                active.scrollIntoView(false)\n            @setState messageID: @props.messageID\n\nMessageItem = React.createClass\n    displayName: 'MessagesItem'\n\n    mixins: [RouterMixin]\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        # we must do the comparison manually because the property \"onSelect\" is\n        # a function (therefore it should not be compared)\n        updatedProps = Object.keys(nextProps).filter (prop) =>\n            return typeof nextProps[prop] isnt 'function' and\n                not (_.isEqual(nextProps[prop], @props[prop]))\n        shouldUpdate = not _.isEqual(nextState, @state) or updatedProps.length > 0\n\n        return shouldUpdate\n\n    render: ->\n        message = @props.message\n        flags = message.get('flags')\n        classes = classer\n            message: true\n            read: message.get 'isRead'\n            active: @props.isActive\n            edited: @props.edited\n            'unseen': flags.indexOf(MessageFlags.SEEN) is -1\n            'has-attachments': message.get 'hasAttachments'\n            'is-fav': flags.indexOf(MessageFlags.FLAGGED) isnt -1\n\n        isDraft = message.get('flags').indexOf(MessageFlags.DRAFT) isnt -1\n\n        if isDraft\n            action = 'edit'\n            params =\n                messageID: message.get 'id'\n        else\n            conversationID = message.get 'conversationID'\n            if conversationID and @props.settings.get('displayConversation')\n                action = 'conversation'\n                params =\n                    conversationID: conversationID\n                    messageID: message.get 'id'\n            else\n                action = 'message'\n                params =\n                    conversationID: conversationID\n                    messageID: message.get 'id'\n        if not @props.edited\n            url = @buildUrl\n                direction: 'second'\n                action: action\n                parameters: params\n            tag = a\n        else\n            tag = span\n\n        compact = @props.settings.get('listStyle') is 'compact'\n        date    = MessageUtils.formatDate message.get('createdAt'), compact\n        avatar  = MessageUtils.getAvatar message\n        text    = message.get('text')\n        preview = if text? then text.substr(0, 100) + \"…\" else ''\n\n        li\n            className: classes\n            key: @props.key\n            'data-message-id': message.get('id')\n            draggable: not @props.edited\n            onClick: @onMessageClick\n            onDragStart: @onDragStart\n        ,\n            tag\n                href: url,\n                className: 'wrapper'\n                'data-message-id': message.get('id'),\n                onClick: @onMessageClick,\n                onDoubleClick: @onMessageDblClick,\n                ref: 'target',\n                    div\n                        className: 'avatar-wrapper',\n                        input\n                            ref: 'select'\n                            className: 'select',\n                            type: 'checkbox',\n                            checked: @props.selected,\n                            onChange: @onSelect\n                        if avatar?\n                            img className: 'avatar', src: avatar\n                        else\n                            i className: 'fa fa-user'\n                    span className: 'participants', @getParticipants message\n                    div className: 'preview',\n                        if @props.conversationLengths > 1\n                            span className: 'badge conversation-length',\n                                @props.conversationLengths\n                        span className: 'title',\n                            message.get 'subject'\n                        p null, preview\n                    span className: 'hour', date\n                    span className: \"flags\",\n                        i className: 'attach fa fa-paperclip'\n                        i className: 'fav fa fa-star'\n\n    _doCheck: ->\n        # please don't ask me why this **** react needs this\n        if @props.selected\n            setTimeout =>\n                @refs.select?.getDOMNode().checked = true\n            , 50\n        else\n            setTimeout =>\n                @refs.select?.getDOMNode().checked = false\n            , 50\n    componentDidMount: ->\n        @_doCheck()\n    componentDidUpdate: ->\n        @_doCheck()\n    onSelect: (e) ->\n        @props.onSelect(not @props.selected)\n        e.preventDefault()\n        e.stopPropagation()\n\n    onMessageClick: (event) ->\n        if @props.edited\n            @props.onSelect(not @props.selected)\n            event.preventDefault()\n            event.stopPropagation()\n        else\n            if not (event.target.getAttribute('type') is 'checkbox')\n                event.preventDefault()\n                node = @refs.target.getDOMNode()\n                MessageActionCreator.setCurrent node.dataset.messageId\n                if @props.settings.get('displayPreview')\n                    href = '#' + node.href.split('#')[1]\n                    @redirect href\n\n    onMessageDblClick: (event) ->\n        if not @props.edited\n            url = event.currentTarget.href.split('#')[1]\n            window.router.navigate url, {trigger: true}\n\n    onDragStart: (event) ->\n        event.stopPropagation()\n        data =\n            messageID: event.currentTarget.dataset.messageId\n            mailboxID: @props.mailboxID\n            conversation: @props.settings.get 'displayConversation'\n        event.dataTransfer.setData 'text', JSON.stringify(data)\n        event.dataTransfer.effectAllowed = 'move'\n        event.dataTransfer.dropEffect = 'move'\n\n    getParticipants: (message) ->\n        from = message.get 'from'\n        to   = message.get('to').concat(message.get('cc')).filter (address) =>\n            return address.address isnt @props.login and\n                address.address isnt from[0]?.address\n        separator = if to.length > 0 then ', ' else ' '\n        span null,\n            Participants participants: from, onAdd: @addAddress\n            span null, separator\n            Participants participants: to, onAdd: @addAddress\n\n    addAddress: (address) ->\n        ContactActionCreator.createContact address\n\nMessagesQuickFilter = React.createClass\n    displayName: 'MessagesQuickFilter'\n\n    render: ->\n        div\n            className: \"form-group message-list-action\",\n            input\n                className: \"form-control\"\n                type: \"text\"\n                onBlur: @onQuick\n\n    onQuick: (ev) ->\n        LayoutActionCreator.quickFilterMessages ev.target.value.trim()\n\nMessagesFilter = React.createClass\n    displayName: 'MessagesFilter'\n\n    mixins: [RouterMixin]\n\n    render: ->\n        filter = @props.query.flag\n        if not filter? or filter is '-'\n            title = i className: 'fa fa-filter'\n        else\n            title = t 'list filter ' + filter\n        div className: 'btn-group btn-group-sm dropdown filter-dropdown',\n            button\n                className: 'btn btn-default dropdown-toggle message-list-action'\n                type: 'button'\n                'data-toggle': 'dropdown'\n                title\n                    span className: 'caret'\n            ul\n                className: 'dropdown-menu',\n                role: 'menu',\n                    li role: 'presentation',\n                        a\n                            onClick: @onFilter,\n                            'data-filter': MessageFilter.ALL,\n                            t 'list filter all'\n                    li role: 'presentation',\n                        a\n                            onClick: @onFilter,\n                            'data-filter': MessageFilter.UNSEEN,\n                            t 'list filter unseen'\n                    li role: 'presentation',\n                        a\n                            onClick: @onFilter,\n                            'data-filter': MessageFilter.FLAGGED,\n                            t 'list filter flagged'\n                    li role: 'presentation',\n                        a\n                            onClick: @onFilter,\n                            'data-filter': MessageFilter.ATTACH,\n                            t 'list filter attach'\n\n    onFilter: (ev) ->\n        LayoutActionCreator.filterMessages ev.target.dataset.filter\n\n        params = _.clone(MessageStore.getParams())\n        params.accountID = @props.accountID\n        params.mailboxID = @props.mailboxID\n        LayoutActionCreator.showMessageList parameters: params\n        #@redirect @buildUrl\n        #    direction: 'first'\n        #    action: 'account.mailbox.messages.full'\n        #    parameters: params\n\nMessagesSort = React.createClass\n    displayName: 'MessagesSort'\n\n    mixins: [RouterMixin]\n\n    render: ->\n        sort = @props.query.sort\n        if not sort? or sort is '-'\n            title = t 'list sort'\n        else\n            sort  = sort.substr 1\n            title = t 'list sort ' + sort\n        div className: 'btn-group btn-group-sm dropdown sort-dropdown',\n            button\n                className: 'btn btn-default dropdown-toggle message-list-action'\n                type: 'button'\n                'data-toggle': 'dropdown'\n                title\n                    span className: 'caret'\n            ul\n                className: 'dropdown-menu',\n                role: 'menu',\n                    li role: 'presentation',\n                        a\n                            onClick: @onSort,\n                            'data-sort': 'date',\n                            t 'list sort date'\n                    li role: 'presentation',\n                        a\n                            onClick: @onSort,\n                            'data-sort': 'subject',\n                            t 'list sort subject'\n\n    onSort: (ev) ->\n        field = ev.target.dataset.sort\n\n        LayoutActionCreator.sortMessages\n            field: field\n\n        params = _.clone(MessageStore.getParams())\n        params.accountID = @props.accountID\n        params.mailboxID = @props.mailboxID\n        LayoutActionCreator.showMessageList parameters: params\n        #@redirect @buildUrl\n        #    direction: 'first'\n        #    action: 'account.mailbox.messages.full'\n        #    parameters: params\n","{div, ul, li, span, i, p, a, button, pre, iframe, img, h4} = React.DOM\nCompose        = require './compose'\nFilePicker     = require './file_picker'\nToolboxActions = require './toolbox_actions'\nToolboxMove    = require './toolbox_move'\nMessageUtils = require '../utils/message_utils'\n{ComposeActions, MessageFlags, FlagsConstants} = require '../constants/app_constants'\nLayoutActionCreator       = require '../actions/layout_action_creator'\nConversationActionCreator = require '../actions/conversation_action_creator'\nMessageActionCreator      = require '../actions/message_action_creator'\nContactActionCreator      = require '../actions/contact_action_creator'\nRouterMixin = require '../mixins/router_mixin'\nParticipants  = require './participant'\n\nclasser = React.addons.classSet\nalertError   = LayoutActionCreator.alertError\nalertSuccess = LayoutActionCreator.notify\n\nmodule.exports = React.createClass\n    displayName: 'Message'\n\n    mixins: [\n        RouterMixin\n    ]\n\n    getInitialState: ->\n        return {\n            active: @props.active,\n            composing: false\n            composeAction: ''\n            headers: false\n            messageDisplayHTML:   @props.settings.get 'messageDisplayHTML'\n            messageDisplayImages: @props.settings.get 'messageDisplayImages'\n            currentMessageID: null\n            prepared: {}\n        }\n\n    propTypes:\n        accounts               : React.PropTypes.object.isRequired\n        active                 : React.PropTypes.bool\n        inConversation         : React.PropTypes.bool\n        key                    : React.PropTypes.string.isRequired\n        mailboxes              : React.PropTypes.object.isRequired\n        message                : React.PropTypes.object.isRequired\n        nextMessageID          : React.PropTypes.string\n        nextConversationID     : React.PropTypes.string\n        prevMessageID          : React.PropTypes.string\n        prevConversationID     : React.PropTypes.string\n        selectedAccountID      : React.PropTypes.string.isRequired\n        selectedAccountLogin   : React.PropTypes.string.isRequired\n        selectedMailboxID      : React.PropTypes.string.isRequired\n        settings               : React.PropTypes.object.isRequired\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        should = not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n        return should\n\n    _prepareMessage: (message) ->\n        # display full headers\n        fullHeaders = []\n        for key, value of message.get 'headers'\n            if Array.isArray(value)\n                fullHeaders.push \"#{key}: #{value.join('\\n    ')}\"\n            else\n                fullHeaders.push \"#{key}: #{value}\"\n\n        text = message.get 'text'\n        html = message.get 'html'\n        alternatives = message.get 'alternatives'\n        urls = /((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/gim\n        # Some calendar invite may contain neither text nor HTML part\n        if not text? and not html? and alternatives?.length > 0\n            text = t 'calendar unknown format'\n\n        #\n        # @TODO Do we want to convert text only messages to HTML ?\n        # /!\\ if messageDisplayHTML is set, this method should always return\n        # a value fo html, otherwise the content of the email flashes\n        if text? and not html? and @state.messageDisplayHTML\n            try\n                html = markdown.toHTML text.replace(/(^>.*$)([^>]+)/gm, \"$1\\n$2\")\n            catch e\n                html = \"<div class='text'>#{text}</div>\" #markdown.toHTML text\n\n        if html? and not text? and not @state.messageDisplayHTML\n            text = toMarkdown html\n\n        if text?\n            rich = text.replace urls, '<a href=\"$1\" target=\"_blank\">$1</a>'\n            rich = rich.replace /^>>>>>[^>]?.*$/gim, '<span class=\"quote5\">$&</span>'\n            rich = rich.replace /^>>>>[^>]?.*$/gim, '<span class=\"quote4\">$&</span>'\n            rich = rich.replace /^>>>[^>]?.*$/gim, '<span class=\"quote3\">$&</span>'\n            rich = rich.replace /^>>[^>]?.*$/gim, '<span class=\"quote2\">$&</span>'\n            rich = rich.replace /^>[^>]?.*$/gim, '<span class=\"quote1\">$&</span>'\n\n        return {\n            attachments: message.get 'attachments'\n            fullHeaders: fullHeaders\n            text       : text\n            rich       : rich\n            html       : html\n        }\n\n    componentWillMount: ->\n        @_markRead @props.message\n\n    componentWillReceiveProps: (props) ->\n        state =\n            active: props.active\n        if props.message.get('id') isnt @props.message.get('id')\n            @_markRead props.message\n            state.messageDisplayHTML   = props.settings.get 'messageDisplayHTML'\n            state.messageDisplayImages = props.settings.get 'messageDisplayImages'\n            state.composing            = false\n        @setState state\n\n    _markRead: (message) ->\n        # Hack to prevent infinite loop if server side mark as read fails\n        messageID = message.get 'id'\n        if @state.currentMessageID isnt messageID\n            state =\n                currentMessageID: messageID\n                prepared: @_prepareMessage message\n            # Mark message as seen if needed\n            flags = message.get('flags').slice()\n            if flags.indexOf(MessageFlags.SEEN) is -1\n                flags.push MessageFlags.SEEN\n                MessageActionCreator.updateFlag message, flags\n            @setState state\n\n    prepareHTML: (html) ->\n        messageDisplayHTML = true\n        parser = new DOMParser()\n        html   = \"\"\"<html><head>\n                <link rel=\"stylesheet\" href=\"/fonts/fonts.css\" />\n                <link rel=\"stylesheet\" href=\"./mail_stylesheet.css\" />\n                <style>body { visibility: hidden; }</style>\n            </head><body>#{html}</body></html>\"\"\"\n        doc    = parser.parseFromString html, \"text/html\"\n        images = []\n\n        if not doc\n            doc = document.implementation.createHTMLDocument(\"\")\n            doc.documentElement.innerHTML = html\n\n        if not doc\n            console.error \"Unable to parse HTML content of message\"\n            messageDisplayHTML = false\n\n        if doc and not @state.messageDisplayImages\n            hideImage = (image) ->\n                image.dataset.src = image.getAttribute 'src'\n                image.removeAttribute 'src'\n            images = doc.querySelectorAll 'IMG[src]'\n            hideImage image for image in images\n\n        for link in doc.querySelectorAll 'a[href]'\n            link.target = '_blank'\n            # convert relative to absolute links in message content\n            href = link.getAttribute 'href'\n            if href isnt '' and not /:\\/\\//.test href\n                link.setAttribute 'href', 'http://' + href\n\n        if doc?\n            @_htmlContent = doc.documentElement.innerHTML\n        else\n            @_htmlContent = html\n\n            #htmluri = \"data:text/html;charset=utf-8;base64,\n            #      #{btoa(unescape(encodeURIComponent(doc.body.innerHTML)))}\"\n        return {messageDisplayHTML, images}\n\n    render: ->\n\n        message  = @props.message\n        prepared = @state.prepared\n\n        if @state.messageDisplayHTML and prepared.html?\n            {messageDisplayHTML, images} = @prepareHTML prepared.html\n            imagesWarning = images.length > 0 and\n                            not @state.messageDisplayImages\n        else\n            messageDisplayHTML = false\n            imagesWarning      = false\n\n        classes = classer\n            message: true\n            active: @state.active\n\n        if @state.active\n            li\n                className: classes,\n                key: @props.key,\n                'data-id': message.get('id'),\n                    @renderHeaders message\n                    div className: 'full-headers',\n                        pre null, prepared?.fullHeaders?.join \"\\n\"\n                    @renderToolbox message\n                    @renderCompose()\n                    MessageContent\n                        ref: 'messageContent'\n                        messageID: message.get 'id'\n                        messageDisplayHTML: messageDisplayHTML\n                        html: @_htmlContent\n                        text: prepared.text\n                        rich: prepared.rich\n                        imagesWarning: imagesWarning\n                        composing: @state.composing\n                        displayImages: @displayImages\n                        displayHTML: @displayHTML\n                    @renderAttachments message.get('attachments').toJS()\n                    div className: 'clearfix'\n        else\n            li\n                className: classes,\n                key: @props.key,\n                'data-id': message.get('id'),\n                    @renderHeaders message\n\n    getParticipants: (message) ->\n        from = message.get 'from'\n        to   = message.get('to').concat(message.get('cc'))\n        span null,\n            Participants participants: from, onAdd: @addAddress, tooltip: true\n            span null, ', '\n            Participants participants: to, onAdd: @addAddress, tooltip: true\n\n    renderHeaders: (message) ->\n        attachments    = message.get('attachments')\n        hasAttachments = attachments.length\n        leftClass = if hasAttachments then 'col-md-8' else 'col-md-12'\n        flags     = message.get('flags') or []\n        avatar    = MessageUtils.getAvatar @props.message\n        date      = MessageUtils.formatDate message.get 'createdAt'\n        classes = classer\n            'header': true\n            'row': true\n            'full': @state.headers\n            'compact': not @state.headers\n            'has-attachments': hasAttachments\n            'is-fav': flags.indexOf(MessageFlags.FLAGGED) isnt -1\n\n        #toggleActive = a className: \"toggle-active\", onClick: @toggleActive,\n        #    if @state.active\n        #        i className: 'fa fa-compress'\n        #    else\n        #        i className: 'fa fa-expand'\n        if @state.headers\n            # detailed headers\n            div className: classes, onClick: @toggleActive,\n                div className: leftClass,\n                    if avatar\n                        img className: 'sender-avatar', src: avatar\n                    else\n                        i className: 'sender-avatar fa fa-user'\n                    div className: 'participants col-md-9',\n                        p className: 'sender',\n                            @renderAddress 'from'\n                            i\n                                className: 'toggle-headers fa fa-toggle-up clickable'\n                                onClick: @toggleHeaders\n                        p className: 'receivers',\n                            span null, t \"mail receivers\"\n                            @renderAddress 'to'\n                        if @props.message.get('cc')?.length > 0\n                            p className: 'receivers',\n                                span null, t \"mail receivers cc\"\n                                @renderAddress 'cc'\n                        if hasAttachments\n                            span className: 'hour', date\n                    if not hasAttachments\n                        span className: 'hour', date\n                if hasAttachments\n                    div className: 'col-md-4',\n                        FilePicker\n                            ref: 'filePicker'\n                            editable: false\n                            value: attachments\n                            messageID: @props.message.get 'id'\n                #if @props.inConversation\n                #    toggleActive\n        else\n            # compact headers\n            div className: classes, onClick: @toggleActive,\n                if avatar\n                    img className: 'sender-avatar', src: avatar\n                else\n                    i className: 'sender-avatar fa fa-user'\n                span className: 'participants', @getParticipants message\n                if @state.active\n                    i\n                        className: 'toggle-headers fa fa-toggle-down clickable'\n                        onClick: @toggleHeaders\n                #span className: 'subject', @props.message.get 'subject'\n                span className: 'hour', date\n                span className: \"flags\",\n                    i\n                        className: 'attach fa fa-paperclip clickable'\n                        onClick: @toggleHeaders\n                    i className: 'fav fa fa-star'\n                #if @props.inConversation\n                #    toggleActive\n\n\n    renderAddress: (field) ->\n        addresses = @props.message.get(field)\n        if not addresses?\n            return\n\n        Participants participants: addresses, onAdd: @addAddress, tooltip: true\n\n    renderCompose: ->\n        if @state.composing\n            Compose\n                ref             : 'compose'\n                inReplyTo       : @props.message\n                accounts        : @props.accounts\n                settings        : @props.settings\n                selectedAccountID    : @props.selectedAccountID\n                selectedAccountLogin : @props.selectedAccountLogin\n                action          : @state.composeAction\n                layout          : 'second'\n                callback: (error) =>\n                    if not error?\n                        @setState composing: false\n                onCancel: =>\n                    @setState composing: false\n\n    renderToolbox: (message) ->\n\n        if @state.composing\n            return\n\n        flags     = message.get('flags') or []\n        isFlagged = flags.indexOf(FlagsConstants.FLAGGED) is -1\n        isSeen    = flags.indexOf(FlagsConstants.SEEN) is -1\n\n\n        conversationID = @props.message.get 'conversationID'\n\n        getParams = (messageID, conversationID) =>\n            if @props.settings.get('displayConversation')\n                return {\n                    action : 'conversation'\n                    parameters:\n                        messageID : messageID\n                        conversationID: conversationID\n                }\n            else\n                return {\n                    action : 'message'\n                    parameters:\n                        messageID : messageID\n                }\n        if @props.prevMessageID?\n            params = getParams @props.prevMessageID, @props.prevConversationID\n            prev =\n                direction: 'second'\n                action: params.action\n                parameters: params.parameters\n            prevUrl =  @buildUrl prev\n            displayPrev = =>\n                @redirect prev\n        if @props.nextMessageID?\n            params = getParams @props.nextMessageID, @props.nextConversationID\n            next =\n                direction: 'second'\n                action: params.action\n                parameters: params.parameters\n            nextUrl = @buildUrl next\n            displayNext = =>\n                @redirect next\n\n        div className: 'messageToolbox row',\n            div className: 'btn-toolbar', role: 'toolbar',\n                div className: 'btn-group btn-group-sm btn-group-justified',\n                    if prevUrl?\n                        div className: 'btn-group btn-group-sm',\n                            button\n                                className: 'btn btn-default prev',\n                                type: 'button',\n                                onClick: displayPrev,\n                                    a href: prevUrl,\n                                        span className: 'fa fa-long-arrow-left'\n                    div className: 'btn-group btn-group-sm',\n                        button\n                            className: 'btn btn-default reply',\n                            type: 'button',\n                            onClick: @onReply,\n                                span\n                                    className: 'fa fa-reply'\n                                span\n                                    className: 'tool-long',\n                                    t 'mail action reply'\n                    div className: 'btn-group btn-group-sm',\n                        button\n                            className: 'btn btn-default reply-all',\n                            type: 'button',\n                            onClick: @onReplyAll,\n                                span\n                                    className: 'fa fa-reply-all'\n                                span\n                                    className: 'tool-long',\n                                    t 'mail action reply all'\n                    div className: 'btn-group btn-group-sm',\n                        button\n                            className: 'btn btn-default forward',\n                            type: 'button',\n                            onClick: @onForward,\n                                span\n                                    className: 'fa fa-mail-forward'\n                                span\n                                    className: 'tool-long',\n                                    t 'mail action forward'\n                    div className: 'btn-group btn-group-sm',\n                        button\n                            className: 'btn btn-default trash',\n                            type: 'button',\n                            onClick: @onDelete,\n                                span\n                                    className: 'fa fa-trash-o'\n                                span\n                                    className: 'tool-long',\n                                    t 'mail action delete'\n                    ToolboxMove\n                        ref: 'toolboxMove'\n                        mailboxes: @props.mailboxes\n                        onMove: @onMove\n                        direction: 'right'\n                    ToolboxActions\n                        ref: 'toolboxActions'\n                        mailboxes: @props.mailboxes\n                        isSeen: isSeen\n                        isFlagged: isFlagged\n                        mailboxID: @props.selectedMailboxID\n                        messageID: message.get 'id'\n                        message: @props.message\n                        onMark: @onMark\n                        onMove: @onMove\n                        onConversation: @onConversation\n                        onHeaders: @onHeaders\n                        direction: 'right'\n                    if nextUrl?\n                        div className: 'btn-group btn-group-sm',\n                            button\n                                className: 'btn btn-default',\n                                type: 'button',\n                                onClick: displayNext,\n                                    a href: nextUrl,\n                                        span className: 'fa fa-long-arrow-right'\n\n    renderAttachments: (attachments) ->\n        files = attachments.filter (file) ->\n            return MessageUtils.getAttachmentType(file.contentType) is 'image'\n        if files.length is 0\n            return\n\n        div className: 'att-previews',\n            h4 null, t 'message preview title'\n            files.map (file) ->\n                AttachmentPreview\n                    ref: 'attachmentPreview'\n                    file: file,\n                    key: file.checksum\n\n    toggleHeaders: (e) ->\n        e.preventDefault()\n        e.stopPropagation()\n        state =\n            headers: not @state.headers\n        if @props.inConversation and not @state.active\n            state.active = true\n        @setState state\n\n    toggleActive: (e) ->\n        if @props.inConversation\n            e.preventDefault()\n            e.stopPropagation()\n            if @state.active\n                @setState { active: false, headers: false }\n            else\n                @setState { active: true, headers: false }\n\n    displayNextMessage: ->\n        if @props.nextMessageID?\n            nextMessageID      = @props.nextMessageID\n            nextConversationID = @props.nextConversationID\n        else\n            nextMessageID      = @props.prevMessageID\n            nextConversationID = @props.prevConversationID\n        if nextMessageID\n            if @props.settings.get('displayConversation')\n                @redirect\n                    direction: 'second'\n                    action : 'conversation'\n                    parameters:\n                        messageID : nextMessageID\n                        conversationID: nextConversationID\n            else\n                @redirect\n                    direction: 'second'\n                    action : 'message'\n                    parameters:\n                        messageID : nextMessageID\n        else\n            @redirect\n                direction: 'first'\n                action: 'account.mailbox.messages'\n                parameters:\n                    accountID: @props.message.get 'accountID'\n                    mailboxID: @props.selectedMailboxID\n                fullWidth: true\n\n    onReply: (args) ->\n        @setState composing: true, composeAction: ComposeActions.REPLY\n\n    onReplyAll: (args) ->\n        @setState composing: true, composeAction: ComposeActions.REPLY_ALL\n\n    onForward: (args) ->\n        @setState composing: true, composeAction: ComposeActions.FORWARD\n\n    onDelete: (args) ->\n        message      = @props.message\n        if (not @props.settings.get('messageConfirmDelete')) or\n        window.confirm(t 'mail confirm delete', {subject: message.get('subject')})\n            @displayNextMessage()\n            MessageActionCreator.delete message, (error) ->\n                if error?\n                    alertError \"#{t(\"message action delete ko\")} #{error}\"\n\n    onCopy: (args) ->\n        LayoutActionCreator.alertWarning t \"app unimplemented\"\n\n    onMove: (args) ->\n        newbox = args.target.dataset.value\n        oldbox = @props.selectedMailboxID\n        if args.target.dataset.conversation?\n            ConversationActionCreator.move @props.message, oldbox, newbox, (error) =>\n                if error?\n                    alertError \"#{t(\"conversation move ko\")} #{error}\"\n                else\n                    alertSuccess t \"conversation move ok\"\n                    @displayNextMessage()\n        else\n            MessageActionCreator.move @props.message, oldbox, newbox, (error) =>\n                if error?\n                    alertError \"#{t(\"message action move ko\")} #{error}\"\n                else\n                    alertSuccess t \"message action move ok\"\n                    @displayNextMessage()\n\n    onMark: (args) ->\n        flags = @props.message.get('flags').slice()\n        flag = args.target.dataset.value\n        switch flag\n            when FlagsConstants.SEEN\n                flags.push MessageFlags.SEEN\n            when FlagsConstants.UNSEEN\n                flags = flags.filter (e) -> return e isnt FlagsConstants.SEEN\n            when FlagsConstants.FLAGGED\n                flags.push MessageFlags.FLAGGED\n            when FlagsConstants.NOFLAG\n                flags = flags.filter (e) -> return e isnt FlagsConstants.FLAGGED\n        MessageActionCreator.updateFlag @props.message, flags, (error) ->\n            if error?\n                alertError \"#{t(\"message action mark ko\")} #{error}\"\n            else\n                alertSuccess t \"message action mark ok\"\n\n    onConversation: (args) ->\n        id     = @props.message.get 'conversationID'\n        action = args.target.dataset.action\n        switch action\n            when 'delete'\n                ConversationActionCreator.delete id, (error) ->\n                    if error?\n                        alertError \"#{t(\"conversation delete ko\")} #{error}\"\n                    else\n                        alertSuccess t \"conversation delete ok\"\n            when 'seen'\n                ConversationActionCreator.seen id, (error) ->\n                    if error?\n                        alertError \"#{t(\"conversation seen ko\")} #{error}\"\n                    else\n                        alertSuccess t \"conversation seen ok\"\n            when 'unseen'\n                ConversationActionCreator.unseen id, (error) ->\n                    if error?\n                        alertError \"#{t(\"conversation unseen ko\")} #{error}\"\n                    else\n                        alertSuccess t \"conversation unseen ok\"\n\n    onHeaders: (event) ->\n        event.preventDefault()\n        messageID = event.target.dataset.messageId\n        document.querySelector(\".conversation [data-id='#{messageID}']\")\n            .classList.toggle('with-headers')\n\n    addAddress: (address) ->\n        ContactActionCreator.createContact address\n\n    displayImages: (event) ->\n        event.preventDefault()\n        @setState messageDisplayImages: true\n\n    displayHTML: (value) ->\n        if not value?\n            value = true\n        @setState messageDisplayHTML: value\n\nMessageContent = React.createClass\n    displayName: 'MessageContent'\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    render: ->\n        displayHTML= =>\n            @props.displayHTML true\n        if @props.messageDisplayHTML and @props.html\n            div className: 'row',\n                if @props.imagesWarning\n                    div\n                        className: \"imagesWarning content-action\",\n                        ref: \"imagesWarning\",\n                            span null, t 'message images warning'\n                            button\n                                className: 'btn btn-default',\n                                type: \"button\",\n                                ref: 'imagesDisplay',\n                                onClick: @props.displayImages,\n                                t 'message images display'\n                iframe\n                    'data-message-id': @props.messageID\n                    name: \"frame-#{@props.messageID}\"\n                    className: 'content',\n                    ref: 'content',\n                    allowTransparency: true,\n                    sandbox: 'allow-same-origin allow-popups',\n                    frameBorder: 0\n        else\n            div className: 'row',\n                #div className: \"content-action\",\n                #    button\n                #       className: 'btn btn-default',\n                #       type: \"button\",\n                #       onClick: @props.displayHTML,\n                #       t 'message html display'\n                div className: 'preview', ref: content,\n                    p dangerouslySetInnerHTML: { __html: @props.rich }\n                    #p null, @props.text\n\n    _initFrame: (type) ->\n        panel = document.querySelector \"#panels > .panel:nth-of-type(2)\"\n        if panel? and not @props.composing\n            panel.scrollTop = 0\n        # - resize the frame to the height of its content\n        # - if images are not displayed, create the function to display them\n        #   and resize the frame\n        if @props.messageDisplayHTML and @refs.content\n            frame = @refs.content.getDOMNode()\n            doc = frame.contentDocument or frame.contentWindow?.document\n            checkResize = false # disabled for now\n            step = 0\n            # Function called on frame load\n            # Inject HTML content of the message inside the frame, then\n            # update frame height to remove scrollbar\n            loadContent = (e) =>\n                step = 0\n                doc = frame.contentDocument or frame.contentWindow?.document\n                if doc?\n                    doc.documentElement.innerHTML = @props.html\n                    window.cozyMails.customEvent \"MESSAGE_LOADED\", @props.messageID\n                    updateHeight = (e) ->\n                        height = doc.documentElement.scrollHeight\n                        if height < 60\n                            frame.style.height = \"60px\"\n                        else\n                            frame.style.height = \"#{height + 60}px\"\n                        step++\n                        # Prevent infinite loop on onresize event\n                        if checkResize and step > 10\n\n                            doc.body.removeEventListener 'load', loadContent\n                            frame.contentWindow?.removeEventListener 'resize'\n\n                    updateHeight()\n                    # some browsers don't fire event when remote fonts are loaded\n                    # so we need to wait a little and check the frame height again\n                    setTimeout updateHeight, 1000\n\n                    # Update frame height on load\n                    doc.body.onload = updateHeight\n\n                    # disabled for now\n                    if checkResize\n                        frame.contentWindow.onresize = updateHeight\n                        window.onresize = updateHeight\n                        frame.contentWindow?.addEventListener 'resize', updateHeight, true\n                else\n                    # try to display text only\n                    @props.displayHTML false\n\n            if type is 'mount' and doc.readyState isnt 'complete'\n                frame.addEventListener 'load', loadContent\n            else\n                loadContent()\n        else\n            window.cozyMails.customEvent \"MESSAGE_LOADED\", @props.messageID\n\n        if @refs.content? and not @props.composing\n            @refs.content.getDOMNode().scrollIntoView()\n\n\n    componentDidMount: ->\n        @_initFrame('mount')\n\n    componentDidUpdate: ->\n        @_initFrame('update')\n\nAttachmentPreview = React.createClass\n    displayName: 'AttachmentPreview'\n\n    getInitialState: ->\n        return {\n            displayed: false\n        }\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    render: ->\n        toggleDisplay = =>\n            @setState displayed: not @state.displayed\n\n        span\n            className: 'att-preview',\n            key: @props.key,\n            if @state.displayed\n                img\n                    onClick: toggleDisplay\n                    src: @props.file.url\n            else\n                button\n                    className: 'btn btn-default btn-lg'\n                    onClick: toggleDisplay\n                    @props.file.generatedFileName\n","module.exports = Modal = React.createClass\n    displayName: 'Modal'\n\n    render: ->\n        React.DOM.div\n            className: \"modal fade in\",\n            role: \"dialog\",\n            style: display: 'block',\n                React.DOM.div className: \"modal-dialog\",\n                    React.DOM.div className: \"modal-content\",\n                        if @props.title?\n                            React.DOM.div className: \"modal-header\",\n                                if @props.closeLabel?\n                                    React.DOM.button\n                                        type: 'button',\n                                        className: 'close',\n                                        onClick: @props.closeModal,\n                                            React.DOM.i className: 'fa fa-times'\n                                React.DOM.h4\n                                    className: \"modal-title\",\n                                    @props.title\n                        React.DOM.div className: \"modal-body\",\n                            if @props.subtitle?\n                                React.DOM.span null, @props.subtitle\n                            @props.content\n                        if @props.closeLabel?\n                            React.DOM.div className: \"modal-footer\",\n                                React.DOM.button\n                                    type: 'button',\n                                    className: 'btn',\n                                    onClick: @props.closeModal,\n                                    @props.closeLabel\n\n","{span, a, i} = React.DOM\nMessageUtils   = require '../utils/message_utils'\nContactStore   = require '../stores/contact_store'\n\nParticipant = React.createClass\n    displayName: 'Participant'\n\n    render: ->\n        if not @props.address?\n            span null\n        else\n            span\n                className: 'address-item'\n                'data-toggle': \"tooltip\"\n                ref: 'participant'\n                title: @props.address.address,\n                key: @props.key,\n                MessageUtils.displayAddress @props.address\n\n    # To keep HTML markup light, create the contact tooltip dynamicaly\n    # on mouse over\n    tooltip: ->\n        if @refs.participant?\n            node  = @refs.participant.getDOMNode()\n            delay = null\n            onAdd = (e) =>\n                e.preventDefault()\n                e.stopPropagation()\n                @props.onAdd @props.address\n            addTooltip = (e) =>\n                if node.dataset.tooltip\n                    return\n                node.dataset.tooltip = true\n                contact = ContactStore.getByAddress @props.address.address\n                avatar  = contact?.get 'avatar'\n                if avatar?\n                    image = \"<img class='avatar' src=#{avatar}>\"\n                else\n                    image = \"<i class='avatar fa fa-user' />\"\n                if contact?\n                    image = \"\"\"\n                    <a href=\"#apps/contacts/contact/#{contact.get 'id'}\" target=\"blank\">\n                        #{image}\n                    </a>\n                    \"\"\"\n                if @props.onAdd?\n                    add = \"\"\"\n                    <a class='address-add'>\n                        <i class='fa fa-plus' />\n                    </a>\n                    \"\"\"\n                else\n                    add = ''\n                template = \"\"\"\n                    <div class=\"tooltip\" role=\"tooltip\">\n                        <div class=\"tooltip-arrow\"></div>\n                        <div>\n                            #{image}\n                            #{@props.address.address}\n                            #{add}\n                        </div>\n                    </div>'\n                    \"\"\"\n                options =\n                    template: template\n                    trigger: 'manual'\n                    container: \"[data-reactid='#{node.dataset.reactid}']\"\n                jQuery(node).tooltip(options).tooltip('show')\n                tooltipNode = jQuery(node).data('bs.tooltip').tip()[0]\n                if parseInt(tooltipNode.style.left, 10) < 0\n                    tooltipNode.style.left = 0\n                rect = tooltipNode.getBoundingClientRect()\n                mask = document.createElement 'div'\n                mask.classList.add 'tooltip-mask'\n                mask.style.top    = (rect.top - 2) + 'px'\n                mask.style.left   = (rect.left - 2) + 'px'\n                mask.style.height = (rect.height + 16) + 'px'\n                mask.style.width  = (rect.width  + 4) + 'px'\n                document.body.appendChild mask\n                mask.addEventListener 'mouseout', (e) ->\n                    if not ( rect.left < e.pageX < rect.right) or\n                       not ( rect.top  < e.pageY < rect.bottom)\n                        mask.parentNode.removeChild mask\n                        removeTooltip()\n                if @props.onAdd?\n                    addNode = tooltipNode.querySelector('.address-add')\n                    addNode.addEventListener 'mouseover', ->\n                    addNode.addEventListener 'click', onAdd\n            removeTooltip = ->\n                addNode = node.querySelector('.address-add')\n                if addNode?\n                    addNode.removeEventListener 'click', onAdd\n                delete node.dataset.tooltip\n                jQuery(node).tooltip('destroy')\n\n            node.addEventListener 'mouseover', ->\n                delay = setTimeout ->\n                    addTooltip()\n                , 5000\n            node.addEventListener 'mouseout', ->\n                clearTimeout delay\n            node.addEventListener 'click', (event) ->\n                event.stopPropagation()\n                addTooltip()\n\n    componentDidMount: ->\n        if @props.tooltip\n            @tooltip()\n\n    componentDidUpdate: ->\n        if @props.tooltip\n            @tooltip()\n\nParticipants = React.createClass\n    displayName: 'Participants'\n\n    render: ->\n        span className: 'address-list',\n            if @props.participants\n                for address, key in @props.participants\n                    span key: key, className: null,\n                        Participant {key, address, onAdd: @props.onAdd, tooltip: @props.tooltip}\n                        if key < ( @props.participants.length - 1)\n                            span null, ', '\n\nmodule.exports = Participants\n","{div, input, span} = React.DOM\nclasser = React.addons.classSet\n\nSearchActionCreator = require '../actions/search_action_creator'\n\nENTER_KEY = 13\n\nRouterMixin = require '../mixins/router_mixin'\n\nmodule.exports = React.createClass\n    displayName: 'SearchForm'\n\n    mixins: [RouterMixin]\n\n    render: ->\n        div className: 'form-group pull-left',\n            div className: 'input-group',\n                input\n                    className: 'form-control',\n                    type: 'text',\n                    placeholder: t('app search'),\n                    onKeyPress: @onKeyPress,\n                    ref: 'searchInput',\n                    defaultValue: @props.query\n                div\n                    className: 'input-group-addon btn btn-cozy',\n                    onClick: @onSubmit,\n                        span className: 'fa fa-search'\n\n    onSubmit: ->\n        query = encodeURIComponent @refs.searchInput.getDOMNode().value.trim()\n\n        # only submit query if it's longer than 3 characters\n        # @TODO: validate and give feedback to the user\n        if query.length > 3\n            @redirect\n                direction: 'first'\n                action: 'search'\n                parameters: [query]\n\n    onKeyPress: (evt) ->\n        if evt.charCode is ENTER_KEY\n            @onSubmit()\n            evt.preventDefault()\n            return false\n        else\n            query = @refs.searchInput.getDOMNode().value\n            SearchActionCreator.setQuery query\n","{div, h3, form, label, input, button, fieldset, legend, ul, li, a, span, i} = React.DOM\nclasser = React.addons.classSet\n\nLayoutActionCreator   = require '../actions/layout_action_creator'\nSettingsActionCreator = require '../actions/settings_action_creator'\nPluginUtils    = require '../utils/plugin_utils'\nApiUtils       = require '../utils/api_utils'\n{Dispositions} = require '../constants/app_constants'\n\nmodule.exports = React.createClass\n    displayName: 'Settings'\n\n    render: ->\n\n        classLabel = 'col-sm-5 col-sm-offset-1 control-label'\n        classInput = 'col-sm-6'\n\n        div id: 'settings',\n            h3 className: null, t \"settings title\"\n\n            if @props.error\n                div className: 'error', @props.error\n\n            form className: 'form-horizontal',\n                #div className: 'form-group',\n                #    label htmlFor: 'settings-mpp', className: classLabel,\n                #        t \"settings label mpp\"\n                #    div className: classInput,\n                #        input\n                #            id: 'settings-mpp',\n                #            value: @state.settings.messagesPerPage,\n                #            onChange: @handleChange,\n                #            'data-target': 'messagesPerPage',\n                #            type: 'number',\n                #            min: 5,\n                #            max: 100,\n                #            step: 5,\n                #            className: 'form-control'\n\n                # Lang\n                #div className: 'form-group',\n                #    label htmlFor: 'settings-mpp', className: classLabel,\n                #        t \"settings lang\"\n                #    div className: classInput,\n                #        div className: \"dropdown\",\n                #            button\n                #                className: \"btn btn-default dropdown-toggle\"\n                #                type: \"button\"\n                #                \"data-toggle\": \"dropdown\",\n                #                t \"settings lang #{@state.settings.lang}\"\n                #            ul className: \"dropdown-menu\", role: \"menu\",\n                #                li\n                #                    role: \"presentation\",\n                #                    'data-target': 'lang',\n                #                    'data-lang': 'en',\n                #                    onClick: @handleChange,\n                #                        a role: \"menuitem\", t \"settings lang en\"\n                #                li\n                #                    role: \"presentation\",\n                #                    'data-target': 'lang',\n                #                    'data-lang': 'fr',\n                #                    onClick: @handleChange,\n                #                        a role: \"menuitem\", t \"settings lang fr\"\n\n                # Layout style\n                div className: 'form-group',\n                    label htmlFor: 'settings-layoutStyle', className: classLabel,\n                        t \"settings label layoutStyle\"\n                    div className: classInput,\n                        div className: \"dropdown\",\n                            button\n                                id: 'settings-layoutStyle'\n                                className: \"btn btn-default dropdown-toggle\"\n                                type: \"button\"\n                                \"data-toggle\": \"dropdown\",\n                                t \"settings label layoutStyle #{@state.settings.layoutStyle or 'vertical'}\"\n                            ul className: \"dropdown-menu\", role: \"menu\",\n                                li\n                                    role: \"presentation\",\n                                    'data-target': 'layoutStyle',\n                                    'data-style': Dispositions.VERTICAL,\n                                    onClick: @handleChange,\n                                        a role: \"menuitem\", t \"settings label layoutStyle vertical\"\n                                li\n                                    role: \"presentation\",\n                                    'data-target': 'layoutStyle',\n                                    'data-style': Dispositions.HORIZONTAL,\n                                    onClick: @handleChange,\n                                        a role: \"menuitem\", t \"settings label layoutStyle horizontal\"\n                                li\n                                    role: \"presentation\",\n                                    'data-target': 'layoutStyle',\n                                    'data-style': Dispositions.THREE,\n                                    onClick: @handleChange,\n                                        a role: \"menuitem\", t \"settings label layoutStyle three\"\n\n                # List style\n                div className: 'form-group',\n                    label htmlFor: 'settings-listStyle', className: classLabel,\n                        t \"settings label listStyle\"\n                    div className: classInput,\n                        div className: \"dropdown\",\n                            button\n                                id: 'settings-listStyle'\n                                className: \"btn btn-default dropdown-toggle\"\n                                type: \"button\"\n                                \"data-toggle\": \"dropdown\",\n                                t \"settings label listStyle #{@state.settings.listStyle or 'default'}\"\n                            ul className: \"dropdown-menu\", role: \"menu\",\n                                li\n                                    role: \"presentation\",\n                                    'data-target': 'listStyle',\n                                    'data-style': 'default',\n                                    onClick: @handleChange,\n                                        a role: \"menuitem\", t \"settings label listStyle default\"\n                                li\n                                    role: \"presentation\",\n                                    'data-target': 'listStyle',\n                                    'data-style': 'compact',\n                                    onClick: @handleChange,\n                                        a role: \"menuitem\", t \"settings label listStyle compact\"\n\n            # SETTINGS\n            @_renderOption 'displayConversation'\n            @_renderOption 'composeInHTML'\n            @_renderOption 'composeOnTop'\n            @_renderOption 'messageDisplayHTML'\n            @_renderOption 'messageDisplayImages'\n            @_renderOption 'messageConfirmDelete'\n            @_renderOption 'displayPreview'\n            @_renderOption 'desktopNotifications'\n\n            fieldset null,\n                legend null, t 'settings plugins'\n                for own pluginName, pluginConf of @state.settings.plugins\n                    form className: 'form-horizontal', key: pluginName,\n                        div className: 'form-group',\n                            label\n                                className: classLabel,\n                                htmlFor: 'settings-plugin-' + pluginName,\n                                t('plugin name ' + pluginConf.name, {_: pluginConf.name})\n                            div className: 'col-sm-1',\n                                if pluginConf.url?\n                                    span\n                                        className: 'clickable'\n                                        onClick: @pluginDel\n                                        'data-plugin': pluginName,\n                                        title: t(\"settings plugin del\"),\n                                            i className: 'fa fa-trash-o'\n                                else\n                                    input\n                                        id: 'settings-plugin-' + pluginName,\n                                        checked: pluginConf.active,\n                                        onChange: @handleChange,\n                                        'data-target': 'plugin',\n                                        'data-plugin': pluginName,\n                                        type: 'checkbox'\n                            if window.plugins[pluginName].onHelp\n                                div className: 'col-sm-1 plugin-help',\n                                    span\n                                        className: 'clickable'\n                                        onClick: @pluginHelp\n                                        'data-plugin': pluginName,\n                                        title: t(\"settings plugin help\"),\n                                            i className: 'fa fa-question-circle'\n                form className: 'form-horizontal', key: pluginName,\n                    div className: 'form-group',\n                        div className: 'col-xs-4',\n                            input\n                                id: 'newpluginName',\n                                name: 'newpluginName',\n                                ref: 'newpluginName',\n                                type: 'text',\n                                className: 'form-control',\n                                placeholder: t \"settings plugin new name\"\n                        div className: 'col-xs-6',\n                            input\n                                id: 'newpluginUrl',\n                                name: 'newpluginUrl',\n                                ref: 'newpluginUrl',\n                                type: 'text',\n                                className: 'form-control',\n                                placeholder: t \"settings plugin new url\"\n                        span\n                            className: \"col-xs-1 clickable\"\n                            onClick: @pluginAdd\n                            title: t(\"settings plugin add\"),\n                                i className: 'fa fa-plus'\n\n    _renderOption: (option) ->\n        classLabel = 'col-sm-5 col-sm-offset-1 control-label'\n        classInput = 'col-sm-6'\n        form className: 'form-horizontal',\n            div className: 'form-group',\n                label\n                    htmlFor: 'settings-' + option,\n                    className: classLabel,\n                    t \"settings label \" + option\n                div className: classInput,\n                    input\n                        id: 'settings-' + option,\n                        checked: @state.settings[option],\n                        onChange: @handleChange,\n                        'data-target': option,\n                        type: 'checkbox'\n\n    handleChange: (event) ->\n        event.preventDefault()\n        target = event.currentTarget\n        switch target.dataset.target\n            #when 'messagesPerPage'\n            #    settings = @state.settings\n            #    settings.messagesPerPage = target.value\n            #    @setState({settings: settings})\n            #    SettingsActionCreator.edit settings\n            # SETTINGS\n            when 'composeInHTML'\n            ,    'composeOnTop'\n            ,    'desktopNotifications'\n            ,    'displayConversation'\n            ,    'displayPreview'\n            ,    'messageConfirmDelete'\n            ,    'messageDisplayHTML'\n            ,    'messageDisplayImages'\n                settings = @state.settings\n                settings[target.dataset.target] = target.checked\n                @setState({settings: settings})\n                SettingsActionCreator.edit settings\n                if window.Notification? and settings.desktopNotifications\n                    Notification.requestPermission (status) ->\n                        # This allows to use Notification.permission with Chrome/Safari\n                        if Notification.permission isnt status\n                            Notification.permission = status\n            #when 'lang'\n            #    lang = target.dataset.lang\n            #    settings = @state.settings\n            #    settings.lang = lang\n            #    @setState({settings: settings})\n            #    ApiUtils.setLocale lang, true\n            #    SettingsActionCreator.edit settings\n            when 'layoutStyle'\n                settings = @state.settings\n                settings.layoutStyle = target.dataset.style\n                LayoutActionCreator.setDisposition settings.layoutStyle\n                @setState({settings: settings})\n                SettingsActionCreator.edit settings\n            when 'listStyle'\n                settings = @state.settings\n                settings.listStyle = target.dataset.style\n                @setState({settings: settings})\n                SettingsActionCreator.edit settings\n            when 'plugin'\n                name = target.dataset.plugin\n                settings = @state.settings\n                if target.checked\n                    PluginUtils.activate name\n                else\n                    PluginUtils.deactivate name\n                for own pluginName, pluginConf of settings.plugins\n                    settings.plugins[pluginName].active = window.plugins[pluginName].active\n                @setState({settings: settings})\n                SettingsActionCreator.edit settings\n\n    pluginAdd: ->\n        name = @refs.newpluginName.getDOMNode().value.trim()\n        url  = @refs.newpluginUrl.getDOMNode().value.trim()\n        PluginUtils.loadJS url, =>\n            PluginUtils.activate name\n            settings = @state.settings\n            settings.plugins[name] =\n                name: name\n                active: true\n                url: url\n            @setState({settings: settings})\n            SettingsActionCreator.edit settings\n\n    pluginDel: (event) ->\n        event.preventDefault()\n        target = event.currentTarget\n        pluginName = target.dataset.plugin\n        settings = @state.settings\n        PluginUtils.deactivate pluginName\n        delete settings.plugins[pluginName]\n        @setState({settings: settings})\n        SettingsActionCreator.edit settings\n\n    pluginHelp: (event) ->\n        event.preventDefault()\n        target = event.currentTarget\n        pluginName = target.dataset.plugin\n        window.plugins[pluginName].onHelp()\n\n    getInitialState: (forceDefault) ->\n        settings = @props.settings.toObject()\n        return {\n            settings: @props.settings.toObject()\n        }\n","{div} = React.DOM\n\nmodule.exports = ThinProgress = React.createClass\n    displayName: 'ThinProgress'\n\n    render: ->\n        percent = 100 * (@props.done / @props.total) + '%'\n        div className: \"progress progress-thin\",\n            div\n                className: 'progress-bar',\n                style: width: percent\n","{a, h4,  pre, div, button, span, strong, i} = React.DOM\nSocketUtils     = require '../utils/socketio_utils'\nAppDispatcher   = require '../app_dispatcher'\nModal           = require './modal'\nStoreWatchMixin = require '../mixins/store_watch_mixin'\nLayoutStore      = require '../stores/layout_store'\nLayoutActionCreator = require '../actions/layout_action_creator'\n{ActionTypes} = require '../constants/app_constants'\n{CSSTransitionGroup} = React.addons\n\nclasser = React.addons.classSet\n\nmodule.exports = Toast = React.createClass\n    displayName: 'Toast'\n\n    getInitialState: ->\n        return modalErrors: false\n\n    closeModal: ->\n        @setState modalErrors: false\n\n    showModal: (errors) ->\n        @setState modalErrors: errors\n\n    acknowledge: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RECEIVE_TASK_DELETE\n            value: @props.toast.get('id')\n\n    renderModal: ->\n        title       = t 'modal please contribute'\n        subtitle    = t 'modal please report'\n        modalErrors = @state.modalErrors\n        closeModal  = @closeModal\n        closeLabel  = t 'app alert close'\n        content = React.DOM.pre\n            style: \"max-height\": \"300px\",\n            \"word-wrap\": \"normal\",\n                @state.modalErrors.join \"\\n\\n\"\n        Modal {title, subtitle, content, closeModal, closeLabel}\n\n    render: ->\n        toast = @props.toast.toJS()\n        hasErrors = toast.errors? and toast.errors.length\n        classes = classer\n            toast: true\n            'alert-dismissible': toast.finished\n            'alert-info': not hasErrors\n            'alert-warning': hasErrors\n        if toast.done? and toast.total?\n            percent = parseInt(100 * toast.done / toast.total) + '%'\n        if hasErrors\n            showModal = @showModal.bind(this, toast.errors)\n\n        div className: classes, role: \"alert\", key: @props.key,\n            if @state.modalErrors\n                @renderModal()\n\n            if percent?\n                div className: \"progress\",\n                    div\n                        className: 'progress-bar',\n                        style: width: percent\n                    div\n                        className: 'progress-bar-label start',\n                        style: width: percent,\n                        \"#{t \"task \" + toast.code, toast} : #{percent}\"\n                    div\n                        className: 'progress-bar-label end',\n                        \"#{t \"task \" + toast.code, toast} : #{percent}\"\n\n            if toast.message\n                div className: \"message\", toast.message\n\n            if toast.finished\n                button\n                    type: \"button\",\n                    className: \"close\",\n                    onClick: @acknowledge,\n                        span 'aria-hidden': \"true\", \"×\"\n                        span className: \"sr-only\", t \"app alert close\"\n\n            if toast.actions?\n                div className: 'toast-actions',\n                    toast.actions.map (action, id) ->\n                        button\n                            className: \"btn btn-default btn-xs\",\n                            type: \"button\",\n                            key: id\n                            onClick: action.onClick,\n                            action.label\n\n            if hasErrors\n                div className: 'toast-actions',\n                    a onClick: showModal,\n                        t 'there were errors', smart_count: toast.errors.length\n\n\nmodule.exports.Container = ToastContainer =  React.createClass\n    displayName: 'ToastContainer'\n\n    mixins: [\n        StoreWatchMixin [LayoutStore]\n    ]\n\n    getStateFromStores: ->\n        return {\n            toasts: LayoutStore.getToasts()\n            hidden: not LayoutStore.isShown()\n        }\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    render: ->\n        toasts = @state.toasts.map (toast, id) ->\n            Toast {toast, key: id}\n        .toVector().toJS()\n\n        classes = classer\n            'toasts-container': true\n            'action-hidden': @state.hidden\n            'has-toasts': toasts.length isnt 0\n\n        div className: classes,\n            CSSTransitionGroup transitionName: \"toast\",\n                toasts\n            div className: 'alert alert-success toast toasts-actions',\n                span\n                    className: \"toast-action hide-action\",\n                    title: t 'toast hide'\n                    onClick: @toggleHidden,\n                        i className: 'fa fa-eye-slash'\n                span\n                    className: \"toast-action show-action\",\n                    title: t 'toast show'\n                    onClick: @toggleHidden,\n                        i className: 'fa fa-eye'\n                span\n                    className: \"toast-action close-action\",\n                    title: t 'toast close all'\n                    onClick: @closeAll,\n                        i className: 'fa fa-times'\n\n    toggleHidden: ->\n        if @state.hidden\n            LayoutActionCreator.toastsShow()\n        else\n            LayoutActionCreator.toastsHide()\n\n    closeAll: ->\n        LayoutActionCreator.clearToasts()\n\n    _clearToasts: ->\n        setTimeout ->\n            Array.prototype.forEach.call document.querySelectorAll('.toast-enter'), (e) ->\n                e.classList.add 'hidden'\n        , 10000\n\n    componentDidMount: ->\n        @_clearToasts()\n\n    componentDidUpdate: ->\n        @_clearToasts()\n","{div, ul, li, span, i, p, a, button} = React.DOM\n{MessageFlags, FlagsConstants} = require '../constants/app_constants'\n\nmodule.exports = ToolboxActions = React.createClass\n    displayName: 'ToolboxActions'\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n               not(_.isEqual(nextProps, @props))\n\n    render: ->\n        direction = if @props.direction is 'right' then 'right' else 'left'\n        div className: 'menu-action btn-group btn-group-sm',\n            button\n                className: 'btn btn-default dropdown-toggle more',\n                type: 'button',\n                'data-toggle': 'dropdown',\n                t 'mail action more',\n                    span className: 'caret'\n            ul className: 'dropdown-menu dropdown-menu-' + direction, role: 'menu',\n                li\n                    role: 'presentation',\n                    t 'mail action mark'\n                if (not @props.isSeen?) or @props.isSeen is true\n                    li null,\n                        a\n                            role: 'menuitem',\n                            onClick: @props.onMark,\n                            'data-value': FlagsConstants.SEEN,\n                            t 'mail mark read'\n                if (not @props.isSeen?) or @props.isSeen is false\n                    li null,\n                        a role: 'menuitem',\n                        onClick: @props.onMark,\n                        'data-value': FlagsConstants.UNSEEN,\n                        t 'mail mark unread'\n                if (not @props.isFlagged?) or @props.isFlagged is true\n                    li null,\n                        a\n                            role: 'menuitem',\n                            onClick: @props.onMark,\n                            'data-value': FlagsConstants.FLAGGED,\n                            t 'mail mark fav'\n                if (not @props.isFlagged?) or @props.isFlagged is false\n                    li null,\n                        a\n                            role: 'menuitem',\n                            onClick: @props.onMark,\n                            'data-value': FlagsConstants.NOFLAG,\n                            t 'mail mark nofav'\n                li role: 'presentation', className: 'divider'\n                if @props.messageID?\n                    li role: 'presentation',\n                        a\n                            onClick: @props.onHeaders,\n                            'data-message-id': @props.messageID,\n                            t 'mail action headers'\n                if @props.message?\n                    li role: 'presentation',\n                        a\n                            href: \"raw/#{@props.message.get('id')}\"\n                            target: '_blank'\n                            t 'mail action raw'\n                li role: 'presentation',\n                    a\n                        onClick: @props.onConversation,\n                        'data-action' : 'delete',\n                        t 'mail action conversation delete'\n                li role: 'presentation',\n                    a\n                        onClick: @props.onConversation,\n                        'data-action' : 'seen',\n                        t 'mail action conversation seen'\n                li role: 'presentation',\n                    a\n                        onClick: @props.onConversation,\n                        'data-action' : 'unseen',\n                        t 'mail action conversation unseen'\n                li role: 'presentation', className: 'divider'\n                li\n                    role: 'presentation',\n                    t 'mail action conversation move'\n                for key, mailbox of @props.mailboxes when key isnt @props.selectedMailboxID\n                    @renderMailboxes mailbox, key\n\n    renderMailboxes: (mailbox, key) ->\n        pusher = \"\"\n        pusher += \"--\" for j in [1..mailbox.depth] by 1\n        li role: 'presentation', key: key,\n            a\n                role: 'menuitem',\n                onClick: @props.onMove,\n                'data-value': key,\n                'data-conversation': true,\n                \"#{pusher}#{mailbox.label}\"\n\n","{div, ul, li, span, i, p, a, button} = React.DOM\nmodule.exports = ToolboxMove = React.createClass\n    displayName: 'ToolboxMove'\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or\n               not(_.isEqual(nextProps, @props))\n\n    render: ->\n        direction = if @props.direction is 'right' then 'right' else 'left'\n        div className: 'menu-move btn-group btn-group-sm',\n            button\n                className: 'btn btn-default dropdown-toggle move',\n                type: 'button',\n                'data-toggle': 'dropdown',\n                t 'mail action move',\n                    span className: 'caret'\n            ul\n                className: 'dropdown-menu dropdown-menu-' + direction,\n                role: 'menu',\n                    for key, mailbox of @props.mailboxes when key isnt @props.selectedMailboxID\n                        @renderMailboxes mailbox, key\n\n    renderMailboxes: (mailbox, key) ->\n        pusher = \"\"\n        pusher += \"--\" for j in [1..mailbox.depth] by 1\n        li role: 'presentation', key: key,\n            a\n                role: 'menuitem',\n                onClick: @props.onMove,\n                'data-value': key,\n                \"#{pusher}#{mailbox.label}\"\n\n","# React components\n{body, div, p, form, i, input, span, a, button, strong} = React.DOM\nMailboxList   = require './mailbox-list'\nSearchForm = require './search-form'\n\n# mixins & action creator\nRouterMixin = require '../mixins/router_mixin'\nLayoutActionCreator = require '../actions/layout_action_creator'\n\n# React addons\nReactCSSTransitionGroup = React.addons.CSSTransitionGroup\n\nmodule.exports = Topbar = React.createClass\n    displayName: 'Topbar'\n\n    mixins: [RouterMixin]\n\n    refresh: (event) ->\n        event.preventDefault()\n        LayoutActionCreator.refreshMessages()\n\n    shouldComponentUpdate: (nextProps, nextState) ->\n        return not(_.isEqual(nextState, @state)) or not (_.isEqual(nextProps, @props))\n\n    render: ->\n\n        {layout, selectedAccount, selectedMailboxID, mailboxes, searchQuery} = @props\n\n        responsiveBackUrl = @buildUrl\n            firstPanel: layout.firstPanel\n            fullWidth: true\n\n        getUrl = (mailbox) =>\n            @buildUrl\n                direction: 'first'\n                action: 'account.mailbox.messages'\n                parameters: [selectedAccount?.get('id'), mailbox.id]\n\n        if selectedAccount and layout.firstPanel.action isnt 'account.new'\n            # the button toggles the mailbox config\n            if layout.firstPanel.action is 'account.config'\n                configMailboxUrl = @buildUrl\n                    direction: 'first'\n                    action: 'account.mailbox.messages'\n                    parameters: selectedAccount.get 'id'\n                    fullWidth: true\n            else\n                configMailboxUrl = @buildUrl\n                    direction: 'first'\n                    action: 'account.config'\n                    parameters: [\n                        selectedAccount.get 'id'\n                        'account'\n                    ]\n                    fullWidth: true\n\n\n        div id: 'quick-actions', className: 'row',\n            # responsive menu icon\n            if layout.secondPanel\n                a href: responsiveBackUrl, className: 'responsive-handler hidden-md hidden-lg',\n                    i className: 'fa fa-chevron-left hidden-md hidden-lg pull-left'\n                    t \"app back\"\n\n            if layout.firstPanel.action is 'account.mailbox.messages' or\n               layout.firstPanel.action is 'account.mailbox.messages'\n                div className: 'col-md-6 hidden-xs hidden-sm pull-left',\n                    form className: 'form-inline col-md-12',\n                        MailboxList\n                            getUrl: getUrl\n                            mailboxes: mailboxes\n                            selectedMailboxID: selectedMailboxID\n                        SearchForm query: searchQuery\n\n            if layout.firstPanel.action is 'account.mailbox.messages' or\n               layout.firstPanel.action is 'account.mailbox.messages'\n                div id: 'contextual-actions', className: 'col-md-6 hidden-xs hidden-sm pull-left text-right',\n                    a onClick: @refresh, className: 'btn btn-cozy-contrast',\n                        i className: 'fa fa-refresh'\n                    ReactCSSTransitionGroup transitionName: 'fade',\n                        if configMailboxUrl\n                            a href: configMailboxUrl, className: 'btn btn-cozy mailbox-config',\n                                i className: 'fa fa-cog'\n","module.exports =\n\n    ActionTypes:\n        # Account\n        'ADD_ACCOUNT'               : 'ADD_ACCOUNT'\n        'REMOVE_ACCOUNT'            : 'REMOVE_ACCOUNT'\n        'EDIT_ACCOUNT'              : 'EDIT_ACCOUNT'\n        'SELECT_ACCOUNT'            : 'SELECT_ACCOUNT'\n        'NEW_ACCOUNT_WAITING'       : 'NEW_ACCOUNT_WAITING'\n        'NEW_ACCOUNT_ERROR'         : 'NEW_ACCOUNT_ERROR'\n\n        # Mailbox\n        'MAILBOX_ADD'               : 'MAILBOX_ADD'\n        'MAILBOX_CREATE'            : 'MAILBOX_CREATE'\n        'MAILBOX_UPDATE'            : 'MAILBOX_UPDATE'\n        'MAILBOX_DELETE'            : 'MAILBOX_DELETE'\n        'MAILBOX_EXPUNGE'           : 'MAILBOX_EXPUNGE'\n\n        # Message\n        'RECEIVE_RAW_MESSAGE'       : 'RECEIVE_RAW_MESSAGE'\n        'RECEIVE_RAW_MESSAGES'      : 'RECEIVE_RAW_MESSAGES'\n        'MESSAGE_SEND'              : 'MESSAGE_SEND'\n        'MESSAGE_DELETE'            : 'MESSAGE_DELETE'\n        'MESSAGE_BOXES'             : 'MESSAGE_BOXES'\n        'MESSAGE_FLAG'              : 'MESSAGE_FLAG'\n        'MESSAGE_ACTION'            : 'MESSAGE_ACTION'\n        'CONVERSATION_ACTION'       : 'CONVERSATION_ACTION'\n        'MESSAGE_CURRENT'           : 'MESSAGE_CURRENT'\n        'RECEIVE_MESSAGE_DELETE'    : 'RECEIVE_MESSAGE_DELETE'\n        'RECEIVE_MAILBOX_UPDATE'    : 'RECEIVE_MAILBOX_UPDATE'\n        'SET_FETCHING'              : 'SET_FETCHING'\n\n        # Search\n        'SET_SEARCH_QUERY'          : 'SET_SEARCH_QUERY'\n        'RECEIVE_RAW_SEARCH_RESULTS': 'RECEIVE_RAW_SEARCH_RESULTS'\n        'CLEAR_SEARCH_RESULTS'      : 'CLEAR_SEARCH_RESULTS'\n\n        # Contacts\n        'SET_CONTACT_QUERY'          : 'SET_CONTACT_QUERY'\n        'RECEIVE_RAW_CONTACT_RESULTS': 'RECEIVE_RAW_CONTACT_RESULTS'\n        'CLEAR_CONTACT_RESULTS'      : 'CLEAR_CONTACT_RESULTS'\n        'CONTACT_LOCAL_SEARCH'       : 'CONTACT_LOCAL_SEARCH'\n\n        # Layout\n        'SET_DISPOSITION'           : 'SET_DISPOSITION'\n        'DISPLAY_ALERT'             : 'DISPLAY_ALERT'\n        'HIDE_ALERT'                : 'HIDE_ALERT'\n        'REFRESH'                   : 'REFRESH'\n\n        # Mailbox\n        'RECEIVE_RAW_MAILBOXES'     : 'RECEIVE_RAW_MAILBOXES'\n\n        # Settings\n        'SETTINGS_UPDATED'          : 'SETTINGS_UPDATED'\n\n        # Tasks\n        'RECEIVE_TASK_UPDATE'       : 'RECEIVE_TASK_UPDATE'\n        'RECEIVE_TASK_DELETE'       : 'RECEIVE_TASK_DELETE'\n        'CLEAR_TOASTS'              : 'CLEAR_TOASTS'\n\n        # Refreshes\n        'RECEIVE_REFRESH_UPDATE'       : 'RECEIVE_REFRESH_UPDATE'\n        'RECEIVE_REFRESH_STATUS'       : 'RECEIVE_REFRESH_STATUS'\n        'RECEIVE_REFRESH_DELETE'       : 'RECEIVE_REFRESH_DELETE'\n\n        # List\n        'LIST_FILTER'               : 'LIST_FILTER'\n        'LIST_QUICK_FILTER'         : 'LIST_QUICK_FILTER'\n        'LIST_SORT'                 : 'LIST_SORT'\n\n        # Toasts\n        'TOASTS_SHOW'               : 'TOASTS_SHOW'\n        'TOASTS_HIDE'               : 'TOASTS_HIDE'\n\n    PayloadSources:\n        'VIEW_ACTION'   : 'VIEW_ACTION'\n        'SERVER_ACTION' : 'SERVER_ACTION'\n\n    ComposeActions:\n        'REPLY'         : 'REPLY'\n        'REPLY_ALL'     : 'REPLY_ALL'\n        'FORWARD'       : 'FORWARD'\n\n    AlertLevel:\n        'SUCCESS'      : 'SUCCESS'\n        'INFO'         : 'INFO'\n        'WARNING'      : 'WARNING'\n        'ERROR'        : 'ERROR'\n\n    MessageFlags:\n        'FLAGGED'      : '\\\\Flagged'\n        'SEEN'         : '\\\\Seen'\n        'DRAFT'        : '\\\\Draft'\n\n    MessageFilter:\n        'ALL'          : 'all'\n        'ATTACH'       : 'attach'\n        'FLAGGED'      : 'flagged'\n        'UNSEEN'       : 'unseen'\n\n    MailboxFlags:\n        'DRAFT'   :  '\\\\Drafts'\n        'SENT'    :  '\\\\Sent'\n        'TRASH'   :  '\\\\Trash'\n        'ALL'     :  '\\\\All'\n        'SPAM'    :  '\\\\Junk'\n        'FLAGGED' :  '\\\\Flagged'\n\n    FlagsConstants:\n        SEEN   : '\\\\Seen'\n        UNSEEN : 'Unseen'\n        FLAGGED: '\\\\Flagged'\n        NOFLAG : 'Noflag'\n\n    Dispositions:\n        HORIZONTAL: 'horizontal'\n        VERTICAL: 'vertical'\n        THREE: 'three'\n\n    SpecialBoxIcons:\n        inboxMailbox: 'fa-inbox'\n        draftMailbox: 'fa-edit'\n        sentMailbox: 'fa-share-square-o'\n        trashMailbox: 'fa-trash-o'\n        junkMailbox: 'fa-exclamation'\n        allMailbox: 'fa-archive'\n","# Waits for the DOM to be ready\n# Send client side errors to server\nwindow.onerror = (msg, url, line, col, error) ->\n    console.error msg, url, line, col, error\n    exception = error?.toString() or msg\n    if exception isnt window.lastError\n        data =\n            data:\n                type: 'error'\n                error:\n                    msg: msg\n                    full: exception\n                    stack: error?.stack\n                url: url\n                line: line\n                col: col\n                href: window.location.href\n        xhr = new XMLHttpRequest()\n        xhr.open 'POST', 'activity', true\n        xhr.setRequestHeader \"Content-Type\", \"application/json;charset=UTF-8\"\n        xhr.send JSON.stringify(data)\n        window.lastError = exception\n\nwindow.onload = ->\n\n    try\n        window.__DEV__ = window.location.hostname is 'localhost'\n\n        # expose an APi for performance\n        # performance is not defined in phantomJS\n        referencePoint = 0\n        window.start = ->\n            referencePoint = performance.now() if performance?.now?\n            React.addons.Perf.start()\n        window.stop = ->\n            console.log performance.now() - referencePoint if performance?.now?\n            React.addons.Perf.stop()\n        window.printWasted = ->\n            stop()\n            React.addons.Perf.printWasted()\n        window.printInclusive = ->\n            stop()\n            React.addons.Perf.printInclusive()\n        window.printExclusive = ->\n            stop()\n            React.addons.Perf.printExclusive()\n\n        # expose an API\n        window.cozyMails = require './utils/api_utils'\n\n        # use Cozy instance locale or navigator language or \"en\" by default\n        if not window.settings?\n            window.settings = {}\n        locale =\n            #window.settings.lang or\n            window.locale or\n            window.navigator.language or\n            \"en\"\n\n        window.cozyMails.setLocale locale\n        LayoutActionCreator = require './actions/layout_action_creator/'\n        LayoutActionCreator.setDisposition window.settings.layoutStyle\n\n        # init plugins\n        PluginUtils = require \"./utils/plugin_utils\"\n        if not window.settings.plugins?\n            window.settings.plugins = {}\n        PluginUtils.merge window.settings.plugins\n        PluginUtils.init()\n\n        window.cozyMails.setSetting 'plugins', window.settings.plugins\n\n        # Flux initialization (must be called at the begining)\n        AccountStore  = require './stores/account_store'\n        ContactStore  = require './stores/contact_store'\n        LayoutStore   = require './stores/layout_store'\n        MessageStore  = require './stores/message_store'\n        SearchStore   = require './stores/search_store'\n        SettingsStore = require './stores/settings_store'\n\n        # Routing management\n        Router = require './router'\n        @router = new Router()\n        window.router = @router\n\n        # Binds the router and flux to the React application\n        Application = require './components/application'\n        application = Application router: @router\n        window.rootComponent = React.renderComponent application, document.body\n\n        # Starts the application by initializing the router\n        Backbone.history.start()\n\n        # begin realtime\n        require './utils/socketio_utils'\n\n        # Desktop notifications\n        if window.settings.desktopNotifications and window.Notification?\n            Notification.requestPermission (status) ->\n                # This allows to use Notification.permission with Chrome/Safari\n                if Notification.permission isnt status\n                    Notification.permission = status\n\n    catch e\n        console.error e\n        exception = e.toString()\n        if exception isnt window.lastError\n            # Send client side errors to server\n            data =\n                data:\n                    type: 'error'\n                    exception: exception\n            xhr = new XMLHttpRequest()\n            xhr.open 'POST', 'activity', true\n            xhr.setRequestHeader \"Content-Type\", \"application/json;charset=UTF-8\"\n            xhr.send JSON.stringify(data)\n            window.lastError = exception\n","###\n\n    -- Coffee port of Facebook's flux dispatcher. It was in ES6 and I haven't\n    been successful in adding a transpiler. --\n\n    Copyright (c) 2014, Facebook, Inc.\n    All rights reserved.\n\n    This source code is licensed under the BSD-style license found in the\n    LICENSE file in the root directory of this source tree. An additional grant\n    of patent rights can be found in the PATENTS file in the same directory.\n ###\n\ninvariant = require '../invariant'\n\n_lastID = 1\n_prefix = 'ID_'\n\nmodule.exports = Dispatcher = class Dispatcher\n    constructor: ->\n        this._callbacks = {}\n        this._isPending = {}\n        this._isHandled = {}\n        this._isDispatching = false\n        this._pendingPayload = null\n\n    ###\n        Registers a callback to be invoked with every dispatched payload.\n        Returns a token that can be used with `waitFor()`.\n\n        @param {function} callback\n        @return {string}\n    ###\n    register: (callback) ->\n        id = _prefix + _lastID++\n        this._callbacks[id] = callback\n        return id\n\n    ###\n        Removes a callback based on its token.\n\n        @param {string} id\n    ###\n    unregister: (id) ->\n        message = 'Dispatcher.unregister(...): `%s` does not map to a ' + \\\n                  'registered callback.'\n        invariant(\n            this._callbacks[id],\n            message,\n            id\n        )\n        delete this._callbacks[id]\n\n    ###\n        Waits for the callbacks specified to be invoked before continuing\n        execution of the current callback. This method should only be used by a\n        callback in response to a dispatched payload.\n\n        @param {array<string>} ids\n    ###\n    waitFor: (ids) ->\n        invariant(\n            this._isDispatching,\n            'Dispatcher.waitFor(...): Must be invoked while dispatching.'\n        )\n        message = 'Dispatcher.waitFor(...): Circular dependency detected ' + \\\n                  'while waiting for `%s`.'\n        message2 = 'Dispatcher.waitFor(...): `%s` does not map to a ' + \\\n                   'registered callback.'\n        for ii in [0..ids.length - 1] by 1\n            id = ids[ii]\n            if this._isPending[id]\n                invariant(\n                    this._isHandled[id],\n                    message,\n                    id\n                )\n                continue\n\n            invariant(\n                this._callbacks[id],\n                message2,\n                id\n            )\n            this._invokeCallback id\n\n    ###\n        Dispatches a payload to all registered callbacks.\n\n        @param {object} payload\n    ###\n    dispatch: (payload) ->\n        message = 'Dispatch.dispatch(...): Cannot dispatch in the middle ' + \\\n                  'of a dispatch.'\n        invariant(\n            not this._isDispatching,\n            message\n        )\n        this._startDispatching(payload)\n        try\n            for id of this._callbacks\n                if this._isPending[id]\n                    continue\n                this._invokeCallback id\n        finally\n            this._stopDispatching()\n\n    ###\n        Is this Dispatcher currently dispatching.\n\n        @return {boolean}\n    ###\n    isDispatching: -> return this._isDispatching\n\n    ###\n        Call the callback stored with the given id. Also do some internal\n        bookkeeping.\n\n        @param {string} id\n        @internal\n    ###\n    _invokeCallback: (id) ->\n        this._isPending[id] = true\n        this._callbacks[id](this._pendingPayload)\n        this._isHandled[id] = true\n\n    ###\n        Set up bookkeeping needed when dispatching.\n\n        @param {object} payload\n        @internal\n    ###\n    _startDispatching: (payload) ->\n        for id of this._callbacks\n            this._isPending[id] = false\n            this._isHandled[id] = false\n\n        this._pendingPayload = payload\n        this._isDispatching = true\n\n    ###\n        Clear bookkeeping used for dispatching.\n\n        @internal\n    ###\n    _stopDispatching: ->\n        this._pendingPayload = null\n        this._isDispatching = false\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n\"use strict\";\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (__DEV__) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;","AppDispatcher = require '../../../app_dispatcher'\n\n\nmodule.exports = class Store extends EventEmitter\n\n    uniqID: null\n\n    # this variable will be shared with all subclasses so we store the items\n    # by subclass we don't use `@constructor.name` because it breaks when\n    # mangled\n    _nextUniqID = 0\n    _handlers = {}\n    _addHandlers = (type, callback) ->\n\n        _handlers[@uniqID] = {} unless _handlers[@uniqID]?\n        _handlers[@uniqID][type] = callback\n\n    # Registers the store's callbacks to the dispatcher\n    _processBinding = ->\n        @dispatchToken = AppDispatcher.register (payload) =>\n            {type, value} = payload.action\n            if (callback = _handlers[@uniqID][type])?\n                callback.call @, value\n\n\n    constructor: ->\n        super()\n        # set a uniq ID\n        @uniqID = _nextUniqID++\n        @__bindHandlers _addHandlers.bind @\n        _processBinding.call @\n\n    # Must be overriden by each store\n    __bindHandlers: (handle) ->\n        if __DEV__\n            message = \"The store #{@constructor.name} must define a \" + \\\n                      \"`__bindHandlers` method\"\n            throw new Error message\n\n","AppDispatcher = require '../../../app_dispatcher'\n\n\nmodule.exports = class Store extends EventEmitter\n\n    uniqID: null\n\n    # this variable will be shared with all subclasses so we store the items\n    # by subclass we don't use `@constructor.name` because it breaks when\n    # mangled\n    _nextUniqID = 0\n    _handlers = {}\n    _addHandlers = (type, callback) ->\n\n        _handlers[@uniqID] = {} unless _handlers[@uniqID]?\n        _handlers[@uniqID][type] = callback\n\n    # Registers the store's callbacks to the dispatcher\n    _processBinding = ->\n        @dispatchToken = AppDispatcher.register (payload) =>\n            {type, value} = payload.action\n            if (callback = _handlers[@uniqID][type])?\n                callback.call @, value\n\n\n    constructor: ->\n        super()\n        # set a uniq ID\n        @uniqID = _nextUniqID++\n        @__bindHandlers _addHandlers.bind @\n        _processBinding.call @\n\n    # Must be overriden by each store\n    __bindHandlers: (handle) ->\n        if __DEV__\n            message = \"The store #{@constructor.name} must define a \" + \\\n                      \"`__bindHandlers` method\"\n            throw new Error message\n\n","###\n    Routing component. We let Backbone handling browser stuff\n    and we format the varying parts of the layout.\n\n    URLs are built in the following way:\n        - a first part that represents the first panel\n        - a second part that represents the second panel\n        - if there is just one part, it represents a full width panel\n\n    Since Backbone.Router only handles one part, routes initialization mechanism\n    is overriden so we can post-process the second part of the URL.\n\n    Example: a defined pattern will generates two routes.\n        - `mailbox/a/path/:id`\n        - `mailbox/a/path/:id/*secondPanel`\n\n        Each pattern is actually the pattern itself plus the pattern itself and\n        another pattern.\n###\n\nLayoutActionCreator = require '../actions/layout_action_creator'\n\nmodule.exports = class Router extends Backbone.Router\n\n    patterns: {}\n\n    # default route\n    routes: {}\n\n    previous: null\n    current: null\n\n    # we store a regexified version of each patterns\n    cachedPatterns: []\n\n    initialize: (options) ->\n\n        # defines the routes from the patterns\n        for key, route of @patterns\n\n            # caches each regex' pattern to avoid to recalculate them each time\n            @cachedPatterns.push\n                key: key\n                pattern: @_routeToRegExp route.pattern\n\n            # each pattern has two routes: full-width or with a second panel\n            @routes[route.pattern] = key\n            @routes[\"#{route.pattern}/*secondPanel\"] = key\n\n        # Backbone's magic\n        @_bindRoutes()\n\n        # Updates the LayoutStore for each matched request\n        @on 'route', (name, args) =>\n\n            if name is 'default'\n                name = LayoutActionCreator.getDefaultRoute()\n                args = [null]\n\n            [firstPanelInfo, secondPanelInfo] = @_processSubRouting name, args\n\n            firstAction = @fluxActionFactory firstPanelInfo\n            secondAction = @fluxActionFactory secondPanelInfo\n\n            @previous = @current\n            @current = firstPanel: firstPanelInfo, secondPanel: secondPanelInfo\n\n            if firstAction?\n                firstAction firstPanelInfo, 'first'\n\n            if secondAction?\n                secondAction secondPanelInfo, 'second'\n            @trigger 'fluxRoute', @current\n\n\n    ###\n        Gets the Flux action to execute given a panel info.\n    ###\n    fluxActionFactory: (panelInfo) ->\n\n        fluxAction = null\n        pattern = @patterns[panelInfo?.action]\n\n        if pattern?\n            fluxAction = LayoutActionCreator[pattern.fluxAction]\n\n            if not fluxAction?\n                console.warn \"`#{pattern.fluxAction}` method not found in \" + \\\n                             \"layout actions.\"\n\n            return fluxAction\n\n\n    ###\n        Extracts and matches the second part of the URl if it exists.\n    ###\n    _processSubRouting: (name, args) ->\n        # removes the last argument which is always `null`, not sure why\n        args.pop()\n\n        # next comes the secondPanel url if it exists\n        # or a firstPanel parameter if there is not secondPanel\n        secondPanelString = args.pop()\n\n        # if first panel number of expected params is bigger what is first\n        # it means there are no second panel and that what we got before was a\n        # parameter of the first panel\n        params = @patterns[name].pattern.match(/:[\\w]+/g) or []\n        if params.length > args.length and secondPanelString?\n            args.push secondPanelString\n            secondPanelString = null\n\n        firstPanelParameters = @_arrayToNamedParameters name, args\n\n        # checks all the routes for the second part of the URL\n        route = _.first _.filter @cachedPatterns, (element) ->\n            return element.pattern.test secondPanelString\n\n        # if a route has been found, we retrieve the params' value and format it\n        if route?\n            args = @_extractParameters route.pattern, secondPanelString\n            # remove the last argument which is alway `null`, not sure why\n            args.pop()\n\n            # normalizes the secondPanelInfo and adds default parameters if\n            # needed\n            secondPanelInfo = @_mergeDefaultParameter\n                action: route.key\n                parameters: @_arrayToNamedParameters route.key, args\n        else\n            secondPanelInfo = null\n\n        # normalizes the firstPanelInfo and adds default parameters, if needed\n        firstPanelInfo = @_mergeDefaultParameter\n            action: name\n            parameters: firstPanelParameters\n\n        return [firstPanelInfo, secondPanelInfo]\n\n\n    ###\n        Turns a parameters array into an object of named parameters\n    ###\n    _arrayToNamedParameters: (patternName, parametersArray) ->\n\n        namedParameters = {}\n        parametersName = @patterns[patternName].pattern.match(/:[\\w]+/g) or []\n        for paramName, index in parametersName\n            # Removes the initial \":\"\n            unPrefixedParamName = paramName.substr 1\n            namedParameters[unPrefixedParamName] = parametersArray[index]\n\n        return namedParameters\n\n\n    ###\n        Turns a parameters array into an object of named parameters\n    ###\n    _namedParametersToArray: (patternName, namedParameters) ->\n        parametersArray = []\n        parametersName = @patterns[patternName].pattern.match(/:[\\w]+/g) or []\n        for paramName, index in parametersName\n            # Removes the initial \":\"\n            unPrefixedParamName = paramName.substr 1\n            parametersArray.push namedParameters[paramName]\n\n        return parametersArray\n\n\n    ###\n        Builds a route from panel information.\n        Two modes:\n            - options has firstPanel and/or secondPanel attributes with the\n              panel(s) information.\n            - options has the panel information along a `direction` attribute\n              that can be `first` or `second`. It's the short version.\n    ###\n    buildUrl: (options) ->\n        # Loads the panel from the options or the current router status to keep\n        # track of current URLs\n        if options.firstPanel? or options.secondPanel?\n            firstPanelInfo = options.firstPanel or @current.firstPanel\n            secondPanelInfo = options.secondPanel or @current.secondPanel\n        else\n            # Handles short version\n            if options.direction?\n                if options.direction is 'first'\n                    firstPanelInfo = options\n                    secondPanelInfo = @current.secondPanel\n                else if options.direction is 'second'\n                    firstPanelInfo = @current.firstPanel\n                    secondPanelInfo = options\n                else\n                    console.warn '`direction` should be `first`, `second`.'\n            else\n                console.warn '`direction` parameter is mandatory when ' + \\\n                             'using short call.'\n\n        # if the `fullWidth` parameter is set, it ignores the second panel info\n        isFirstDirection = options.firstPanel? or options.direction is 'first'\n        if isFirstDirection and options.fullWidth\n            if options.secondPanel? and options.direction is 'second'\n                console.warn \"You shouldn't use the fullWidth option with \" + \\\n                             \"a second panel\"\n            secondPanelInfo = null\n\n        # Actual building\n        firstPart = @_getURLFromRoute firstPanelInfo\n        secondPart = @_getURLFromRoute secondPanelInfo\n\n        url = \"##{firstPart}\"\n        if secondPart? and secondPart.length > 0\n            url = \"#{url}/#{secondPart}\"\n\n        return url\n\n\n    ###\n        Closes a panel given a direction. If a full-width panel is closed,\n        the URL points to the default route.\n    ###\n    buildClosePanelUrl: (direction) ->\n\n        # If a first panel is closed, the second panel becomes full-width.\n        # If a full-width panel is closed, `@current.secondPanel` is null and\n        # the default route is loaded.\n        if direction is 'first' or direction is 'full'\n            panelInfo = _.clone @current.secondPanel\n        else\n            panelInfo = _.clone @current.firstPanel\n\n        if panelInfo?\n            panelInfo.direction = 'first'\n            panelInfo.fullWidth = true\n            return @buildUrl panelInfo\n        else\n            return '#' # loads the default route\n\n\n    # Builds the URL string from a route.\n    _getURLFromRoute: (panel) ->\n\n        # Clones the parameter because we are going to mutate it\n        panel = _.clone panel\n        if panel?.parameters?\n            # _.clone doesn't perform a deep copy\n            panel.parameters = _.clone panel.parameters\n\n        if panel?\n            pattern = @patterns[panel.action].pattern\n\n            # if the parameter is alone, we turn it into an array\n            if panel.parameters? and not (panel.parameters instanceof Array) \\\n            and not (panel.parameters instanceof Object)\n                panel.parameters = [panel.parameters]\n\n            # to ensures BC, if it's an array, we turn it into an object of\n            # named parameters\n            if panel.parameters? and panel.parameters instanceof Array\n                {action, parameters} = panel\n                panel.parameters = @_arrayToNamedParameters action, parameters\n\n            panel = @_mergeDefaultParameter panel\n\n            # we default to empty array if there is no parameter in the route\n            parametersInPattern = pattern.match(/:[\\w]+/gi) or []\n\n            # the pattern is progressively filled with values\n            filledPattern = pattern\n            if panel.parameters\n                for paramInPattern in parametersInPattern\n                    key = paramInPattern.substr 1\n                    paramValue = panel.parameters[key]\n                    filledPattern = filledPattern.replace paramInPattern, \\\n                                                                    paramValue\n\n            return filledPattern\n        else\n            return ''\n\n\n    # Merges defaut parameters into a panel info if there are missing parameters\n    _mergeDefaultParameter: (panelInfo) ->\n        panelInfo = _.clone panelInfo\n        parameters = _.clone panelInfo.parameters or {}\n        # gets default values, if there are\n        if (defaultParameters = @_getDefaultParameters panelInfo.action)?\n\n            # merges the parameters in the relevant place\n            for key, defaultParameter of defaultParameters\n                if not parameters[key]?\n                    parameters[key] = defaultParameter\n\n        panelInfo.parameters = parameters\n\n        return panelInfo\n","module.exports =\n\n      # Application\n      \"app loading\"             : \"Loading…\"\n      \"app back\"                : \"Back\"\n      \"app cancel\"              : \"Cancel\"\n      \"app menu\"                : \"Menu\"\n      \"app search\"              : \"Search…\"\n      \"app alert close\"         : \"Close\"\n      \"app unimplemented\"       : \"Not implemented yet\"\n      \"app error\"               : \"Argh, I'm unable to perform this action,\n                                    please try again\"\n\n      # Compose window\n      \"compose\"                   : \"Compose new email\"\n      \"compose default\"           : 'Hello, how are you doing today?'\n      \"compose from\"              : \"From\"\n      \"compose to\"                : \"To\"\n      \"compose to help\"           : \"Recipients list\"\n      \"compose cc\"                : \"Cc\"\n      \"compose cc help\"           : \"Copy list\"\n      \"compose bcc\"               : \"Bcc\"\n      \"compose bcc help\"          : \"Hidden copy list\"\n      \"compose subject\"           : \"Subject\"\n      \"compose content\"           : \"Content\"\n      \"compose subject help\"      : \"Message subject\"\n      \"compose reply prefix\"      : \"Re: \"\n      \"compose reply separator\"   : \"\\n\\nOn %{date}, %{sender} wrote \\n\"\n      \"compose forward prefix\"    : \"Fwd: \"\n      \"compose forward separator\" : \"\\n\\nOn %{date}, %{sender} wrote \\n\"\n      \"compose action draft\"      : \"Save draft\"\n      \"compose action send\"       : \"Send\"\n      \"compose action delete\"     : \"Delete draft\"\n      \"compose action sending\"    : \"Sending\"\n      \"compose toggle cc\"         : \"Cc\"\n      \"compose toggle bcc\"        : \"Bcc\"\n      \"compose error no dest\"     : \"You can not send a message to nobody\"\n      \"compose error no subject\"  : \"Please set a subject\"\n      \"compose confirm keep draft\": \"Message not sent, keep the draft?\"\n      \"compose draft deleted\"     : \"Draft deleted\"\n\n      # Menu\n      \"menu show\"               : \"Show menu\"\n      \"menu compose\"            : \"Compose\"\n      \"menu account new\"        : \"New Mailbox\"\n      \"menu settings\"           : \"Parameters\"\n      \"menu mailbox total\"      : \"%{smart_count} message|||| %{smart_count} messages\"\n      \"menu mailbox unread\"     : \", %{smart_count} unread message ||||, %{smart_count} unread messages \"\n      \"menu mailbox new\"        : \" and %{smart_count} new message|||| and %{smart_count} new messages \"\n      \"menu favorites on\"       : \"Favorites\"\n      \"menu favorites off\"      : \"All\"\n      \"menu toggle\"             : \"Toggle Menu\"\n\n      # List\n      \"list empty\"              : \"No email in this box.\"\n      \"no flagged message\"      : \"No Important email in this box.\"\n      \"no unseen message\"       : \"All emails have been read in this box\"\n      \"no attach message\"       : \"No message with attachments\"\n      \"no filter message\"       : \"No email for this filter.\"\n      \"list fetching\"           : \"Loading…\"\n      \"list search empty\"       : \"No result found for the query \\\"%{query}\\\".\"\n      \"list count\"              : \"%{smart_count} message in this\n                                  box |||| %{smart_count} messages in this box\"\n      \"list search count\"       : \"%{smart_count} result found. ||||\n                                    %{smart_count} results found.\"\n      \"list filter\"               : \"Filter\"\n      \"list filter all\"           : \"All\"\n      \"list filter unseen\"        : \"Unseen\"\n      \"list filter unseen title\"  : \"Show only unread messages\"\n      \"list filter flagged\"       : \"Important\"\n      \"list filter flagged title\" : \"Show only Important messages\"\n      \"list filter attach\"        : \"Attachments\"\n      \"list filter attach title\"  : \"Show only messages with attachments\"\n      \"list sort\"                 : \"Sort\"\n      \"list sort date\"            : \"Date\"\n      \"list sort subject\"         : \"Subject\"\n      \"list option compact\"       : \"Compact\"\n      \"list next page\"            : \"More messages\"\n      \"list end\"                  : \"This is the end of the road\"\n      \"list mass no message\"      : \"No message selected\"\n      \"list delete confirm\"       : \"\"\"\n                                    Do you really want to delete this message ? ||||\n                                    Do you really want to delete %{smart_count} messages?\n                                    \"\"\"\n      \"list delete conv confirm\"  : \"\"\"\n                                    Do you really want to delete this conversation ? ||||\n                                    Do you really want to delete %{smart_count} conversation?\n                                    \"\"\"\n\n      # Mail\n      \"mail receivers\"          : \"To: \"\n      \"mail receivers cc\"       : \"Cc: \"\n      \"mail action reply\"       : \"Reply\"\n      \"mail action reply all\"   : \"Reply all\"\n      \"mail action forward\"     : \"Forward\"\n      \"mail action delete\"      : \"Delete\"\n      \"mail action mark\"        : \"Mark as…\"\n      \"mail action copy\"        : \"Copy…\"\n      \"mail action move\"        : \"Move…\"\n      \"mail action more\"        : \"More…\"\n      \"mail action headers\"     : \"Headers\"\n      \"mail action raw\"         : \"Raw message\"\n      \"mail mark spam\"          : \"Spam\"\n      \"mail mark nospam\"        : \"No spam\"\n      \"mail mark fav\"           : \"Important\"\n      \"mail mark nofav\"         : \"Not important\"\n      \"mail mark read\"          : \"Read\"\n      \"mail mark unread\"        : \"Unread\"\n      \"mail confirm delete\"     : \"Do you really want to delete message “%{subject}”?\"\n      \"mail confirm delete nosubject\" : \"Do you really want to delete this message?\"\n      \"mail action conversation delete\" : \"Delete conversation\"\n      \"mail action conversation move\"   : \"Move conversation\"\n      \"mail action conversation seen\"   : \"Mark conversation as read\"\n      \"mail action conversation unseen\" : \"Mark conversation as unread\"\n      \"mail conversation length\": \"\"\"\n            %{smart_count} message dans cette conversation. ||||\n            %{smart_count} messages dans cette conversation.\n      \"\"\"\n\n      # Account\n      \"account new\"                 : \"New account\"\n      \"account edit\"                : \"Edit account\"\n      \"account add\"                 : \"Add\"\n      \"account save\"                : \"Save\"\n      \"account saving\"              : \"Saving\"\n      \"account check\"               : \"Check connection\"\n      \"account accountType short\"   : \"IMAP\"\n      \"account accountType\"         : \"Account type\"\n      \"account imapPort short\"      : \"993\"\n      \"account imapPort\"            : \"Port\"\n      \"account imapSSL\"             : \"Use SSL\"\n      \"account imapServer short\"    : \"imap.provider.tld\"\n      \"account imapServer\"          : \"IMAP server\"\n      \"account imapTLS\"             : \"Use TLS\"\n      \"account label short\"         : \"A short mailbox name\"\n      \"account label\"               : \"Account label\"\n      \"account login short\" : \"Your email address\"\n      \"account login\"             : \"Email address\"\n      \"account name short\"       : \"Your name, as it will be displayed\"\n      \"account name\"           : \"Your name\"\n      \"account password\"            : \"Password\"\n      \"account receiving server\"    : \"Receiving server\"\n      \"account sending server\"      : \"Sending server\"\n      \"account smtpLogin short\"     : \"SMTP user\"\n      \"account smtpLogin\"           : \"SMTP user (if different from main login)\"\n      \"account smtpMethod\"          : \"Authentification method\"\n      \"account smtpMethod NONE\"     : \"None\"\n      \"account smtpMethod PLAIN\"    : \"Plain\"\n      \"account smtpMethod LOGIN\"    : \"Login\"\n      \"account smtpMethod CRAM-MD5\" : \"Cram-MD5\"\n      \"account smtpPassword short\"  : \"SMTP password\"\n      \"account smtpPassword\"        : \"SMTP password (if different from main password)\"\n      \"account smtpPort short\"      : \"465\"\n      \"account smtpPort\"            : \"Port\"\n      \"account smtpSSL\"             : \"Use SSL\"\n      \"account smtpServer short\"    : \"smtp.provider.tld\"\n      \"account smtpServer\"          : \"SMTP server\"\n      \"account smtpTLS\"             : \"Use STARTTLS\"\n      \"account remove\"              : \"Remove this account\"\n      \"account remove confirm\"      : \"Do you really want to remove this\n                                        account?\"\n      \"account draft mailbox\"       : \"Draft box\"\n      \"account sent mailbox\"        : \"Sent box\"\n      \"account trash mailbox\"       : \"Trash\"\n      \"account mailboxes\"           : \"Folders\"\n      \"account special mailboxes\"   : \"Special mailboxes\"\n      \"account newmailbox label\"    : \"New Folder\"\n      \"account newmailbox placeholder\" : \"Name\"\n      \"account newmailbox parent\"   : \"Parent:\"\n      \"account confirm delbox\"      : \"Do you really want to delete all\n                                        messages in this box?\"\n      \"account tab account\"         : \"Account\"\n      \"account tab mailboxes\"       : \"Folders\"\n      \"account errors\"              : \"Some data are missing or invalid\"\n      \"account type\"                : \"Account type\"\n      \"account updated\"             : \"Account updated\"\n      \"account checked\"             : \"Parameters ok\"\n      \"account creation ok\"         : \"Yeah! The account has been successfully\n        created. Now select the mailboxes you want to see in the menu\"\n      \"account refreshed\"           : \"Account refreshed\"\n      \"account refresh error\"       : \"Error refreshing accounts, check parameters\"\n      \"account identifiers\"         : \"Identification\"\n      \"account actions\"             : \"Actions\"\n      \"account danger zone\"         : \"Danger Zone\"\n      \"account no special mailboxes\": \"Please configure special folders first\"\n      \"account smtp hide advanced\"  : \"Hide advanced parameters\"\n      \"account smtp show advanced\"  : \"Show advanced parameters\"\n      \"mailbox create ok\"           : \"Folder created\"\n      \"mailbox create ko\"           : \"Error creating folder\"\n      \"mailbox update ok\"           : \"Folder updated\"\n      \"mailbox update ko\"           : \"Error updating folder\"\n      \"mailbox delete ok\"           : \"Folder deleted\"\n      \"mailbox delete ko\"           : \"Error deleting folder\"\n      \"mailbox expunge ok\"          : \"Folder expunged\"\n      \"mailbox expunge ko\"          : \"Error expunging folder\"\n      \"mailbox title edit\"          : \"Rename folder\"\n      \"mailbox title delete\"        : \"Delete folder\"\n      \"mailbox title edit save\"     : \"Save\"\n      \"mailbox title edit cancel\"   : \"Cancel\"\n      \"mailbox title add\"           : \"Add new folder\"\n      \"mailbox title add cancel\"    : \"Cancel\"\n      \"mailbox title favorite\"      : \"Folder is displayed\"\n      \"mailbox title not favorite\"  : \"Folder not displayed\"\n      \"mailbox title total\"         : \"Total\"\n      \"mailbox title unread\"        : \"Unread\"\n      \"mailbox title new\"           : \"New\"\n      \"config error auth\"           : \"Wrong connection parameters\"\n      \"config error imapPort\"       : \"Wrong IMAP port\"\n      \"config error imapServer\"     : \"Wrong IMAP server\"\n      \"config error imapTLS\"        : \"Wrong IMAP TLS\"\n      \"config error smtpPort\"       : \"Wrong SMTP Port\"\n      \"config error smtpServer\"     : \"Wrong SMTP Server\"\n      \"config error nomailboxes\"    : \"No folder in this account, please create\n                                        one\"\n\n      # Message Action\n      \"message action sent ok\"      : \"Message sent\"\n      \"message action sent ko\"      : \"Error sending message: \"\n      \"message action draft ok\"     : \"Message saved\"\n      \"message action draft ko\"     : \"Error saving message: \"\n      \"message action delete ok\"    : \"Message “%{subject}” deleted\"\n      \"message action delete ko\"    : \"Error deleting message: \"\n      \"message action move ok\"      : \"Message moved\"\n      \"message action move ko\"      : \"Error moving message: \"\n      \"message action mark ok\"      : \"Message marked\"\n      \"message action mark ko\"      : \"Error marking message: \"\n      \"conversation move ok\"        : \"Conversation moved\"\n      \"conversation move ko\"        : \"Error moving conversation\"\n      \"conversation delete ok\"      : \"Conversation “%{subject}” deleted\"\n      \"conversation delete ko\"      : \"Error deleting conversation\"\n      \"conversation seen ok\"        : \"Conversation marked as read\"\n      \"conversation seen ko\"        : \"Error\"\n      \"conversation unseen ok\"      : \"Conversation marked as unread\"\n      \"conversation unseen ko\"      : \"Error\"\n      \"conversation undelete\"       : \"Undo conversation deletion\"\n      \"message images warning\"      : \"Display of images inside message has\n                                        been blocked\"\n      \"message images display\"      : \"Display images\"\n      \"message html display\"        : \"Display HTML\"\n      \"message delete no trash\"     : \"Please select a Trash folder\"\n      \"message delete already\"      : \"Message already in trash folder\"\n      \"message move already\"        : \"Message already in this folder\"\n      \"message undelete\"            : \"Undo message deletion\"\n      \"message undelete ok\"         : \"Message undeleted\"\n      \"message undelete error\"      : \"Error undoing some action\"\n      \"message undelete unnavalable\": \"Undo not available\"\n      \"message preview title\"       : \"View attachments\"\n\n      # Settings\n      \"settings title\"             : \"Settings\"\n      \"settings button save\"       : \"Save\"\n      #\"settings label mpp\"         : \"Messages per page\"\n      \"settings plugins\"           : \"Add ons\"\n      \"settings plugins\"           : \"Modules complémentaires\"\n      \"settings plugin add\"        : \"Add\"\n      \"settings plugin del\"        : \"Delete\"\n      \"settings plugin help\"       : \"Help\"\n      \"settings plugin new name\"   : \"Plugin Name\"\n      \"settings plugin new url\"    : \"Plugin URL\"\n      # SETTINGS\n      \"settings label composeInHTML\"        : \"Rich message editor\"\n      \"settings label composeOnTop\"         : \"Reply on top of message\"\n      \"settings label desktopNotifications\" : \"Notifications\"\n      \"settings label displayConversation\"  : \"Display conversations\"\n      \"settings label displayPreview\"       : \"Display message preview\"\n      \"settings label messageDisplayHTML\"   : \"Display message in HTML\"\n      \"settings label messageDisplayImages\" : \"Display images inside messages\"\n      \"settings label messageConfirmDelete\" : \"Confirm before deleting a message\"\n      \"settings label layoutStyle\"            : \"Display Layout\"\n      \"settings label layoutStyle horizontal\" : \"Horizontal\"\n      \"settings label layoutStyle vertical\"   : \"Vertical\"\n      \"settings label layoutStyle three\"      : \"Three cols\"\n      \"settings label listStyle\"            : \"Message list style\"\n      \"settings label listStyle default\"    : \"Normal\"\n      \"settings label listStyle compact\"    : \"Compact\"\n      \"settings lang\"             : \"Language\"\n      \"settings lang en\"          : \"English\"\n      \"settings lang fr\"          : \"Français\"\n      \"settings save error\"       : \"Unable to save settings, please try again\"\n\n      # File picker\n      \"picker drop here\"           : \"Drop files here\"\n\n      # Mailbox List\n      \"mailbox pick one\"           : \"Pick one\"\n      \"mailbox pick null\"          : \"No box for this\"\n\n      # Tasks\n      \"task account-fetch\"         : 'Refreshing %{account}'\n      \"task box-fetch\"             : 'Refreshing %{box}'\n      \"task apply-diff-fetch\"      : 'Fetching mails from %{box} of %{account}'\n      \"task apply-diff-remove\"     : 'Deleting mails from %{box} of %{account}'\n      \"task recover-uidvalidity\"   : 'Analysing'\n      \"there were errors\"          : '%{smart_count} error. |||| %{smart_count}\n                                        errors.'\n      \"modal please report\"        : \"Please transmit this information to cozy.\"\n      \"modal please contribute\"    : \"Please contribute\"\n\n      # Validation\n      \"validate must not be empty\" : \"Mandatory field\"\n\n      # Toast\n      \"toast hide\"      : \"Hide alerts\"\n      \"toast show\"      : \"Display alerts\"\n      \"toast close all\" : \"Close all alerts\"\n\n      # Notifications\n      \"notif new title\": 'CozyEmail'\n      \"notif new\": \"\"\"\n        %{smart_count} new message in %{box} of %{account}||||\n        %{smart_count} new messages in %{box} of %{account}||||\n      \"\"\"\n\n      # Contacts\n      \"contact form\"             : \"Select contacts\"\n      \"contact form placeholder\" : \"contact name\"\n      \"contact create success\"   : \"%{contact} has been added to your contacts\"\n      \"contact create error\"     : \"Error adding to your contacts : {error}\"\n\n      # GMail security\n      \"gmail security tile\": \"About Gmail security\"\n      \"gmail security body\": \"\"\"\n            Gmail considers connection using username and password not safe.\n            Please click on the following link, make sure\n            you are connected with your %{login} account and enable access for\n            less secure apps.\n      \"\"\"\n      \"gmail security link\": \"Enable access for less secure apps.\"\n\n      # Plugins\n      'plugin name Gallery'            : 'Attachments gallery'\n      'plugin name medium-editor'      : 'Medium editor'\n      'plugin name MiniSlate'          : 'MiniSlate editor'\n      'plugin name Sample JS'          : 'Sample'\n      'plugin name Keyboard shortcuts' : 'Keyboard shortcuts'\n      'plugin name VCard'              : 'Contacts VCards'\n      'plugin modal close'             : 'Close'\n\n      # Misc\n      'calendar unknown format' : \"\"\"\n            This message contains an invite to an event in a currently unknown format.\n            \"\"\"\n","module.exports =\n\n      # Application\n      \"app loading\"             : \"Chargement…\"\n      \"app back\"                : \"Retour\"\n      \"app cancel\"              : \"Annuler\"\n      \"app menu\"                : \"Menu\"\n      \"app search\"              : \"Rechercher…\"\n      \"app alert close\"         : \"Fermer\"\n      \"app unimplemented\"       : \"Non implémenté\"\n      \"app error\"               : \"Oups, une erreur est survenue,\n                                    veuillez réessayer\"\n\n      # Compose window\n      \"compose\"                   : \"Écrire un nouveau message\"\n      \"compose default\"           : \"Bonjour, comment ça va ?\"\n      \"compose from\"              : \"De\"\n      \"compose to\"                : \"À\"\n      \"compose to help\"           : \"Liste des destinataires principaux\"\n      \"compose cc\"                : \"Cc\"\n      \"compose cc help\"           : \"Liste des destinataires en copie\"\n      \"compose bcc\"               : \"Cci\"\n      \"compose bcc help\"          : \"Liste des destinataires en copie cachée\"\n      \"compose subject\"           : \"Objet\"\n      \"compose content\"           : \"Contenu\"\n      \"compose subject help\"      : \"Objet du message\"\n      \"compose reply prefix\"      : \"Re: \"\n      \"compose reply separator\"   : \"\\n\\nLe %{date}, %{sender} a écrit \\n\"\n      \"compose forward prefix\"    : \"Fwd: \"\n      \"compose forward separator\" : \"\\n\\nLe %{date}, %{sender} a écrit \\n\"\n      \"compose action draft\"      : \"Enregistrer\"\n      \"compose action send\"       : \"Envoyer\"\n      \"compose action sending\"    : \"Envoi…\"\n      \"compose action delete\"     : \"Supprimer\"\n      \"compose toggle cc\"         : \"Copie à\"\n      \"compose toggle bcc\"        : \"Copie cachée à\"\n      \"compose error no dest\"     : \"Vous n'avez pas saisi de destinataires\"\n      \"compose error no subject\"  : \"Vous n'avez pas saisi de sujet\"\n      \"compose confirm keep draft\": \"Vous n'avez pas envoyé le message, voulez-vous conserver le brouillon ?\"\n      \"compose draft deleted\"     : \"Brouillon supprimé\"\n\n      # Menu\n      \"menu show\"               : \"Montrer le menu\"\n      \"menu compose\"            : \"Nouveau\"\n      \"menu account new\"        : \"Ajouter un compte\"\n      \"menu settings\"           : \"Paramètres\"\n      \"menu mailbox total\"      : \"%{smart_count} message |||| %{smart_count} messages \"\n      \"menu mailbox unread\"     : \" dont %{smart_count} non lu |||| dont %{smart_count} non lus \"\n      \"menu mailbox new\"        : \" et %{smart_count} nouveaux |||| et %{smart_count} nouveaux \"\n      \"menu favorites on\"       : \"Favorites\"\n      \"menu favorites off\"      : \"Toutes\"\n      \"menu toggle\"             : \"Menu\"\n\n      # List\n      \"list empty\"              : \"Pas d'email dans cette boîte..\"\n      \"no flagged message\"      : \"Pas d'email important dans cette boîte.\"\n      \"no unseen message\"       : \"Pas d'email non-lu dans cette boîte.\"\n      \"no attach message\"       : \"Pas d'email avec des pièces-jointes.\"\n      \"no filter message\"       : \"Pas d'email pour ce filtre.\"\n      \"list fetching\"           : \"Chargement…\"\n      \"list search empty\"       : \"Aucun résultat trouvé pour la requête\n                                    \\\"%{query}\\\".\"\n      \"list count\"              : \"%{smart_count} message dans cette boite ||||\n                                    %{smart_count} messages dans cette boite\"\n      \"list search count\"       : \"%{smart_count} résultat trouvé. ||||\n                                    %{smart_count} résultats trouvés.\"\n      \"list filter\"               : \"Filtrer\"\n      \"list filter all\"           : \"Tous\"\n      \"list filter unseen\"        : \"Non lus\"\n      \"list filter unseen title\"  : \"N'afficher que les messages non lus\"\n      \"list filter flagged\"       : \"Importants\"\n      \"list filter flagged title\" : \"N'afficher que les messages importants\"\n      \"list filter attach\"        : \"Pièces-jointes\"\n      \"list filter attach title\"  : \"N'afficher que les messages avec des pièces-jointes\"\n      \"list sort\"                 : \"Trier\"\n      \"list sort date\"            : \"Date\"\n      \"list sort subject\"         : \"Sujet\"\n      \"list option compact\"       : \"Compact\"\n      \"list next page\"            : \"Davantage de messages\"\n      \"list end\"                  : \"FIN\"\n      \"list mass no message\"      : \"Aucun message sélectionné\"\n      \"list delete confirm\"       : \"\"\"\n                                    Voulez-vous vraiment supprimer ce message ?||||\n                                    Voulez-vous vraiment supprimer %{smart_count} messages ?\n                                    \"\"\"\n      \"list delete conv confirm\"  : \"\"\"\n                                    Voulez-vous vraiment supprimer cette conversation ?||||\n                                    Voulez-vous vraiment supprimer %{smart_count} conversations ?\n                                    \"\"\"\n\n      # Mail\n      \"mail receivers\"          : \"À \"\n      \"mail receivers cc\"       : \"Copie \"\n      \"mail action reply\"       : \"Répondre\"\n      \"mail action reply all\"   : \"Répondre à tous\"\n      \"mail action forward\"     : \"Transférer\"\n      \"mail action delete\"      : \"Supprimer\"\n      \"mail action mark\"        : \"Marquer comme\"\n      \"mail action copy\"        : \"Copier…\"\n      \"mail action move\"        : \"Déplacer…\"\n      \"mail action more\"        : \"Plus…\"\n      \"mail action headers\"     : \"Entêtes\"\n      \"mail action raw\"         : \"Message brut\"\n      \"mail mark spam\"          : \"Pourriel\"\n      \"mail mark nospam\"        : \"Légitime\"\n      \"mail mark fav\"           : \"Important\"\n      \"mail mark nofav\"         : \"Normal\"\n      \"mail mark read\"          : \"Lu\"\n      \"mail mark unread\"        : \"Non lu\"\n      \"mail confirm delete\"     : \"Voulez-vous vraiment supprimer le message\n                                    « %{subject} » ?\"\n      \"mail confirm delete nosubject\"   : \"Voulez-vous vraiment supprimer ce message\"\n      \"mail action conversation delete\" : \"Supprimer la conversation\"\n      \"mail action conversation move\"   : \"Déplacer la conversation\"\n      \"mail action conversation seen\"   : \"Marquer la conversation comme lue\"\n      \"mail action conversation unseen\" : \"Marquer la conversation comme\n                                            non lue\"\n      \"mail conversation length\": \"\"\"\n            %{smart_count} message dans cette conversation. ||||\n            %{smart_count} messages dans cette conversation.\n      \"\"\"\n\n      # Account\n      \"account new\"                 : \"Nouveau compte\"\n      \"account edit\"                : \"Modifier le compte\"\n      \"account add\"                 : \"Créer\"\n      \"account save\"                : \"Enregistrer\"\n      \"account saving\"              : \"En cours…\"\n      \"account check\"               : \"Tester la connexion\"\n      \"account accountType short\"   : \"IMAP\"\n      \"account accountType\"         : \"Type de compte\"\n      \"account imapPort short\"      : \"993\"\n      \"account imapPort\"            : \"Port\"\n      \"account imapSSL\"             : \"Utiliser SSL\"\n      \"account imapServer short\"    : \"imap.fournisseur.tld\"\n      \"account imapServer\"          : \"Serveur IMAP\"\n      \"account imapTLS\"             : \"Utiliser STARTTLS\"\n      \"account label short\"         : \"Nom abrégé\"\n      \"account label\"               : \"Nom du compte\"\n      \"account login short\"         : \"Votre adresse électronique\"\n      \"account login\"               : \"Adresse\"\n      \"account name short\"          : \"Votre nom, tel qu'il sera affiché\"\n      \"account name\"                : \"Votre nom\"\n      \"account password\"            : \"Mot de passe\"\n      \"account receiving server\"    : \"Serveur de réception\"\n      \"account sending server\"      : \"Serveur d'envoi\"\n      \"account smtpLogin short\"     : \"Utilisateur SMTP\"\n      \"account smtpLogin\"           : \"Utilisateur SMTP (s'il est différent)\"\n      \"account smtpMethod\"          : \"Méthode d'authentification\"\n      \"account smtpMethod NONE\"     : \"Aucune\"\n      \"account smtpMethod PLAIN\"    : \"Plain\"\n      \"account smtpMethod LOGIN\"    : \"Login\"\n      \"account smtpMethod CRAM-MD5\" : \"Cram-MD5\"\n      \"account smtpPassword short\"  : \"Mot de passe SMTP\"\n      \"account smtpPassword\"        : \"Mot de passe SMTP (s'il est différent)\"\n      \"account smtpPort short\"      : \"465\"\n      \"account smtpPort\"            : \"Port\"\n      \"account smtpSSL\"             : \"Utiliser SSL\"\n      \"account smtpServer short\"    : \"smtp.fournisseur.tld\"\n      \"account smtpServer\"          : \"Serveur sortant\"\n      \"account smtpTLS\"             : \"Utiliser STARTTLS\"\n      \"account remove\"              : \"Supprimer ce compte\"\n      \"account remove confirm\"      : \"Voulez-vous vraiment supprimer\n                                        ce compte ?\"\n      \"account draft mailbox\"       : \"Enregistrer les brouillons dans\"\n      \"account sent mailbox\"        : \"Enregistrer les messages envoyés dans\"\n      \"account trash mailbox\"       : \"Corbeille\"\n      \"account mailboxes\"           : \"Dossiers\"\n      \"account special mailboxes\"   : \"Dossiers spéciaux\"\n      \"account newmailbox label\"    : \"Nouveaux dossier\"\n      \"account newmailbox placeholder\" : \"Nom\"\n      \"account newmailbox parent\"   : \"Créer sous\"\n      \"account confirm delbox\"      : \"Voulez-vous vraiment supprimer\n                                        tous les messages de la corbeille ?\"\n      \"account tab account\"         : \"Compte\"\n      \"account tab mailboxes\"       : \"Dossiers\"\n      \"account errors\"              : \"Certaines informations manquent ou\n                                        sont incorrectes\"\n      \"account type\"                : \"Type de compte\"\n      \"account updated\"             : \"Modification enregistrée\"\n      \"account checked\"             : \"Paramètres corrects\"\n      \"account refreshed\"           : \"Actualisé\"\n      \"account refresh error\"       : \"Une erreur est survenue, vérifiez les paramètres de connexion aux comptes\"\n      \"account creation ok\"         : \"Youpi, le compte a été créé !\n        Sélectionnez à présent les dossiers que vous voulez voir\n        apparaitre dans le menu\"\n      \"account identifiers\"         : \"Identification\"\n      \"account danger zone\"         : \"Zone dangereuse\"\n      \"account actions\"             : \"Actions\"\n      \"account no special mailboxes\": \"Vous n'avez pas configuré les dossiers spéciaux\"\n      \"account smtp hide advanced\"  : \"Masquer les paramètres avancés\"\n      \"account smtp show advanced\"  : \"Afficher les paramètres avancés\"\n      \"mailbox create ok\"           : \"Dossier créé\"\n      \"mailbox create ko\"           : \"Erreur de création du dossier\"\n      \"mailbox update ok\"           : \"Dossier mis à jour\"\n      \"mailbox update ko\"           : \"Erreur de mise à jour\"\n      \"mailbox delete ok\"           : \"Dossier supprimé\"\n      \"mailbox delete ko\"           : \"Erreur de suppression du dossier\"\n      \"mailbox expunge ok\"          : \"Corbeille vidée\"\n      \"mailbox expunge ko\"          : \"Erreur de suppression des messages\"\n      \"mailbox title edit\"          : \"Renommer le dossier\"\n      \"mailbox title delete\"        : \"Supprimer le dossier\"\n      \"mailbox title edit save\"     : \"Enregistrer\"\n      \"mailbox title edit cancel\"   : \"Annuler\"\n      \"mailbox title add\"           : \"Créer un dossier\"\n      \"mailbox title add cancel\"    : \"Annuler\"\n      \"mailbox title favorite\"      : \"Dossier affiché\"\n      \"mailbox title not favorite\"  : \"Dossier non affiché\"\n      \"mailbox title total\"         : \"Total\"\n      \"mailbox title unread\"        : \"Non lus\"\n      \"mailbox title new\"           : \"Nouveaux\"\n      \"config error auth\"           : \"Impossible de se connecter avec ces\n                                        paramètres\"\n      \"config error imapPort\"       : \"Port du serveur IMAP invalide\"\n      \"config error imapServer\"     : \"Serveur IMAP invalide\"\n      \"config error imapTLS\"        : \"Erreur IMAP TLS\"\n      \"config error smtpPort\"       : \"Port du serveur d'envoi invalide\"\n      \"config error smtpServer\"     : \"Serveur d'envoi invalide\"\n      \"config error nomailboxes\"    : \"Ce compte n'a pas encore de dossier,\n                                        commencez par en créer\"\n\n      # Message Action\n      \"message action sent ok\"      : \"Message envoyé !\"\n      \"message action sent ko\"      : \"Une erreur est survenue : \"\n      \"message action draft ok\"     : \"Message sauvegardé !\"\n      \"message action draft ko\"     : \"Une erreur est survenue : \"\n      \"message action delete ok\"    : \"Message « %{subject} » supprimé\"\n      \"message action delete ko\"    : \"Impossible de supprimer le message : \"\n      \"message action move ok\"      : \"Message déplacé\"\n      \"message action move ko\"      : \"Le déplacement a échoué\"\n      \"message action mark ok\"      : \"Le message a été mis à jour\"\n      \"message action mark ko\"      : \"L'opération a échoué\"\n      \"conversation move ok\"        : \"Conversation déplacée\"\n      \"conversation move ko\"        : \"L'opération a échoué\"\n      \"conversation delete ok\"      : \"Conversation « %{subject} » supprimée\"\n      \"conversation delete ko\"      : \"L'opération a échoué\"\n      \"conversation seen ok\"        : \"Ok\"\n      \"conversation seen ko\"        : \"L'opération a échoué\"\n      \"conversation unseen ok\"      : \"Ok\"\n      \"conversation unseen ko\"      : \"L'opération a échoué\"\n      \"conversation undelete\"       : \"Annuler la suppression\"\n      \"message images warning\"      : \"L'affichage des images du message a été\n                                        bloqué\"\n      \"message images display\"      : \"Afficher les images\"\n      \"message html display\"        : \"Afficher en HTML\"\n      \"message delete no trash\"     : \"Choisissez d'abord un dossier Corbeille\"\n      \"message delete already\"      : \"Ce message est déjà dans la corbeille\"\n      \"message move already\"        : \"Ce message est déjà dans ce dossier\"\n      \"message undelete\"            : \"Annuler la suppression\"\n      \"message undelete ok\"         : \"Message restauré\"\n      \"message undelete error\"      : \"Impossible d'annuler l'action\"\n      \"message undelete unavailable\": \"Impossible d'annuler l'action\"\n      \"message preview title\"       : \"Voir les pièces jointes\"\n\n      # Settings\n      \"settings title\"             : \"Paramètres\"\n      \"settings button save\"       : \"Enregistrer\"\n      # \"settings label mpp\"         : \"Nombre de messages par page\"\n      \"settings plugins\"           : \"Modules complémentaires\"\n      \"settings plugin add\"        : \"Ajouter\"\n      \"settings plugin del\"        : \"Supprimer\"\n      \"settings plugin help\"       : \"Documentation\"\n      \"settings plugin new name\"   : \"Nom du plugin\"\n      \"settings plugin new url\"    : \"Url du plugin\"\n      # SETTINGS\n      \"settings label composeInHTML\"        : \"Éditeur riche\"\n      \"settings label composeOnTop\"         : \"Répondre au-dessus du message\"\n      \"settings label desktopNotifications\" : \"Notifications\"\n      \"settings label displayConversation\"  : \"Afficher les conversations\"\n      \"settings label displayPreview\"       : \"Prévisualiser les messages\"\n      \"settings label messageDisplayHTML\"   : \"Afficher les messages en HTML\"\n      \"settings label messageDisplayImages\" : \"Afficher les images\"\n      \"settings label messageConfirmDelete\" : \"Demander confirmation avant\n                                                de supprimer un message\"\n      \"settings label layoutStyle\"            : \"Affichage\"\n      \"settings label layoutStyle horizontal\" : \"Message sous la liste\"\n      \"settings label layoutStyle vertical\"   : \"Message à côté de la liste\"\n      \"settings label layoutStyle three\"      : \"Trois colonnes\"\n      \"settings label listStyle\"            : \"Affichage de la liste des messages\"\n      \"settings label listStyle default\"    : \"Normal\"\n      \"settings label listStyle compact\"    : \"Compact\"\n      \"settings lang\"             : \"Langue\"\n      \"settings lang en\"          : \"English\"\n      \"settings lang fr\"          : \"Français\"\n      \"settings save error\"       : \"Erreur d'enregistrement des paramètres, veuillez réessayer\"\n\n      # File picker\n      \"picker drop here\"           : \"Déposer les fichiers ici\"\n\n      # Mailbox List\n      \"mailbox pick one\"           : \"Choisissez une boîte\"\n      \"mailbox pick null\"          : \"Pas de boîte pour ça\"\n\n      # Tasks\n      \"task account-fetch\"         : 'Rafraîchissement %{account}'\n      \"task box-fetch\"             : 'Rafraîchissement %{box}'\n      \"task apply-diff-fetch\"      : 'Téléchargement des messages du dossier\n                                        %{box} de %{account}'\n      \"task apply-diff-remove\"     : 'Suppression des messages du dossier\n                                        %{box} de %{account}'\n      \"task recover-uidvalidity\"   : 'Analyse du compte'\n      \"there were errors\"          : '%{smart_count} erreur. ||||\n                                        %{smart_count} erreurs.'\n      \"modal please report\"        : \"Merci de bien vouloir transmettre ces\n                                        informations à cozy.\"\n      \"modal please contribute\"    : \"Merci de contribuer\"\n\n      # Validation\n      \"validate must not be empty\" : \"Ce champ doit être renseigné\"\n\n      # Toast\n      \"toast hide\"      : \"Masquer les alertes\"\n      \"toast show\"      : \"Afficher les alertes\"\n      \"toast close all\" : \"Fermer toutes les alertes\"\n\n      # Notifications\n      \"notif new title\": 'Messagerie Cozy'\n      \"notif new\": \"\"\"\n        %{smart_count} nouveau message dans %{box} de %{account}||||\n        %{smart_count} nouveaux messages dans %{box} de %{account}||||\n      \"\"\"\n\n      # Contacts\n      \"contact form\"             : \"Sélectionnez des contacts\"\n      \"contact form placeholder\" : \"Nom\"\n      \"contact create success\"   : \"%{contact} a été ajouté(e) à vos contacts\"\n      \"contact create error\"     : \"L'ajout à votre carnet d'adresses a\n                                        échoué : {error}\"\n\n      # GMail security\n      \"gmail security tile\": \"Sécurité Gmail\"\n      \"gmail security body\": \"\"\"\n            Gmail considère les connexions par nom d'utilisateur et mot de passe\n            comme non sécurisées. Veuillez cliquer sur le lien ci-dessous, assurez-vous\n            d'être connecté avec le compte %{login} et activez l'accès\n            pour les applications moins sécurisées.\n      \"\"\"\n      \"gmail security link\": \"\"\"\n            Activer l'accès pour les applications moins sécurisées\n      \"\"\"\n\n      # Plugins\n      'plugin name Gallery'            : 'Galerie de pièces jointes'\n      'plugin name medium-editor'      : 'Éditeur Medium'\n      'plugin name MiniSlate'          : 'Éditeur MiniSlate'\n      'plugin name Sample JS'          : 'Exemple'\n      'plugin name Keyboard shortcuts' : 'Raccourcis clavier'\n      'plugin name VCard'              : 'Affichage de VCard'\n      'plugin modal close'             : 'Fermer'\n\n      # Misc\n      'calendar unknown format' : \"\"\"\n            Ce message contient une invitation à un évènement\n            dans un format actuellement non pris en charge.\n            \"\"\"\n","###\n    Router mixin.\n    Aliases `buildUrl` and `buildClosePanelUrl`\n###\n\nrouter = window.router\n\nmodule.exports =\n\n    buildUrl: (options) ->\n        router.buildUrl.call router, options\n\n    buildClosePanelUrl: (direction) ->\n        router.buildClosePanelUrl.call router, direction\n\n    # Builds the URL (based on options) and redirect to it.\n    # If `options` is a string, it will be considered as the target URL.\n    redirect: (options) ->\n        url = if typeof options is \"string\" then options else @buildUrl options\n        router.navigate url, true\n\n\n","module.exports = StoreWatchMixin = (stores) ->\n\n    return {\n        componentDidMount: ->\n            stores.forEach (store) => store.on 'change', @_setStateFromStores\n\n        componentWillUnmount: ->\n            stores.forEach (store) =>\n                store.removeListener 'change', @_setStateFromStores\n\n        getInitialState: -> return @getStateFromStores()\n\n        _setStateFromStores: -> @setState @getStateFromStores()\n    }","PanelRouter = require './libs/panel_router'\n\nAccountStore = require './stores/account_store'\nMessageStore = require './stores/message_store'\n\nmodule.exports = class Router extends PanelRouter\n\n    patterns:\n        'account.config':\n            pattern: 'account/:accountID/config/:tab'\n            fluxAction: 'showConfigAccount'\n        'account.new':\n            pattern: 'account/new'\n            fluxAction: 'showCreateAccount'\n        'account.mailbox.messages.full':\n            pattern: 'account/:accountID/box/:mailboxID/sort/:sort/' +\n                        'flag/:flag/before/:before/after/:after/' +\n                        'page/:pageAfter'\n            fluxAction: 'showMessageList'\n        'account.mailbox.messages':\n            pattern: 'account/:accountID/mailbox/:mailboxID'\n            fluxAction: 'showMessageList'\n\n        'search':\n            pattern: 'search/:query/page/:page'\n            fluxAction: 'showSearch'\n\n        'message':\n            pattern: 'message/:messageID'\n            fluxAction: 'showMessage'\n        'conversation':\n            pattern: 'conversation/:conversationID/:messageID/'\n            fluxAction: 'showConversation'\n        'compose':\n            pattern: 'compose'\n            fluxAction: 'showComposeNewMessage'\n        'edit':\n            pattern: 'edit/:messageID'\n            fluxAction: 'showComposeMessage'\n\n        'settings':\n            pattern: 'settings'\n            fluxAction: 'showSettings'\n\n        'default':\n            pattern: ''\n            fluxAction: ''\n\n    # default route\n    routes: '': 'default'\n\n    # Determines and gets the default parameters regarding a specific action\n    _getDefaultParameters: (action) ->\n        switch action\n            when 'account.mailbox.messages'\n            ,    'account.mailbox.messages.full'\n                defaultAccountID = AccountStore.getDefault()?.get 'id'\n                defaultMailboxID = AccountStore.getDefaultMailbox(defaultAccountID)?.get 'id'\n                defaultParameters = _.clone(MessageStore.getParams())\n                defaultParameters.accountID = defaultAccountID\n                defaultParameters.mailboxID = defaultMailboxID\n                defaultParameters.sort = '-'\n                defaultParameters.pageAfter = '-'\n            when 'account.config'\n                defaultAccount = AccountStore.getDefault()?.get 'id'\n                defaultParameters =\n                    accountID: defaultAccount\n                    tab: 'account'\n            when 'search'\n                defaultParameters =\n                    query: \"\"\n                    page: 1\n            else\n                defaultParameters = null\n        return defaultParameters\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes} = require '../constants/app_constants'\n\nAccountTranslator = require '../utils/translators/account_translator'\n\nclass AccountStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n\n    # Creates an OrderedMap of accounts\n    _accounts = Immutable.Sequence window.accounts\n\n        # sort first\n        .sort (mb1, mb2) ->\n            if mb1.label > mb2.label then return 1\n            else if mb1.label < mb2.label then return -1\n            else return 0\n\n        # sets account ID as index\n        .mapKeys (_, account) -> return account.id\n\n        # makes account object an immutable Map\n        .map (account) -> AccountTranslator.toImmutable account\n\n        .toOrderedMap()\n\n    _selectedAccount   = null\n    _selectedMailbox   = null\n    _newAccountWaiting = false\n    _newAccountError   = null\n\n\n    _refreshSelected = ->\n        if selectedAccountID = _selectedAccount?.get 'id'\n            _selectedAccount = _accounts.get selectedAccountID\n            if selectedMailboxID = _selectedMailbox?.get 'id'\n                _selectedMailbox = _selectedAccount\n                    ?.get('mailboxes')\n                    ?.get(selectedMailboxID)\n\n    setMailbox = (accountID, boxID, boxData) ->\n\n        account = _accounts.get(accountID)\n        mailboxes = account.get('mailboxes')\n        mailboxes = mailboxes.map (box) ->\n            if box.get('id') is boxID\n                boxData.weight = box.get 'weight'\n                AccountTranslator.mailboxToImmutable boxData\n            else\n                box\n        .toOrderedMap()\n\n        account = account.set 'mailboxes', mailboxes\n        _accounts = _accounts.set accountID, account\n        _refreshSelected()\n\n\n    _mailboxSort = (mb1, mb2) ->\n        w1 = mb1.get 'weight'\n        w2 = mb2.get 'weight'\n        if w1 < w2 then return 1\n        else if w1 > w2 then return -1\n        else\n            if mb1.get 'label' < mb2.get 'label' then return 1\n            else if mb1.get 'label' > mb2.get 'label' then return 1\n            else return 0\n\n    _applyMailboxDiff: (accountID, diff) ->\n        account = _accounts.get accountID\n        mailboxes = account.get('mailboxes')\n        updated = mailboxes.withMutations (map) ->\n            for boxid, deltas of diff when deltas.nbTotal + deltas.nbUnread\n                box = map.get boxid\n                if box?\n                    box = box.merge\n                        nbTotal: box.get('nbTotal') + deltas.nbTotal\n                        nbUnread: box.get('nbUnread') + deltas.nbUnread\n                    map.set boxid, box\n\n        unless updated is mailboxes\n            account = account.set 'mailboxes', updated\n            _accounts = _accounts.set accountID, account\n            _refreshSelected()\n            @emit 'change'\n\n\n    _setCurrentAccount: (account) ->\n        _selectedAccount = account\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        onUpdate = (rawAccount) =>\n            account = AccountTranslator.toImmutable rawAccount\n            _accounts = _accounts.set account.get('id'), account\n            @_setCurrentAccount account\n            _newAccountWaiting = false\n            _newAccountError   = null\n            @emit 'change'\n\n        handle ActionTypes.ADD_ACCOUNT, (rawAccount) ->\n            onUpdate rawAccount\n\n        handle ActionTypes.SELECT_ACCOUNT, (value) ->\n            if value.accountID?\n                @_setCurrentAccount(_accounts.get(value.accountID) or null)\n            else\n                @_setCurrentAccount(null)\n            if value.mailboxID?\n                _selectedMailbox = _selectedAccount?.get('mailboxes')?.get(value.mailboxID) or null\n            else\n                _selectedMailbox = null\n            @emit 'change'\n\n        handle ActionTypes.NEW_ACCOUNT_WAITING, (payload) ->\n            _newAccountWaiting = payload\n            @emit 'change'\n\n        handle ActionTypes.NEW_ACCOUNT_ERROR, (error) ->\n            _newAccountWaiting = false\n            _newAccountError = error\n            @emit 'change'\n\n        handle ActionTypes.EDIT_ACCOUNT, (rawAccount) ->\n            onUpdate rawAccount\n\n        handle ActionTypes.MAILBOX_CREATE, (rawAccount) ->\n            onUpdate rawAccount\n\n        handle ActionTypes.MAILBOX_UPDATE, (rawAccount) ->\n            onUpdate rawAccount\n\n        handle ActionTypes.MAILBOX_DELETE, (rawAccount) ->\n            onUpdate rawAccount\n\n        handle ActionTypes.REMOVE_ACCOUNT, (accountID) ->\n            _accounts = _accounts.delete accountID\n            @_setCurrentAccount @getDefault()\n            @emit 'change'\n\n        handle ActionTypes.RECEIVE_MAILBOX_UPDATE, (boxData) ->\n            setMailbox boxData.accountID, boxData.id, boxData\n            if boxData.nbRecent > 0\n                message = t 'notif new',\n                    smart_count: boxData.nbRecent\n                    box: boxData.label\n                    account: @getByID(boxData.accountID).get 'label'\n                @emit 'notify', t('notif new title'), body: message\n            @emit 'change'\n\n    ###\n        Public API\n    ###\n    getAll: -> return _accounts\n\n    getByID: (accountID) ->\n        return _accounts.get accountID\n\n    getByLabel: (label) ->\n        _accounts.find (account) -> account.get('label') is label\n\n    getDefault: -> return _accounts.first() or null\n\n    getDefaultMailbox: (accountID) ->\n\n        account = _accounts.get(accountID) or @getDefault()\n        return null unless account\n\n        mailboxes = account.get('mailboxes')\n        mailbox = mailboxes.filter (mailbox) ->\n            return mailbox.get('label').toLowerCase() is 'inbox'\n        if mailbox.count() isnt 0\n            return mailbox.first()\n        else\n            favorites = account.get('favorites')\n            defaultID = if favorites? then favorites[0]\n\n            return if defaultID then mailboxes.get defaultID\n            else mailboxes.first()\n\n    getSelected: -> return _selectedAccount\n\n    getSelectedMailboxes: (sorted) ->\n\n        return Immutable.OrderedMap.empty() unless _selectedAccount?\n\n        result = Immutable.OrderedMap()\n        mailboxes = _selectedAccount.get('mailboxes')\n        if sorted\n            mailboxes = mailboxes.sort _mailboxSort\n        mailboxes.forEach (data) ->\n            mailbox = Immutable.Map data\n            result = result.set mailbox.get('id'), mailbox\n            return true\n\n        return result\n\n\n    getSelectedMailbox: (selectedID) ->\n        mailboxes = @getSelectedMailboxes()\n        if selectedID?\n            return mailboxes.get selectedID\n        else if _selectedMailbox?\n            return _selectedMailbox\n        else\n            return mailboxes.first()\n\n    getSelectedFavorites: (sorted) ->\n\n        mailboxes = @getSelectedMailboxes()\n        ids = _selectedAccount?.get 'favorites'\n\n        if ids?\n            mb = mailboxes\n                .filter (box, key) -> key in ids\n                .toOrderedMap()\n        else\n            mb = mailboxes\n                .toOrderedMap()\n\n        if sorted\n            mb = mb.sort _mailboxSort\n\n        return mb\n\n    getError: -> return _newAccountError\n\n    isWaiting: -> return _newAccountWaiting\n\n\nmodule.exports = new AccountStore()\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes} = require '../constants/app_constants'\n\nclass ContactStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n\n    _query = \"\"\n\n    # all known contacts\n    _contacts = Immutable.OrderedMap.empty()\n    # result of last search\n    _results  = Immutable.OrderedMap.empty()\n\n    _import = (rawResults) ->\n        _results = Immutable.OrderedMap.empty()\n        if rawResults?\n            if not Array.isArray rawResults\n                rawResults = [ rawResults ]\n            convert = (map) ->\n                rawResults.forEach (rawResult) ->\n                    addresses = []\n                    rawResult.datapoints.forEach (point) ->\n                        if point.name is 'email'\n                            addresses.push point.value\n                        if point.name is 'avatar'\n                            rawResult.avatar = point.value\n                    delete rawResult.docType\n                    addresses.forEach (address) ->\n                        rawResult.address = address\n                        contact = Immutable.Map rawResult\n                        map.set address, contact\n            _results  = _results.withMutations convert\n            _contacts = _contacts.withMutations convert\n\n    _import window.contacts\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.RECEIVE_RAW_CONTACT_RESULTS, (rawResults) =>\n            _import rawResults\n            @emit 'change'\n\n        handle ActionTypes.CONTACT_LOCAL_SEARCH, (query) =>\n            query = query.toLowerCase()\n            re = new RegExp query, 'i'\n            _results = _contacts.filter (contact) ->\n                obj  = contact.toObject()\n                full = ''\n                ['address', 'fn'].forEach (key) ->\n                    if typeof obj[key] is 'string'\n                        full += obj[key]\n                return re.test full\n            .toOrderedMap()\n\n            @emit 'change'\n\n    ###\n        Public API\n    ###\n    getResults: ->\n        return _results\n\n    getQuery: -> return _query\n\n    getByAddress: (address) -> return _contacts.get(address)\n\n    getAvatar: (address) ->\n        return _contacts.get(address)?.get 'avatar'\n\nmodule.exports = new ContactStore()\n\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes, Dispositions} = require '../constants/app_constants'\n\nclass LayoutStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n    _disposition =\n        type   : Dispositions.VERTICAL\n        height : 5\n        width  : 6\n    _alert =\n        level: null\n        message: null\n\n    _tasks = Immutable.OrderedMap()\n\n    _shown = true\n\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.SET_DISPOSITION, (disposition) ->\n            if disposition.disposition?\n                _disposition = disposition.disposition\n            else\n                _disposition.type = disposition.type\n                if _disposition.type is Dispositions.VERTICAL\n                    if not disposition.value?\n                        disposition.value = _disposition.width\n                    _disposition.height = 5\n                    _disposition.width  = disposition.value\n                else if _disposition.type is Dispositions.HORIZONTAL\n                    if not disposition.value?\n                        disposition.value = _disposition.height\n                    _disposition.height = disposition.value\n                    _disposition.width  = 6\n                else if _disposition.type is Dispositions.THREE\n                    if not disposition.value?\n                        disposition.value = _disposition.width\n                    _disposition.height = 5\n                    _disposition.width  = disposition.value\n            @emit 'change'\n\n        handle ActionTypes.DISPLAY_ALERT, (value) ->\n            _alert.level   = value.level\n            _alert.message = value.message\n            @emit 'change'\n\n        handle ActionTypes.HIDE_ALERT, (value) ->\n            _alert.level   = null\n            _alert.message = null\n            @emit 'change'\n\n        # Hide alerts on mailbox / account change\n        handle ActionTypes.SELECT_ACCOUNT, (value) ->\n            _alert.level   = null\n            _alert.message = null\n            @emit 'change'\n\n        handle ActionTypes.REFRESH, ->\n            @emit 'change'\n\n        handle ActionTypes.CLEAR_TOASTS, ->\n            _tasks = Immutable.OrderedMap()\n            @emit 'change'\n\n        handle ActionTypes.RECEIVE_TASK_UPDATE, (task) =>\n            task = Immutable.Map task\n            id = task.get('id')\n            _tasks = _tasks.set id, task\n            if task.get('autoclose')\n                remove = =>\n                    _tasks = _tasks.remove id\n                    @emit 'change'\n                setTimeout remove, 3000\n            @emit 'change'\n\n        handle ActionTypes.RECEIVE_TASK_DELETE, (taskid) ->\n            _tasks = _tasks.remove taskid\n            @emit 'change'\n\n        handle ActionTypes.TOASTS_SHOW, ->\n            _shown = true\n            @emit 'change'\n\n        handle ActionTypes.TOASTS_HIDE, ->\n            _shown = false\n            @emit 'change'\n\n    ###\n        Public API\n    ###\n    getDisposition: -> return _disposition\n\n    getAlert: -> return _alert\n\n    getToasts: -> return _tasks\n\n    isShown: -> return _shown\n\nmodule.exports = new LayoutStore()\n","Store = require '../libs/flux/store/store'\nContactStore  = require './contact_store'\nAppDispatcher = require '../app_dispatcher'\n\nAccountStore = require './account_store'\nSocketUtils = require '../utils/socketio_utils'\n\n{ActionTypes, MessageFlags, MessageFilter} =\n        require '../constants/app_constants'\n\nclass MessageStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n\n    _sortField   = 'date'\n    _sortOrder   = 1\n    __getSortFunction = (criteria, order) ->\n        sortFunction = (message1, message2) ->\n            if typeof message1.get is 'function'\n                val1 = message1.get criteria\n                val2 = message2.get criteria\n            else\n                val1 = message1[criteria]\n                val2 = message2[criteria]\n            if val1 > val2 then return -1 * order\n            else if val1 < val2 then return 1 * order\n            else return 0\n\n    __sortFunction = __getSortFunction 'date', 1\n    reverseDateSort = __getSortFunction 'date', -1\n\n    # Creates an OrderedMap of messages\n    _messages = Immutable.Sequence()\n\n        # sort first\n        .sort __sortFunction\n\n        # sets message ID as index\n        .mapKeys (_, message) -> message.id\n\n        # makes message object an immutable Map\n        .map (message) -> Immutable.fromJS message\n        .toOrderedMap()\n\n    _filter       = '-'\n    _params       = sort: '-date'\n    _fetching     = false\n    _currentMessages = Immutable.Sequence()\n    _conversationLengths = Immutable.Map()\n    _conversationMemoize = null\n    _conversationMemoizeID = null\n    _currentID       = null\n    _prevAction      = null\n\n    computeMailboxDiff = (oldmsg, newmsg) ->\n        return {} unless oldmsg\n        changed = false\n\n        wasRead = MessageFlags.SEEN in oldmsg.get 'flags'\n        isRead = MessageFlags.SEEN in newmsg.get 'flags'\n\n        oldboxes = Object.keys oldmsg.get 'mailboxIDs'\n        newboxes = Object.keys newmsg.get 'mailboxIDs'\n\n        out = {}\n        added = _.difference(newboxes, oldboxes)\n        added.forEach (boxid) ->\n            changed = true\n            out[boxid] = nbTotal: +1, nbUnread: if isRead then +1 else 0\n\n        removed = _.difference oldboxes, newboxes\n        removed.forEach (boxid) ->\n            changed = true\n            out[boxid] = nbTotal: -1, nbUnread: if wasRead then -1 else 0\n\n        stayed = _.intersection oldboxes, newboxes\n        deltaUnread = if wasRead and not isRead then +1\n        else if not wasRead and isRead then -1\n        else 0\n        stayed.forEach (boxid) ->\n            changed = true if deltaUnread isnt 0\n            out[boxid] = nbTotal: 0, nbUnread: deltaUnread\n\n        if changed\n            return out\n        else\n            return false\n\n\n    onReceiveRawMessage = (message) ->\n        # create or update\n        if not message.attachments?\n            message.attachments = []\n        if not message.date?\n            message.date = new Date().toISOString()\n        if not message.createdAt?\n            message.createdAt = message.date\n        # Add messageID to every attachment\n\n        message.hasAttachments = message.attachments.length > 0\n        message.attachments = message.attachments.map (file) ->\n            Immutable.Map file\n        message.attachments = Immutable.Vector.from message.attachments\n\n        if not message.flags?\n            message.flags = []\n\n        # message loaded from fixtures for test purpose have a docType\n        # that may cause some troubles\n        delete message.docType\n        message = Immutable.Map message\n\n        oldmsg = _messages.get message.get('id')\n        _messages = _messages.set message.get('id'), message\n        if diff = computeMailboxDiff(oldmsg, message)\n            AccountStore._applyMailboxDiff message.get('accountID'), diff\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.RECEIVE_RAW_MESSAGE, (message) ->\n            onReceiveRawMessage message\n            @emit 'change'\n\n        handle ActionTypes.RECEIVE_RAW_MESSAGES, (messages) ->\n\n            if messages.mailboxID\n                SocketUtils.changeRealtimeScope messages.mailboxID\n\n            if messages.links?\n                if messages.links.next?\n                    # reinit params here for pagination on filtered lists\n                    _params = {}\n                    next   = decodeURIComponent(messages.links.next)\n                    url    = 'http://localhost' + next\n                    url.split('?')[1].split('&').forEach (p) ->\n                        [key, value] = p.split '='\n                        value = '-' if value is ''\n                        _params[key] = value\n\n                SocketUtils.changeRealtimeScope messages.mailboxID,\n                    _params.pageAfter\n\n            if lengths = messages.conversationLengths\n                _conversationLengths = _conversationLengths.merge lengths\n\n            if messages.count? and messages.mailboxID?\n                messages = messages.messages.sort __sortFunction\n\n\n\n            onReceiveRawMessage message for message in messages\n            @emit 'change'\n\n        handle ActionTypes.REMOVE_ACCOUNT, (accountID) ->\n            AppDispatcher.waitFor [AccountStore.dispatchToken]\n            _messages = _messages.filter (message) ->\n                message.get('accountID') isnt accountID\n            .toOrderedMap()\n\n            @emit 'change'\n\n        handle ActionTypes.MESSAGE_SEND, (message) ->\n            onReceiveRawMessage message\n\n        handle ActionTypes.MESSAGE_DELETE, (message) ->\n            onReceiveRawMessage message\n\n        handle ActionTypes.MESSAGE_BOXES, (message) ->\n            onReceiveRawMessage message\n\n        handle ActionTypes.MESSAGE_FLAG, (message) ->\n            onReceiveRawMessage message\n\n        handle ActionTypes.LIST_FILTER, (filter) ->\n            _messages  = _messages.clear()\n            if _filter is filter\n                _filter = '-'\n            else\n                _filter = filter\n            _params =\n                after: '-'\n                flag: _filter\n                before: '-'\n                pageAfter: '-'\n                sort : _params.sort\n\n        handle ActionTypes.LIST_SORT, (sort) ->\n            _messages    = _messages.clear()\n            _sortField   = sort.field\n            currentField = _params.sort.substr(1)\n            currentOrder = _params.sort.substr(0, 1)\n            if currentField is sort.field\n                newOrder   = if currentOrder is '+' then '-' else '+'\n                _sortOrder = -1 * _sortOrder\n            else\n                _sortOrder = -1\n                if sort.field is 'date'\n                    newOrder   = '-'\n                else\n                    newOrder   = '+'\n            _params =\n                after: '-'\n                flag: _params.flag\n                before: '-'\n                pageAfter: '-'\n                sort : newOrder + sort.field\n\n        handle ActionTypes.MESSAGE_ACTION, (action) ->\n            action.target = 'message'\n            _prevAction = action\n\n        handle ActionTypes.CONVERSATION_ACTION, (action) ->\n            action.target = 'conversation'\n            _prevAction = action\n\n        handle ActionTypes.MESSAGE_CURRENT, (value) ->\n            @setCurrentID value.messageID, value.conv\n            @emit 'change'\n\n        handle ActionTypes.SELECT_ACCOUNT, (value) ->\n            @setCurrentID null\n            _params.after     = '-'\n            _params.before    = '-'\n            _params.pageAfter = '-'\n\n        handle ActionTypes.RECEIVE_MESSAGE_DELETE, (id) ->\n            _messages = _messages.remove id\n            @emit 'change'\n\n        handle ActionTypes.MAILBOX_EXPUNGE, (mailboxID) ->\n            _messages = _messages.filter (message) ->\n                mailboxes = Object.keys message.get 'mailboxIDs'\n                return mailboxID not in mailboxes\n            .toOrderedMap()\n\n            @emit 'change'\n\n        handle ActionTypes.SET_FETCHING, (fetching) ->\n            _fetching = fetching\n            @emit 'change'\n\n    ###\n        Public API\n    ###\n    getAll: -> return _messages\n\n    getByID: (messageID) -> _messages.get(messageID) or null\n\n\n    ###*\n    * Get messages from mailbox, with optional pagination\n    *\n    * @param {String}  mailboxID\n    * @param {Boolean} conversation\n    *\n    * @return {Array}\n    ###\n    getMessagesByMailbox: (mailboxID, useConversations) ->\n        conversationIDs = []\n\n        sequence = _messages.filter (message) ->\n            mailboxes = Object.keys message.get 'mailboxIDs'\n            if mailboxID not in mailboxes\n                return false\n\n            if useConversations\n                # one message of each conversation\n                conversationID = message.get 'conversationID'\n                if conversationID in conversationIDs\n                    return false\n                else\n                    conversationIDs.push conversationID\n                    return true\n            else\n                return true\n        .sort(__getSortFunction _sortField, _sortOrder)\n\n        # sequences are lazy so we need .toOrderedMap() to actually execute it\n        _currentMessages = sequence.toOrderedMap()\n        if not _currentID?\n            @setCurrentID _currentMessages.first()?.get 'id'\n        return _currentMessages\n\n    getCurrentID: ->\n        return _currentID\n\n    setCurrentID: (messageID, conv) ->\n        if conv?\n            _conversationMemoizeID = @getByID(messageID).get 'conversationID'\n        _currentID = messageID\n\n    getCurrentConversationID: ->\n        return _conversationMemoizeID\n\n    getPreviousMessage: (isConv) ->\n        if isConv? and isConv\n            if not _conversationMemoize?\n                return null\n            # Conversations displayed\n            idx = _conversationMemoize.findIndex (message) ->\n                return _currentID is message.get 'id'\n            if idx is _conversationMemoize.length - 1\n                # We need first message of previous conversation\n                keys = Object.keys _currentMessages.toJS()\n                idx = keys.indexOf(_conversationMemoize.last().get('id'))\n                if idx < 1\n                    return null\n                else\n                    convID = _currentMessages.get(keys[idx - 1])?.get('conversationID')\n                    return null if not convID?\n                    prev = _messages.filter (message) ->\n                        message.get('conversationID') is convID\n                    .sort reverseDateSort\n                    .first()\n                    return prev\n            else\n                return _conversationMemoize.get(idx + 1)\n        else\n            keys = Object.keys _currentMessages.toJS()\n            idx = keys.indexOf _currentID\n            return if idx is -1 then null else _currentMessages.get keys[idx - 1]\n\n    getNextMessage: (isConv) ->\n        if isConv? and isConv\n            if not _conversationMemoize?\n                return null\n            # Conversations displayed\n            idx = _conversationMemoize.findIndex (message) ->\n                return _currentID is message.get 'id'\n            if idx is 0\n                # We need first message of next conversation\n                keys = Object.keys _currentMessages.toJS()\n                idx = keys.indexOf(_conversationMemoize.last().get('id'))\n                if idx is -1 or idx is (keys.length - 1)\n                    return null\n                else\n                    return _currentMessages.get keys[idx + 1]\n            else\n                return _conversationMemoize.get(idx - 1)\n        else\n            keys = Object.keys _currentMessages.toJS()\n            idx = keys.indexOf _currentID\n            if idx is -1 or idx is (keys.length - 1)\n                return null\n            else\n                return _currentMessages.get keys[idx + 1]\n\n    getConversation: (conversationID) ->\n        _conversationMemoize = _messages\n            .filter (message) ->\n                message.get('conversationID') is conversationID\n            .sort reverseDateSort\n            .toVector()\n        _conversationMemoizeID = conversationID\n\n        return _conversationMemoize\n\n    getConversationsLength: -> return _conversationLengths\n\n    getParams: -> return _params\n\n    getCurrentFilter: -> return _filter\n\n    getPrevAction: -> return _prevAction\n\n    isFetching: -> return _fetching\n\nmodule.exports = new MessageStore()\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes} = require '../constants/app_constants'\n\nrefreshesToImmutable = (refreshes) ->\n    Immutable.Sequence refreshes\n    # sets objectID as index\n    .mapKeys (_, refresh) -> return refresh.objectID\n    .map (refresh) -> Immutable.fromJS refresh\n    .toOrderedMap()\n\nclass RefreshesStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n    _refreshes = refreshesToImmutable window.refreshes or []\n\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n\n        handle ActionTypes.RECEIVE_REFRESH_STATUS, (refreshes) ->\n            _refreshes = refreshesToImmutable refreshes\n\n        handle ActionTypes.RECEIVE_REFRESH_UPDATE, (refresh) ->\n            refresh = Immutable.Map refresh\n            id = refresh.get('objectID')\n            _refreshes = _refreshes.set(id, refresh).toOrderedMap()\n            @emit 'change'\n\n        handle ActionTypes.RECEIVE_REFRESH_DELETE, (refreshID) ->\n            _refreshes = _refreshes.filter (refresh) ->\n                refresh.get('id') isnt refreshID\n            .toOrderedMap()\n            @emit 'change'\n\n    getRefreshing: -> _refreshes\n\nmodule.exports = new RefreshesStore()\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes} = require '../constants/app_constants'\n\nclass SearchStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n\n    _query = \"\"\n\n    # search results are a list of message\n    _results = Immutable.OrderedMap.empty()\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.RECEIVE_RAW_SEARCH_RESULTS, (rawResults) ->\n            if rawResult?\n                _results = _results.withMutations (map) ->\n                    rawResults.forEach (rawResult) ->\n                        message = Immutable.Map rawResult\n                        map.set message.get('id'), message\n            else\n                _results = Immutable.OrderedMap.empty()\n\n            @emit 'change'\n\n        handle ActionTypes.CLEAR_SEARCH_RESULTS, ->\n            _results = Immutable.OrderedMap.empty()\n            @emit 'change'\n\n        handle ActionTypes.SET_SEARCH_QUERY, (query) ->\n            _query = query\n            @emit 'change'\n\n\n    ###\n        Public API\n    ###\n    getResults: -> return _results\n\n    getQuery: -> return _query\n\nmodule.exports = new SearchStore()\n","Store = require '../libs/flux/store/store'\n\n{ActionTypes} = require '../constants/app_constants'\n\nclass SettingsStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n    _settings = Immutable.Map window.settings\n\n    ###\n        Defines here the action handlers.\n    ###\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.SETTINGS_UPDATED, (settings) ->\n            _settings = Immutable.Map settings\n            @emit 'change'\n\n\n    ###\n        Public API\n    ###\n    get: (settingName = null) ->\n        if settingName?\n            return _settings.get settingName\n        else\n            return _settings\n\nmodule.exports = new SettingsStore()\n","XHRUtils = require '../utils/xhr_utils'\n\nActivityUtils = (options) ->\n\n    activity = {}\n\n    XHRUtils.activityCreate options, (error, res) ->\n        if error\n            activity.onerror.call(error)\n        else\n            activity.onsuccess.call(res)\n\n    return activity\n\nmodule.exports = ActivityUtils\n","MessageUtils  = require './message_utils'\nAccountStore  = require '../stores/account_store'\nMessageStore  = require '../stores/message_store'\nSettingsStore = require '../stores/settings_store'\nLayoutActionCreator = require '../actions/layout_action_creator'\n\nonMessageList = ->\n    actions = [\n        \"account.mailbox.messages\",\n        \"account.mailbox.messages.full\"\n    ]\n    return router.current.firstPanel?.action in actions\n\nmodule.exports =\n    getCurrentAccount: ->\n        AccountStore.getSelected()?.toJS()\n\n    getCurrentMailbox: ->\n        AccountStore.getSelectedMailbox()?.toJS()\n\n    getCurrentMessage: ->\n        messageID = MessageStore.getCurrentID()\n        message = MessageStore.getByID messageID\n        return message?.toJS()\n\n    getCurrentActions: ->\n        res = []\n        Object.keys(router.current).forEach (panel) ->\n            if router.current[panel]?\n                res.push router.current[panel].action\n        return res\n\n    messageNew: ->\n        router.navigate('compose/', {trigger: true})\n\n    # update locate (without saving it into settings)\n    setLocale: (lang, refresh) ->\n        window.moment.locale lang\n        locales = {}\n        try\n            locales = require \"../locales/#{lang}\"\n        catch err\n            console.log err\n            locales = require \"../locales/en\"\n        polyglot = new Polyglot()\n        # we give polyglot the data\n        polyglot.extend locales\n        # handy shortcut\n        window.t = polyglot.t.bind polyglot\n        if refresh\n            LayoutActionCreator.refresh()\n\n    getAccountByLabel: (label) ->\n        return AccountStore.getByLabel label\n\n    getSetting: (key) ->\n        return SettingsStore.get().toJS()[key]\n\n    # warning: don't update setting value server side\n    setSetting: (key, value) ->\n        AppDispatcher = require '../app_dispatcher'\n        {ActionTypes} = require '../constants/app_constants'\n        settings = SettingsStore.get().toJS()\n        if typeof key is 'object'\n            for own k, v of key\n                settings[k] = v\n        else\n            settings[key] = value\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SETTINGS_UPDATED\n            value: settings\n\n    messageNavigate: (direction, inConv) ->\n        if not onMessageList()\n            return\n        conv = inConv and SettingsStore.get('displayConversation') and SettingsStore.get('displayPreview')\n        if direction is 'prev'\n            next = MessageStore.getPreviousMessage conv\n        else\n            next = MessageStore.getNextMessage conv\n        if not next?\n            return\n\n        MessageActionCreator = require '../actions/message_action_creator'\n\n        MessageActionCreator.setCurrent next.get('id'), true\n\n        if SettingsStore.get('displayPreview')\n            @messageDisplay next\n\n    messageDisplay: (message) ->\n        if not message?\n            message = MessageStore.getById(MessageStore.getCurrentID())\n        if not message?\n            return\n        if SettingsStore.get('displayConversation')\n            action = 'conversation'\n            params =\n                messageID: message.get 'id'\n                conversationID: message.get 'conversationID'\n        else\n            action = 'message'\n            params =\n                messageID: message.get 'id'\n\n        url = window.router.buildUrl direction: 'second', action: action, parameters: params\n        window.router.navigate url, {trigger: true}\n\n    messageClose: ->\n        closeUrl = window.router.buildUrl\n            direction: 'first'\n            action: 'account.mailbox.messages'\n            parameters:\n                accountID: AccountStore.getSelected().get 'id'\n                mailboxID: AccountStore.getSelectedMailbox().get 'id'\n            fullWidth: true\n        window.router.navigate closeUrl, {trigger: true}\n\n    messageDeleteCurrent: ->\n        if not onMessageList()\n            return\n        messageID = MessageStore.getCurrentID()\n        if not messageID?\n            return\n        settings = SettingsStore.get()\n        MessageUtils.delete messageID, settings.get 'displayConversation',\n            settings.get 'messageConfirmDelete'\n\n    messageUndo: ->\n        MessageActionCreator = require '../actions/message_action_creator'\n        MessageActionCreator.undelete()\n\n    customEvent: (name, data) ->\n        domEvent = new CustomEvent name, detail: data\n        window.dispatchEvent domEvent\n\n    simulateUpdate: ->\n\n        AppDispatcher = require '../app_dispatcher'\n        window.setInterval ->\n            content =\n                \"accountID\": AccountStore.getDefault()?.get('id'),\n                \"id\": AccountStore.getDefaultMailbox()?.get('id'),\n                \"label\": \"INBOX\",\n                \"path\": \"INBOX\",\n                \"tree\": [\"INBOX\"],\n                \"delimiter\": \".\",\n                \"uidvalidity\": Date.now()\n                \"attribs\":[],\n                \"docType\": \"Mailbox\",\n                \"lastSync\": new Date().toISOString(),\n                \"nbTotal\": 467,\n                \"nbUnread\": 0,\n                \"nbRecent\": 5,\n                \"weight\": 1000,\n                \"depth\": 0\n            AppDispatcher.handleServerAction\n                type: 'RECEIVE_MAILBOX_UPDATE'\n                value: content\n        , 5000\n\n    notify: (title, options) ->\n        if window.Notification? and SettingsStore.get 'desktopNotifications'\n            new Notification title, options\n        else\n            # If no option given, use title as notification body\n            if not options?\n                options =\n                    body: title\n            # prevent dispatching when already dispatching\n            window.setTimeout ->\n                LayoutActionCreator.notify \"#{title} - #{options.body}\"\n            , 0\n\n    # Send errors to serveur\n    # Usage: window.cozyMails.log(new Error('message'))\n    log: (error) ->\n        url = error.stack.split('\\n')[0].split('@')[1].split(/:\\d/)[0].split('/').slice(0, -2).join('/')\n        window.onerror error.name, url, error.lineNumber, error.colNumber, error\n\n    # Debug: allow to dump component tree\n    dump: ->\n        _dump = (root) ->\n            res =\n                children: {}\n                state: {}\n                props: {}\n            for key, value of root.state\n                if (typeof root.state[key] is 'object')\n                    res.state[key] = '{object}'\n                else\n                    res.state[key] = value\n            for key, value of root.props\n                if (typeof root.props[key] is 'object')\n                    res.props[key] = '{object}'\n                else\n                    res.props[key] = value\n            for key, value of root.refs\n                res.children[key] = _dump root.refs[key]\n\n            return res\n\n        _dump window.rootComponent\n\n","\nmodule.exports = DomUtils =\n\n    # Check if an element is inside visible viewport\n    # @params DOMElement node\n    isVisible: (node) ->\n        # Get the element bounding client rect and check if it's inside\n        # visible viewport\n        rect   = node.getBoundingClientRect()\n        height = window.innerHeight or document.documentElement.clientHeight\n        width  = window.innerWidth  or document.documentElement.clientWidth\n        return rect.bottom <= ( height + 0 ) and rect.top >= 0\n\n\n","{ComposeActions} = require '../constants/app_constants'\nContactStore     = require '../stores/contact_store'\nMessageStore     = require '../stores/message_store'\nConversationActionCreator = require '../actions/conversation_action_creator'\nMessageActionCreator      = require '../actions/message_action_creator'\n\nmodule.exports = MessageUtils =\n\n    displayAddress: (address, full = false) ->\n        if full\n            if address.name? and address.name isnt \"\"\n                return \"\\\"#{address.name}\\\" <#{address.address}>\"\n            else\n                return \"#{address.address}\"\n        else\n            if address.name? and address.name isnt \"\"\n                return address.name\n            else\n                return address.address.split('@')[0]\n\n    displayAddresses: (addresses, full = false) ->\n        if not addresses?\n            return \"\"\n\n        res = []\n        for item in addresses\n            if not item?\n                break\n            res.push(MessageUtils.displayAddress item, full)\n        return res.join \", \"\n\n    parseAddress: (text) ->\n        text = text.trim()\n        if match = text.match /\"{0,1}(.*)\"{0,1} <(.*)>/\n            address =\n                name: match[1]\n                address: match[2]\n        else\n            address =\n                address: text.replace(/^\\s*/, '')\n\n    getReplyToAddress: (message) ->\n        reply = message.get 'replyTo'\n        from = message.get 'from'\n        if (reply? and reply.length isnt 0)\n            return reply\n        else\n            return from\n\n    makeReplyMessage: (myAddress, inReplyTo, action, inHTML) ->\n        message =\n            composeInHTML: inHTML\n            attachments: Immutable.Vector.empty()\n\n        if inReplyTo\n            message.accountID = inReplyTo.get 'accountID'\n            dateHuman = @formatDate inReplyTo.get 'createdAt'\n            sender = @displayAddresses inReplyTo.get 'from'\n\n            text = inReplyTo.get 'text'\n            html = inReplyTo.get 'html'\n\n            if text and not html and inHTML\n                try\n                    html = markdown.toHTML text\n                catch e\n                    console.log \"Error converting text message to Markdown: #{e}\"\n                    html = \"<div class='text'>#{text}</div>\" #markdown.toHTML text\n\n            if html and not text and not inHTML\n                text = toMarkdown html\n\n            message.inReplyTo  = inReplyTo.get 'id'\n            message.references = inReplyTo.get('references') or []\n            message.references = message.references.concat message.inReplyTo\n\n        switch action\n            when ComposeActions.REPLY\n                message.to = @getReplyToAddress inReplyTo\n                message.cc = []\n                message.bcc = []\n                message.subject = \"#{t 'compose reply prefix'}#{inReplyTo.get 'subject'}\"\n                message.text = t('compose reply separator', {date: dateHuman, sender: sender}) +\n                    @generateReplyText(text) + \"\\n\"\n                message.html = \"\"\"\n                    <p><br /></p>\n                    <p>#{t('compose reply separator', {date: dateHuman, sender: sender})}<span class=\"originalToggle\"> … </span></p>\n                    <blockquote>#{html}</blockquote>\n                    <p><br /></p>\n                    \"\"\"\n            when ComposeActions.REPLY_ALL\n                message.to = @getReplyToAddress inReplyTo\n                # filter to don't have same address twice\n                toAddresses = message.to.map (dest) -> return dest.address\n                message.cc = [].concat(inReplyTo.get('from'), inReplyTo.get('to'), inReplyTo.get('cc')).filter (dest) ->\n                    return dest? and toAddresses.indexOf(dest.address) is -1\n                message.bcc = []\n                message.subject = \"#{t 'compose reply prefix'}#{inReplyTo.get 'subject'}\"\n                message.text = t('compose reply separator', {date: dateHuman, sender: sender}) +\n                    @generateReplyText(text) + \"\\n\"\n                message.html = \"\"\"\n                    <p><br /></p>\n                    <p>#{t('compose reply separator', {date: dateHuman, sender: sender})}<span class=\"originalToggle\"> … </span></p>\n                    <blockquote>#{html}</blockquote>\n                    <p><br /></p>\n                    \"\"\"\n            when ComposeActions.FORWARD\n                message.to = []\n                message.cc = []\n                message.bcc = []\n                message.subject = \"#{t 'compose forward prefix'}#{inReplyTo.get 'subject'}\"\n                message.text = t('compose forward separator', {date: dateHuman, sender: sender}) + text\n                message.html = \"<p>#{t('compose forward separator', {date: dateHuman, sender: sender})}</p>\" + html\n\n                # Add original message attachments\n                message.attachments = inReplyTo.get 'attachments'\n\n            when null\n                message.to      = []\n                message.cc      = []\n                message.bcc     = []\n                message.subject = ''\n                message.text    = t 'compose default'\n                message.html    = t 'compose default'\n\n        # remove my address from dests\n        notMe = (dest) -> return dest.address isnt myAddress\n        message.to = message.to.filter notMe\n        message.cc = message.cc.filter notMe\n        return message\n\n    generateReplyText: (text) ->\n        text = text.split '\\n'\n        res  = []\n        text.forEach (line) ->\n            res.push \"> #{line}\"\n        return res.join \"\\n\"\n\n    getAttachmentType: (type) ->\n        return null unless type\n        sub = type.split '/'\n        switch sub[0]\n            when 'audio', 'image', 'text', 'video'\n                return sub[0]\n            when \"application\"\n                switch sub[1]\n                    when \"vnd.ms-excel\",\\\n                         \"vnd.oasis.opendocument.spreadsheet\",\\\n                         \"vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n                        return \"spreadsheet\"\n                    when \"msword\",\\\n                         \"vnd.ms-word\",\\\n                         \"vnd.oasis.opendocument.text\",\\\n                         \"vnd.openxmlformats-officedocument.wordprocessingm\" + \\\n                         \"l.document\"\n                        return \"word\"\n                    when \"vns.ms-powerpoint\",\\\n                         \"vnd.oasis.opendocument.presentation\",\\\n                         \"vnd.openxmlformats-officedocument.presentationml.\" + \\\n                         \"presentation\"\n                        return \"presentation\"\n\n                    when \"pdf\" then return sub[1]\n                    when \"gzip\", \"zip\" then return 'archive'\n\n    formatDate: (date, compact) ->\n        if not date?\n            return\n        today = moment()\n        date  = moment date\n        if date.isBefore today, 'year'\n            formatter = 'DD/MM/YYYY'\n        else if date.isBefore today, 'day'\n            if compact? and compact\n                formatter = 'L'\n            else\n                formatter = 'MMM DD'\n        else\n            formatter = 'HH:mm'\n        return date.format formatter\n\n    getAvatar: (message) ->\n        if message.get('from')[0]?\n            return ContactStore.getAvatar message.get('from')[0].address\n        else\n            return null\n\n    # Delete message(s) or conversations\n    #\n    # @params {Mixed}    ids          messageID or Message or array of messageIDs or Messages\n    # @params {Boolean}  conversation true to delete whole conversation\n    # @params {Boolean}  confirm      true to ask user to confirm\n    # @params {Function} cb           callback\n    delete: (ids, conversation, confirm, cb) ->\n        if Array.isArray ids\n            mass = ids.length\n            selected = ids\n        else\n            mass = 1\n            selected = [ids]\n\n        if selected.length > 1\n            window.cozyMails.messageClose()\n\n        # Called one every message has been deleted\n        onDeleted = _.after selected.length, ->\n            # If we deleted only one message, navigate to the next one, otherwise close preview panel and select first message\n            if selected.length is 1\n                window.cozyMails.messageNavigate()\n            if typeof cb is 'function'\n                cb()\n\n        # Delete one message\n        deleteMessage = (messageID) ->\n            MessageActionCreator.delete messageID, (error) ->\n                if error?\n                    alertError \"#{t(\"message action delete ko\")} #{error}\"\n                onDeleted()\n\n        # Delete one conversation\n        deleteConversation = (messageID) ->\n            if typeof messageID is 'string'\n                message = MessageStore.getByID messageID\n            else\n                message   = messageID\n                messageID = message.get 'id'\n            # sometime, draft messages don't have a conversationID\n            conversationID = message.get 'conversationID'\n            if conversationID?\n                ConversationActionCreator.delete conversationID, (error) ->\n                    if error?\n                        alertError \"#{t(\"conversation delete ko\")} #{error}\"\n                    onDeleted()\n            else\n                deleteMessage(messageID)\n\n        if conversation\n            confirmMessage = t 'list delete conv confirm', smart_count: selected.length\n        else\n            confirmMessage = t 'list delete confirm', smart_count: selected.length\n\n        if (not confirm) or\n        window.confirm confirmMessage\n            selected.forEach (messageID) ->\n                if conversation\n                    deleteConversation messageID\n                else\n                    if typeof messageID isnt 'string'\n                        messageID = messageID.get 'id'\n                    deleteMessage messageID\n","helpers =\n    # Display a Bootstrap modal window\n    #\n    # Available options:\n    # title: modal window title\n    # body: modal window body\n    # size: null, 'small' or 'large'\n    # show: if not false, show modal\n    modal: (options) ->\n        win = document.createElement 'div'\n        win.classList.add 'modal'\n        win.classList.add 'fade'\n        win.innerHTML = \"\"\"\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n                            aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                    <h4 class=\"modal-title\"></h4>\n                </div>\n                <div class=\"modal-body\"> </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-default\"\n                            data-dismiss=\"modal\">#{t 'plugin modal close'}\n                    </button>\n                </div>\n            </div>\n        </div>\n        \"\"\"\n        if options.title?\n            win.querySelector('.modal-title').innerHTML = options.title\n        if options.body?\n            if typeof options.body is 'string'\n                win.querySelector('.modal-body').innerHTML = options.body\n            else\n                win.querySelector('.modal-body').appendChild options.body\n        if options.size is 'small'\n            win.querySelector('.modal-dialog').classList.add 'modal-sm'\n        if options.size is 'large'\n            win.querySelector('.modal-dialog').classList.add 'modal-lg'\n        if options.show isnt false\n            document.body.appendChild win\n            window.jQuery(win).modal 'show'\n        return win\n\nmodule.exports =\n\n    init: ->\n        if not window.plugins?\n            window.plugins = {}\n\n        # Observe addition and deletion of plugins\n        #if Object.observe?\n        #    Object.observe window.plugins, (changes) =>\n        #        changes.forEach (change) =>\n        #            if change.type is 'add'\n        #                @activate change.name\n        #            else if change.type is 'delete'\n        #                @deactivate change.name\n\n        window.plugins.helpers = helpers\n\n        # Init every plugins\n        Object.keys(window.plugins).forEach (pluginName) =>\n            pluginConf = window.plugins[pluginName]\n            if pluginConf.url?\n                onLoad = =>\n                    @activate pluginName\n                @loadJS pluginConf.url, onLoad\n            else\n                if pluginConf.active\n                    @activate pluginName\n\n        if MutationObserver?\n\n            config =\n                attributes: false\n                childList: true\n                characterData: false\n                subtree: true\n\n            onMutation = (mutations) ->\n                checkNode = (node, action) ->\n                    if node.nodeType isnt Node.ELEMENT_NODE\n                        return\n\n                    for own pluginName, pluginConf of window.plugins\n                        if pluginConf.active\n                            listener = pluginConf.onAdd if action is 'add'\n                            listener = pluginConf.onDelete if action is 'delete'\n                            if listener? and\n                            listener.condition.bind(pluginConf)(node)\n                                listener.action.bind(pluginConf)(node)\n\n                check = (mutation) ->\n\n                    nodes = Array.prototype.slice.call mutation.addedNodes\n                    checkNode node, 'add' for node in nodes\n\n                    nodes = Array.prototype.slice.call mutation.removedNodes\n                    checkNode node, 'del' for node in nodes\n\n                check mutation for mutation in mutations\n\n            # Observes DOM mutation to see if a plugin should be called\n            observer = new MutationObserver onMutation\n            observer.observe document, config\n\n        else\n            # Dirty fallback for IE\n            # @TODO use polyfill ???\n            setInterval ->\n                for own pluginName, pluginConf of window.plugins\n                    if pluginConf.active\n                        if pluginConf.onAdd?\n                            if pluginConf.onAdd.condition.bind(pluginConf)(document.body)\n                                pluginConf.onAdd.action.bind(pluginConf)(document.body)\n                        if pluginConf.onDelete?\n                            if pluginConf.onDelete.condition.bind(pluginConf)(document.body)\n                                pluginConf.onDelete.action.bind(pluginConf)(document.body)\n\n            , 200\n\n    activate: (key) ->\n        try\n            plugin = window.plugins[key]\n            type   = plugin.type\n            plugin.active = true\n\n            # Add custom events listeners\n            if plugin.listeners?\n                for own event, listener of plugin.listeners\n                    window.addEventListener event, listener.bind(plugin)\n\n            if plugin.onActivate\n                plugin.onActivate()\n\n            if type?\n                for own pluginName, pluginConf of window.plugins\n                    if pluginName is key\n                        continue\n                    if pluginConf.type is type and pluginConf.active\n                        @deactivate pluginName\n\n            event = new CustomEvent('plugin',\n                detail:\n                    action: 'activate'\n                    name: key\n            )\n            window.dispatchEvent event\n        catch e\n            console.log \"Unable to activate plugin #{key}: #{e}\"\n\n    deactivate: (key) ->\n        try\n            plugin = window.plugins[key]\n            plugin.active = false\n\n            # remove custom events listeners\n            if plugin.listeners?\n                for own event, listener of plugin.listeners\n                    window.removeEventListener event, listener\n\n            if plugin.onDeactivate\n                plugin.onDeactivate()\n\n            event = new CustomEvent('plugin',\n                detail:\n                    action: 'deactivate'\n                    name: key\n            )\n            window.dispatchEvent event\n        catch e\n            console.log \"Unable to deactivate plugin #{key}: #{e}\"\n\n    merge: (remote) ->\n        for own pluginName, pluginConf of remote\n            local = window.plugins[pluginName]\n            if local?\n                local.active = pluginConf.active\n            else\n                if pluginConf.url?\n                    window.plugins[pluginName] = pluginConf\n                else\n                    delete remote[pluginName]\n\n        for own pluginName, pluginConf of window.plugins\n            if not remote[pluginName]?\n                remote[pluginName] =\n                    name: pluginConf.name\n                    active: pluginConf.active\n\n    loadJS: (url, onLoad) ->\n        script = document.createElement 'script'\n        script.type  = 'text/javascript'\n        script.async = true\n        script.src   = url\n        if onLoad?\n            script.addEventListener 'load', onLoad\n        document.body.appendChild script\n\n    load: (url) ->\n        # Get absolute path of this script, allowing to load plugins relatives\n        # to it\n        unless /:\\/\\//.test(url)\n            try\n                throw new Error()\n            catch e\n                base = e.stack.split('\\n')[0].split('@')[1].split(/:\\d/)[0].split('/').slice(0, -2).join('/')\n                url = base + '/' + url + '/'\n\n        xhr = new XMLHttpRequest()\n        xhr.open 'GET', url, true\n        xhr.onload = ->\n            parser = new DOMParser()\n            doc = parser.parseFromString(xhr.response, 'text/html')\n            if doc\n                # Chrome doesn't like to iterate on doc.styleSheets\n                Array::forEach.call doc.querySelectorAll('style'), (sheet) ->\n                    style = document.createElement('style')\n                    document.body.appendChild style\n                    Array::forEach.call sheet.sheet.cssRules, (rule, id) ->\n                        style.sheet.insertRule rule.cssText, id\n\n                Array::forEach.call doc.querySelectorAll('script'), (script) ->\n                    s = document.createElement('script')\n                    s.textContent = script.textContent\n                    document.body.appendChild s\n\n            xhr.send()\n","AppDispatcher = require '../app_dispatcher'\n{ActionTypes} = require '../constants/app_constants'\nurl = window.location.origin\npathToSocketIO = \"#{window.location.pathname}socket.io\"\nsocket = io.connect url, path: pathToSocketIO\n\ndispatchAs = (action) -> (content) ->\n    AppDispatcher.handleServerAction\n        type: action\n        value: content\n\nscope = {}\nsetServerScope = ->\n    socket.emit 'change_scope', scope\n\n\nsocket.on 'refresh.status', dispatchAs ActionTypes.RECEIVE_REFRESH_STATUS\nsocket.on 'refresh.create', dispatchAs ActionTypes.RECEIVE_REFRESH_UPDATE\nsocket.on 'refresh.update', dispatchAs ActionTypes.RECEIVE_REFRESH_UPDATE\nsocket.on 'refresh.delete', dispatchAs ActionTypes.RECEIVE_REFRESH_DELETE\n\nsocket.on 'message.create', dispatchAs ActionTypes.RECEIVE_RAW_MESSAGE\nsocket.on 'message.update', dispatchAs ActionTypes.RECEIVE_RAW_MESSAGE\nsocket.on 'message.delete', dispatchAs ActionTypes.RECEIVE_MESSAGE_DELETE\n\nsocket.on 'mailbox.update', dispatchAs ActionTypes.RECEIVE_MAILBOX_UPDATE\n\nsocket.on 'connect', ->\n    setServerScope()\nsocket.on 'reconnect', ->\n    setServerScope()\n\nexports.acknowledgeRefresh = (taskid) ->\n    socket.emit 'mark_ack', taskid\n\n\nexports.changeRealtimeScope = (boxid, date) ->\n    scope =\n        mailboxID: boxid\n        before: date\n    setServerScope()\n","{MailboxFlags} = require '../../constants/app_constants'\n\nmodule.exports = AccountTranslator =\n\n    mailboxToImmutable: (raw) ->\n\n        raw.depth = raw.tree.length - 1\n\n        box = Immutable.Map raw\n\n    # Creates an immutable account from a raw account object\n    toImmutable: (raw) ->\n\n        # Used to sort mailboxes\n        last = {}\n        weight1 = 900\n        weight2 = 400\n        # Try to detect special mailboxes, first with flags, then by name\n        # Already done on server, except for TEST accounts\n        raw.mailboxes = [] if not raw.mailboxes?\n        if not raw.draftMailbox? or\n           not raw.sentMailbox? or\n           not raw.trashMailbox?\n            raw.mailboxes.forEach (box) ->\n                # If needed, use mailboxes attribs to set draft, sent and trash\n                if not raw.draftMailbox? and MailboxFlags.DRAFT in box.attribs\n                    raw.draftMailbox = box.id\n                if not raw.sentMailbox? and MailboxFlags.SENT in box.attribs\n                    raw.sentMailbox = box.id\n                if not raw.trashMailbox? and MailboxFlags.TRASH in box.attribs\n                    raw.trashMailbox = box.id\n        if not raw.draftMailbox? or\n           not raw.sentMailbox? or\n           not raw.trashMailbox?\n            raw.mailboxes.forEach (box) ->\n                if not raw.draftMailbox? and /draft/i.test box.label\n                    raw.draftMailbox = box.id\n                if not raw.sentMailbox? and /sent/i.test box.label\n                    raw.sentMailbox = box.id\n                if not raw.trashMailbox? and /trash/i.test box.label\n                    raw.trashMailbox = box.id\n\n        # Creates Immutable OrderedMap of mailboxes\n        mailboxes = Immutable.Sequence raw.mailboxes\n            .mapKeys (_, box) -> box.id\n            .map (box) ->\n\n                box.depth = box.tree.length - 1\n\n                # fake weight for sort\n                if box.depth is 0\n                    label = box.label.toLowerCase()\n                    if label is 'inbox'\n                        box.weight = 1000\n                    else if (box.attribs.length > 0 or\n                            /draft/.test(label) or /sent/.test(label) or /trash/.test(label))\n                        box.weight = weight1\n                        weight1 -= 5\n                    else\n                        box.weight = weight2\n                        weight2 -= 5\n                    last[box.depth] = box.weight\n                else\n                    box.weight = last[box.depth - 1] - 0.1\n\n                return AccountTranslator.mailboxToImmutable box\n\n            .toOrderedMap()\n\n\n        raw.mailboxes = mailboxes\n        return Immutable.Map raw\n","request = superagent\n\nAccountTranslator = require './translators/account_translator'\n\nSettingsStore = require '../stores/settings_store'\n\nmodule.exports =\n\n\n    changeSettings: (settings, callback) ->\n        request.put \"settings\"\n        .set 'Accept', 'application/json'\n        .send settings\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in changeSettings\", settings, res.body?.error\n                callback t('app error')\n\n    fetchMessage: (emailID, callback) ->\n        request.get \"message/#{emailID}\"\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in fetchMessage\", emailID, res.body?.error\n                callback t('app error')\n\n    fetchConversation: (emailID, callback) ->\n        request.get \"conversation/#{emailID}\"\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in fetchConversation\", emailID, res.body?.error\n                callback t('app error')\n\n\n    fetchMessagesByFolder: (mailboxID, query, callback) ->\n        for own key, val of query\n            if val is '-' or val is 'all'\n                delete query[key]\n        request.get \"mailbox/#{mailboxID}\"\n        .set 'Accept', 'application/json'\n        .query query\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in fetchMessagesByFolder\", res.body?.error\n                callback t('app error')\n\n    mailboxCreate: (mailbox, callback) ->\n        request.post \"mailbox\"\n        .send mailbox\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in mailboxCreate\", mailbox, res.body?.error\n                callback t('app error')\n\n    mailboxUpdate: (data, callback) ->\n        request.put \"mailbox/#{data.mailboxID}\"\n        .send data\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in mailboxUpdate\", data, res.body?.error\n                callback t('app error')\n\n    mailboxDelete: (data, callback) ->\n        request.del \"mailbox/#{data.mailboxID}\"\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in mailboxDelete\", data, res.body?.error\n                callback t('app error')\n\n    mailboxExpunge: (data, callback) ->\n        request.del \"mailbox/#{data.mailboxID}/expunge\"\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in mailboxExpunge\", data, res.body?.error\n                callback t('app error')\n\n    messageSend: (message, callback) ->\n        req = request.post \"message\"\n        .set 'Accept', 'application/json'\n\n        files = {}\n        message.attachments = message.attachments.map (file) ->\n            files[file.get('generatedFileName')] = file.get 'rawFileObject'\n            return file.remove 'rawFileObject'\n        .toJS()\n\n        req.field 'body', JSON.stringify message\n        for name, blob of files\n            if blob?\n                req.attach name, blob\n\n        req.end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in messageSend\", message, res.body?.error\n                callback res.body?.error?.message\n\n    messagePatch: (messageID, patch, callback) ->\n        request.patch \"message/#{messageID}\", patch\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in messagePatch\", messageID, res.body?.error\n                callback t('app error')\n\n    conversationDelete: (conversationID, callback) ->\n        request.del \"conversation/#{conversationID}\"\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in conversationDelete\", conversationID, res.body?.error\n                callback t('app error')\n\n    conversationPatch: (conversationID, patch, callback) ->\n        request.patch \"conversation/#{conversationID}\", patch\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in conversationPatch\", conversationID, res.body?.error\n                callback t('app error')\n\n    createAccount: (account, callback) ->\n\n        # TODO: validation & sanitization\n\n        request.post 'account'\n        .send account\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in createAccount\", account, res.body?.error\n                callback res.body, null\n\n    editAccount: (account, callback) ->\n\n        # TODO: validation & sanitization\n        rawAccount = account.toJS()\n\n        request.put \"account/#{rawAccount.id}\"\n        .send rawAccount\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in editAccount\", account, res.body?.error\n                callback res.body, null\n\n    checkAccount: (account, callback) ->\n\n        rawAccount = account.toJS()\n\n        request.put \"account/#{rawAccount.id}/check\"\n        .send rawAccount\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in checkAccount\", res.body\n                callback res.body, null\n\n    removeAccount: (accountID) ->\n\n        request.del \"account/#{accountID}\"\n        .set 'Accept', 'application/json'\n        .end (res) -> # nothing\n\n    accountDiscover: (domain, callback) ->\n\n        request.get \"provider/#{domain}\"\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                callback res.body, null\n\n    search: (query, numPage, callback) ->\n        encodedQuery = encodeURIComponent query\n        numByPage = SettingsStore.get 'messagesPerPage'\n        request.get \"search/#{encodedQuery}/page/#{numPage}/limit/#{numByPage}\"\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in search\", res.body?.error\n                callback res.body, null\n\n    refresh: (hard, callback) ->\n        url = if hard then \"refresh?all=true\"\n        else \"refresh\"\n\n        request.get url\n        .end (res) ->\n            if res.ok\n                callback null, res.text\n            else\n                callback res.body\n\n    activityCreate: (options, callback) ->\n        request.post \"activity\"\n        .send options\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                console.log \"Error in activityCreate\", options, res.body?.error\n                callback res.body, null\n"]}